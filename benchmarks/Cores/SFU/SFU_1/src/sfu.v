/* Generated by Yosys 0.47+61 (git sha1 81011ad92, clang++ 18.1.8 -fPIC -O3) */

module clz_32_c4ea21bb365bbeeaf5f2c654883e56d11e43c44e(i_data, o_zeros, o_msb_zeros);
  wire ghdl_rtil_signal_00_;
  wire ghdl_rtil_signal_01_;
  wire ghdl_rtil_signal_02_;
  wire ghdl_rtil_signal_03_;
  wire ghdl_rtil_signal_04_;
  wire ghdl_rtil_signal_05_;
  wire ghdl_rtil_signal_06_;
  wire ghdl_rtil_signal_07_;
  wire ghdl_rtil_signal_08_;
  wire ghdl_rtil_signal_09_;
  wire ghdl_rtil_signal_10_;
  wire ghdl_rtil_signal_11_;
  wire ghdl_rtil_signal_12_;
  wire ghdl_rtil_signal_13_;
  wire ghdl_rtil_signal_14_;
  wire ghdl_rtil_signal_15_;
  wire ghdl_rtil_signal_16_;
  wire ghdl_rtil_signal_17_;
  wire ghdl_rtil_signal_18_;
  wire ghdl_rtil_signal_19_;
  wire ghdl_rtil_signal_20_;
  wire ghdl_rtil_signal_21_;
  wire ghdl_rtil_signal_22_;
  wire ghdl_rtil_signal_23_;
  wire ghdl_rtil_signal_24_;
  wire ghdl_rtil_signal_25_;
  wire ghdl_rtil_signal_26_;
  wire ghdl_rtil_signal_27_;
  input [31:0] i_data;
  wire [31:0] i_data;
  output o_msb_zeros;
  wire o_msb_zeros;
  output [4:0] o_zeros;
  wire [4:0] o_zeros;
  wire [4:0] s_zeros;
  wire [31:0] \u:1.aux ;
  wire [15:0] \u:2.aux ;
  wire [7:0] \u:3.aux ;
  wire [3:0] \u:4.aux ;
  wire [4:0] w_and;
  wire [159:0] w_or;
  assign \u:1.aux [0] = ~ i_data[1];
  assign w_or[96] = i_data[3] | i_data[2];
  assign \u:1.aux [1] = i_data[2] | \u:1.aux [0];
  assign ghdl_rtil_signal_00_ = ~ i_data[3];
  assign \u:1.aux [2] = ghdl_rtil_signal_00_ & \u:1.aux [1];
  assign w_or[97] = i_data[5] | i_data[4];
  assign \u:1.aux [3] = i_data[4] | \u:1.aux [2];
  assign ghdl_rtil_signal_01_ = ~ i_data[5];
  assign \u:1.aux [4] = ghdl_rtil_signal_01_ & \u:1.aux [3];
  assign w_or[98] = i_data[7] | i_data[6];
  assign \u:1.aux [5] = i_data[6] | \u:1.aux [4];
  assign ghdl_rtil_signal_02_ = ~ i_data[7];
  assign \u:1.aux [6] = ghdl_rtil_signal_02_ & \u:1.aux [5];
  assign w_or[99] = i_data[9] | i_data[8];
  assign \u:1.aux [7] = i_data[8] | \u:1.aux [6];
  assign ghdl_rtil_signal_03_ = ~ i_data[9];
  assign \u:1.aux [8] = ghdl_rtil_signal_03_ & \u:1.aux [7];
  assign w_or[100] = i_data[11] | i_data[10];
  assign \u:1.aux [9] = i_data[10] | \u:1.aux [8];
  assign ghdl_rtil_signal_04_ = ~ i_data[11];
  assign \u:1.aux [10] = ghdl_rtil_signal_04_ & \u:1.aux [9];
  assign w_or[101] = i_data[13] | i_data[12];
  assign \u:1.aux [11] = i_data[12] | \u:1.aux [10];
  assign ghdl_rtil_signal_05_ = ~ i_data[13];
  assign \u:1.aux [12] = ghdl_rtil_signal_05_ & \u:1.aux [11];
  assign w_or[102] = i_data[15] | i_data[14];
  assign \u:1.aux [13] = i_data[14] | \u:1.aux [12];
  assign ghdl_rtil_signal_06_ = ~ i_data[15];
  assign \u:1.aux [14] = ghdl_rtil_signal_06_ & \u:1.aux [13];
  assign w_or[103] = i_data[17] | i_data[16];
  assign \u:1.aux [15] = i_data[16] | \u:1.aux [14];
  assign ghdl_rtil_signal_07_ = ~ i_data[17];
  assign \u:1.aux [16] = ghdl_rtil_signal_07_ & \u:1.aux [15];
  assign w_or[104] = i_data[19] | i_data[18];
  assign \u:1.aux [17] = i_data[18] | \u:1.aux [16];
  assign ghdl_rtil_signal_08_ = ~ i_data[19];
  assign \u:1.aux [18] = ghdl_rtil_signal_08_ & \u:1.aux [17];
  assign w_or[105] = i_data[21] | i_data[20];
  assign \u:1.aux [19] = i_data[20] | \u:1.aux [18];
  assign ghdl_rtil_signal_09_ = ~ i_data[21];
  assign \u:1.aux [20] = ghdl_rtil_signal_09_ & \u:1.aux [19];
  assign w_or[106] = i_data[23] | i_data[22];
  assign \u:1.aux [21] = i_data[22] | \u:1.aux [20];
  assign ghdl_rtil_signal_10_ = ~ i_data[23];
  assign \u:1.aux [22] = ghdl_rtil_signal_10_ & \u:1.aux [21];
  assign w_or[107] = i_data[25] | i_data[24];
  assign \u:1.aux [23] = i_data[24] | \u:1.aux [22];
  assign ghdl_rtil_signal_11_ = ~ i_data[25];
  assign \u:1.aux [24] = ghdl_rtil_signal_11_ & \u:1.aux [23];
  assign w_or[108] = i_data[27] | i_data[26];
  assign \u:1.aux [25] = i_data[26] | \u:1.aux [24];
  assign ghdl_rtil_signal_12_ = ~ i_data[27];
  assign \u:1.aux [26] = ghdl_rtil_signal_12_ & \u:1.aux [25];
  assign w_or[109] = i_data[29] | i_data[28];
  assign \u:1.aux [27] = i_data[28] | \u:1.aux [26];
  assign ghdl_rtil_signal_13_ = ~ i_data[29];
  assign \u:1.aux [28] = ghdl_rtil_signal_13_ & \u:1.aux [27];
  assign w_or[110] = i_data[31] | i_data[30];
  assign \u:1.aux [29] = i_data[30] | \u:1.aux [28];
  assign ghdl_rtil_signal_14_ = ~ i_data[31];
  assign s_zeros[0] = ghdl_rtil_signal_14_ & \u:1.aux [29];
  assign \u:2.aux [0] = ~ w_or[96];
  assign w_or[64] = w_or[98] | w_or[97];
  assign \u:2.aux [1] = w_or[97] | \u:2.aux [0];
  assign ghdl_rtil_signal_15_ = ~ w_or[98];
  assign \u:2.aux [2] = ghdl_rtil_signal_15_ & \u:2.aux [1];
  assign w_or[65] = w_or[100] | w_or[99];
  assign \u:2.aux [3] = w_or[99] | \u:2.aux [2];
  assign ghdl_rtil_signal_16_ = ~ w_or[100];
  assign \u:2.aux [4] = ghdl_rtil_signal_16_ & \u:2.aux [3];
  assign w_or[66] = w_or[102] | w_or[101];
  assign \u:2.aux [5] = w_or[101] | \u:2.aux [4];
  assign ghdl_rtil_signal_17_ = ~ w_or[102];
  assign \u:2.aux [6] = ghdl_rtil_signal_17_ & \u:2.aux [5];
  assign w_or[67] = w_or[104] | w_or[103];
  assign \u:2.aux [7] = w_or[103] | \u:2.aux [6];
  assign ghdl_rtil_signal_18_ = ~ w_or[104];
  assign \u:2.aux [8] = ghdl_rtil_signal_18_ & \u:2.aux [7];
  assign w_or[68] = w_or[106] | w_or[105];
  assign \u:2.aux [9] = w_or[105] | \u:2.aux [8];
  assign ghdl_rtil_signal_19_ = ~ w_or[106];
  assign \u:2.aux [10] = ghdl_rtil_signal_19_ & \u:2.aux [9];
  assign w_or[69] = w_or[108] | w_or[107];
  assign \u:2.aux [11] = w_or[107] | \u:2.aux [10];
  assign ghdl_rtil_signal_20_ = ~ w_or[108];
  assign \u:2.aux [12] = ghdl_rtil_signal_20_ & \u:2.aux [11];
  assign w_or[70] = w_or[110] | w_or[109];
  assign \u:2.aux [13] = w_or[109] | \u:2.aux [12];
  assign ghdl_rtil_signal_21_ = ~ w_or[110];
  assign s_zeros[1] = ghdl_rtil_signal_21_ & \u:2.aux [13];
  assign \u:3.aux [0] = ~ w_or[64];
  assign w_or[32] = w_or[66] | w_or[65];
  assign \u:3.aux [1] = w_or[65] | \u:3.aux [0];
  assign ghdl_rtil_signal_22_ = ~ w_or[66];
  assign \u:3.aux [2] = ghdl_rtil_signal_22_ & \u:3.aux [1];
  assign w_or[33] = w_or[68] | w_or[67];
  assign \u:3.aux [3] = w_or[67] | \u:3.aux [2];
  assign ghdl_rtil_signal_23_ = ~ w_or[68];
  assign \u:3.aux [4] = ghdl_rtil_signal_23_ & \u:3.aux [3];
  assign w_or[34] = w_or[70] | w_or[69];
  assign \u:3.aux [5] = w_or[69] | \u:3.aux [4];
  assign ghdl_rtil_signal_24_ = ~ w_or[70];
  assign s_zeros[2] = ghdl_rtil_signal_24_ & \u:3.aux [5];
  assign \u:4.aux [0] = ~ w_or[32];
  assign w_or[0] = w_or[34] | w_or[33];
  assign \u:4.aux [1] = w_or[33] | \u:4.aux [0];
  assign ghdl_rtil_signal_25_ = ~ w_or[34];
  assign s_zeros[3] = ghdl_rtil_signal_25_ & \u:4.aux [1];
  assign s_zeros[4] = ~ w_or[0];
  assign w_and[1] = s_zeros[0] & s_zeros[1];
  assign o_zeros[1] = s_zeros[1] & ghdl_rtil_signal_26_;
  assign w_and[2] = w_and[1] & s_zeros[2];
  assign o_zeros[2] = s_zeros[2] & ghdl_rtil_signal_26_;
  assign w_and[3] = w_and[2] & s_zeros[3];
  assign o_zeros[3] = s_zeros[3] & ghdl_rtil_signal_26_;
  assign w_and[4] = w_and[3] & s_zeros[4];
  assign o_zeros[4] = s_zeros[4] & ghdl_rtil_signal_26_;
  assign ghdl_rtil_signal_27_ = ~ i_data[0];
  assign o_msb_zeros = ghdl_rtil_signal_27_ & w_and[4];
  assign ghdl_rtil_signal_26_ = ~ o_msb_zeros;
  assign o_zeros[0] = s_zeros[0] & ghdl_rtil_signal_26_;
  assign \u:1.aux [31:30] = { 1'hz, s_zeros[0] };
  assign \u:2.aux [15:14] = { 1'hz, s_zeros[1] };
  assign \u:3.aux [7:6] = { 1'hz, s_zeros[2] };
  assign \u:4.aux [3:2] = { 1'hz, s_zeros[3] };
  assign w_and[0] = s_zeros[0];
  assign w_or[31:1] = 31'hzzzzzzzz;
  assign w_or[63:35] = 29'hzzzzzzzz;
  assign w_or[95:71] = 25'hzzzzzzz;
  assign w_or[159:111] = { 1'h0, i_data[31:1], 17'hzzzzz };
endmodule

module comparator_6_0(i_data1, i_data2, o_result);
  wire ghdl_rtil_signal_0_;
  input [5:0] i_data1;
  wire [5:0] i_data1;
  input [5:0] i_data2;
  wire [5:0] i_data2;
  output o_result;
  wire o_result;
  assign ghdl_rtil_signal_0_ = i_data1 == i_data2;
  assign o_result = ghdl_rtil_signal_0_ ? 1'h1 : 1'h0;
endmodule

module comparator_6_2(i_data1, i_data2, o_result);
  wire ghdl_rtil_signal_0_;
  input [5:0] i_data1;
  wire [5:0] i_data1;
  input [5:0] i_data2;
  wire [5:0] i_data2;
  output o_result;
  wire o_result;
  assign ghdl_rtil_signal_0_ = i_data1 < i_data2;
  assign o_result = ghdl_rtil_signal_0_ ? 1'h1 : 1'h0;
endmodule

module comparator_8_1(i_data1, i_data2, o_result);
  wire ghdl_rtil_signal_0_;
  input [7:0] i_data1;
  wire [7:0] i_data1;
  input [7:0] i_data2;
  wire [7:0] i_data2;
  output o_result;
  wire o_result;
  assign ghdl_rtil_signal_0_ = i_data1 > i_data2;
  assign o_result = ghdl_rtil_signal_0_ ? 1'h1 : 1'h0;
endmodule

module cordic(iclk, ireset, istart, ientrada, osalida1, osalida2, oready);
  wire ghdl_rtil_signal_00_;
  wire ghdl_rtil_signal_01_;
  wire ghdl_rtil_signal_02_;
  wire ghdl_rtil_signal_03_;
  wire [4:0] ghdl_rtil_signal_04_;
  wire ghdl_rtil_signal_05_;
  wire ghdl_rtil_signal_06_;
  wire ghdl_rtil_signal_07_;
  wire [31:0] ghdl_rtil_signal_08_;
  wire [31:0] ghdl_rtil_signal_09_;
  wire [31:0] ghdl_rtil_signal_10_;
  wire ghdl_rtil_signal_11_;
  wire ghdl_rtil_signal_12_;
  wire ghdl_rtil_signal_13_;
  wire [31:0] ghdl_rtil_signal_14_;
  wire [31:0] ghdl_rtil_signal_15_;
  wire [31:0] ghdl_rtil_signal_16_;
  wire [31:0] ghdl_rtil_signal_17_;
  wire [4:0] ghdl_rtil_signal_18_;
  wire [4:0] ghdl_rtil_signal_19_;
  wire ghdl_rtil_signal_20_;
  wire ghdl_rtil_signal_21_;
  wire ghdl_rtil_signal_22_;
  wire ghdl_rtil_signal_23_;
  wire ghdl_rtil_signal_24_;
  wire [31:0] ghdl_rtil_signal_25_;
  wire [31:0] ghdl_rtil_signal_26_;
  wire [31:0] ghdl_rtil_signal_27_;
  wire [4:0] ghdl_rtil_signal_28_;
  wire [31:0] ghdl_rtil_signal_29_;
  wire [31:0] ghdl_rtil_signal_30_;
  reg [4:0] counteri;
  wire [31:0] di2_i;
  wire [31:0] diangulo;
  wire eni;
  wire enx;
  reg ep;
  input iclk;
  wire iclk;
  input [31:0] ientrada;
  wire [31:0] ientrada;
  input ireset;
  wire ireset;
  input istart;
  wire istart;
  output oready;
  wire oready;
  output [31:0] osalida1;
  reg [31:0] osalida1;
  output [31:0] osalida2;
  reg [31:0] osalida2;
  wire [31:0] prodx;
  wire [31:0] prody;
  wire seli;
  wire selx;
  wire [31:0] w_case_cos;
  wire w_case_en;
  wire [31:0] w_case_sin;
  wire [31:0] xsub;
  wire [31:0] yadd;
  reg [31:0] z;
  wire [31:0] zsub;
  reg [31:0] \232  [19:0];
  initial begin
    \232 [0] = 32'd905969664;
    \232 [1] = 32'd914358272;
    \232 [2] = 32'd922746880;
    \232 [3] = 32'd931135488;
    \232 [4] = 32'd939524096;
    \232 [5] = 32'd947912704;
    \232 [6] = 32'd956301312;
    \232 [7] = 32'd964689920;
    \232 [8] = 32'd973078528;
    \232 [9] = 32'd981467136;
    \232 [10] = 32'd989855744;
    \232 [11] = 32'd998244352;
    \232 [12] = 32'd1006632960;
    \232 [13] = 32'd1015021568;
    \232 [14] = 32'd1023410176;
    \232 [15] = 32'd1031798784;
    \232 [16] = 32'd1040187392;
    \232 [17] = 32'd1048576000;
    \232 [18] = 32'd1056964608;
    \232 [19] = 32'd1065353216;
  end
  assign { ghdl_rtil_signal_29_[31], di2_i[30:0] } = \232 [ghdl_rtil_signal_04_];
  reg [31:0] \235  [19:0];
  initial begin
    \235 [0] = 32'd905969664;
    \235 [1] = 32'd914358272;
    \235 [2] = 32'd922746880;
    \235 [3] = 32'd931135488;
    \235 [4] = 32'd939524096;
    \235 [5] = 32'd947912704;
    \235 [6] = 32'd956301312;
    \235 [7] = 32'd964689920;
    \235 [8] = 32'd973078527;
    \235 [9] = 32'd981467131;
    \235 [10] = 32'd989855723;
    \235 [11] = 32'd998244267;
    \235 [12] = 32'd1006632619;
    \235 [13] = 32'd1015020203;
    \235 [14] = 32'd1023404718;
    \235 [15] = 32'd1031776990;
    \235 [16] = 32'd1040100821;
    \235 [17] = 32'd1048239024;
    \235 [18] = 32'd1055744824;
    \235 [19] = 32'd1061752795;
  end
  assign { ghdl_rtil_signal_30_[31], diangulo[30:0] } = \235 [ghdl_rtil_signal_04_];
  always @(posedge iclk, negedge ireset)
    if (!ireset) osalida1 <= 32'd0;
    else if (enx) osalida1 <= ghdl_rtil_signal_25_;
  always @(posedge iclk, negedge ireset)
    if (!ireset) osalida2 <= 32'd0;
    else if (enx) osalida2 <= ghdl_rtil_signal_26_;
  always @(posedge iclk, negedge ireset)
    if (!ireset) z <= 32'd0;
    else if (enx) z <= ghdl_rtil_signal_27_;
  always @(posedge iclk, negedge ireset)
    if (!ireset) counteri <= 5'h00;
    else if (eni) counteri <= ghdl_rtil_signal_28_;
  assign ghdl_rtil_signal_11_ = osalida2[30:23] == 8'h7f;
  assign ghdl_rtil_signal_12_ = ! osalida2[22:0];
  assign ghdl_rtil_signal_13_ = ghdl_rtil_signal_12_ & ghdl_rtil_signal_11_;
  assign ghdl_rtil_signal_14_ = ghdl_rtil_signal_13_ ? 32'd1065353216 : yadd;
  assign ghdl_rtil_signal_15_ = w_case_en ? w_case_sin : ghdl_rtil_signal_14_;
  assign ghdl_rtil_signal_16_ = selx ? ghdl_rtil_signal_15_ : 32'd0;
  assign ghdl_rtil_signal_17_ = selx ? zsub : ientrada;
  assign ghdl_rtil_signal_18_ = counteri + 5'h01;
  assign ghdl_rtil_signal_19_ = seli ? ghdl_rtil_signal_18_ : 5'h00;
  assign ghdl_rtil_signal_20_ = istart ? 1'h1 : 1'h0;
  assign ghdl_rtil_signal_21_ = ~ ep;
  assign ghdl_rtil_signal_22_ = counteri == 5'h10;
  assign ghdl_rtil_signal_23_ = ghdl_rtil_signal_22_ | w_case_en;
  assign ghdl_rtil_signal_24_ = ghdl_rtil_signal_23_ ? 1'h0 : 1'h1;
  assign oready = ep ? 1'h0 : 1'h1;
  assign selx = ep ? 1'h1 : 1'h0;
  function [0:0] \213 ;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        \213  = b[0:0];
      2'b1?:
        \213  = b[1:1];
      default:
        \213  = a;
    endcase
  endfunction
  assign enx = \213 (1'h0, { 1'h1, ghdl_rtil_signal_20_ }, { ep, ghdl_rtil_signal_21_ });
  assign seli = ep ? ghdl_rtil_signal_24_ : 1'h0;
  function [0:0] \218 ;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        \218  = b[0:0];
      2'b1?:
        \218  = b[1:1];
      default:
        \218  = a;
    endcase
  endfunction
  assign eni = \218 (1'h0, { ghdl_rtil_signal_24_, ghdl_rtil_signal_20_ }, { ep, ghdl_rtil_signal_21_ });
  always @(posedge iclk, negedge ireset)
    if (!ireset) ep <= 1'h0;
    else ep <= eni;
  assign ghdl_rtil_signal_25_ = enx ? ghdl_rtil_signal_10_ : 32'hxxxxxxxx;
  assign ghdl_rtil_signal_26_ = enx ? ghdl_rtil_signal_16_ : 32'hxxxxxxxx;
  assign ghdl_rtil_signal_27_ = enx ? ghdl_rtil_signal_17_ : 32'hxxxxxxxx;
  assign ghdl_rtil_signal_28_ = eni ? ghdl_rtil_signal_19_ : 5'hxx;
  assign ghdl_rtil_signal_04_ = 5'h13 - counteri;
  assign ghdl_rtil_signal_05_ = osalida1[30:23] == 8'h7f;
  assign ghdl_rtil_signal_06_ = ! osalida1[22:0];
  assign ghdl_rtil_signal_07_ = ghdl_rtil_signal_06_ & ghdl_rtil_signal_05_;
  assign ghdl_rtil_signal_08_ = ghdl_rtil_signal_07_ ? 32'd1065353216 : xsub;
  assign ghdl_rtil_signal_09_ = w_case_en ? w_case_cos : ghdl_rtil_signal_08_;
  assign ghdl_rtil_signal_10_ = selx ? ghdl_rtil_signal_09_ : 32'd1058764014;
  suma_resta_32 fp_add_y (
    .operacion(4'h1),
    .operando1(osalida2),
    .operando2(prody),
    .resultado(yadd)
  );
  multfp fp_mul_x (
    .entrada_x(osalida2),
    .entrada_y({ z[31], di2_i[30:0] }),
    .overflow(ghdl_rtil_signal_01_),
    .salida(prodx),
    .underflow(ghdl_rtil_signal_00_)
  );
  multfp fp_mul_y (
    .entrada_x(osalida1),
    .entrada_y({ z[31], di2_i[30:0] }),
    .overflow(ghdl_rtil_signal_03_),
    .salida(prody),
    .underflow(ghdl_rtil_signal_02_)
  );
  suma_resta_32 fp_sub_x (
    .operacion(4'h2),
    .operando1(osalida1),
    .operando2(prodx),
    .resultado(xsub)
  );
  suma_resta_32 fp_sub_z (
    .operacion(4'h2),
    .operando1(z),
    .operando2({ z[31], diangulo[30:0] }),
    .resultado(zsub)
  );
  cordic_ieee ieeecase (
    .i_clk(iclk),
    .i_data(ientrada),
    .i_en(enx),
    .i_reset(ireset),
    .i_sel(selx),
    .o_case_cos(w_case_cos),
    .o_case_en(w_case_en),
    .o_case_sin(w_case_sin)
  );
  assign ghdl_rtil_signal_29_[30:0] = di2_i[30:0];
  assign ghdl_rtil_signal_30_[30:0] = diangulo[30:0];
  assign di2_i[31] = z[31];
  assign diangulo[31] = z[31];
endmodule

module cordic_ieee(i_reset, i_clk, i_data, i_en, i_sel, o_case_cos, o_case_sin, o_case_en);
  wire ghdl_rtil_signal_00_;
  wire [31:0] ghdl_rtil_signal_01_;
  wire ghdl_rtil_signal_02_;
  wire [31:0] ghdl_rtil_signal_03_;
  wire ghdl_rtil_signal_04_;
  wire [31:0] ghdl_rtil_signal_05_;
  wire [31:0] ghdl_rtil_signal_06_;
  wire ghdl_rtil_signal_07_;
  wire [31:0] ghdl_rtil_signal_08_;
  wire [31:0] ghdl_rtil_signal_09_;
  wire ghdl_rtil_signal_10_;
  input i_clk;
  wire i_clk;
  input [31:0] i_data;
  wire [31:0] i_data;
  input i_en;
  wire i_en;
  input i_reset;
  wire i_reset;
  input i_sel;
  wire i_sel;
  output [31:0] o_case_cos;
  reg [31:0] o_case_cos;
  output o_case_en;
  reg o_case_en;
  output [31:0] o_case_sin;
  reg [31:0] o_case_sin;
  always @(posedge i_clk, negedge i_reset)
    if (!i_reset) o_case_en <= 1'h0;
    else if (i_en) o_case_en <= ghdl_rtil_signal_10_;
  always @(posedge i_clk, negedge i_reset)
    if (!i_reset) o_case_cos <= 32'd0;
    else if (i_en) o_case_cos <= ghdl_rtil_signal_08_;
  always @(posedge i_clk, negedge i_reset)
    if (!i_reset) o_case_sin <= 32'd0;
    else if (i_en) o_case_sin <= ghdl_rtil_signal_09_;
  assign ghdl_rtil_signal_00_ = ! i_data[30:23];
  assign ghdl_rtil_signal_01_ = i_data[31] ? 32'd2147483648 : 32'd0;
  assign ghdl_rtil_signal_02_ = i_data[30:23] == 8'hff;
  assign ghdl_rtil_signal_03_ = ghdl_rtil_signal_02_ ? 32'd4294967295 : 32'd0;
  assign ghdl_rtil_signal_04_ = ghdl_rtil_signal_02_ ? 1'h1 : 1'h0;
  assign ghdl_rtil_signal_05_ = ghdl_rtil_signal_00_ ? 32'd1065353216 : ghdl_rtil_signal_03_;
  assign ghdl_rtil_signal_06_ = ghdl_rtil_signal_00_ ? ghdl_rtil_signal_01_ : ghdl_rtil_signal_03_;
  assign ghdl_rtil_signal_07_ = ghdl_rtil_signal_00_ ? 1'h1 : ghdl_rtil_signal_04_;
  assign ghdl_rtil_signal_08_ = i_sel ? ghdl_rtil_signal_05_ : 32'd0;
  assign ghdl_rtil_signal_09_ = i_sel ? ghdl_rtil_signal_06_ : 32'd0;
  assign ghdl_rtil_signal_10_ = i_sel ? ghdl_rtil_signal_07_ : 1'h0;
endmodule

module exp2_fp_23_8_64_23(i_x, o_exp2);
  wire ghdl_rtil_signal_0_;
  wire ghdl_rtil_signal_1_;
  wire ghdl_rtil_signal_2_;
  wire ghdl_rtil_signal_3_;
  wire ghdl_rtil_signal_4_;
  wire ghdl_rtil_signal_5_;
  wire ghdl_rtil_signal_6_;
  input [31:0] i_x;
  wire [31:0] i_x;
  output [31:0] o_exp2;
  wire [31:0] o_exp2;
  wire [6:0] w_addera;
  wire [6:0] w_adderb;
  wire [4:0] w_adderc;
  wire [22:0] w_adderd;
  wire [22:0] w_addere;
  wire [24:0] w_adderf;
  wire [29:0] w_c1_lshifter;
  wire [22:0] w_c1_lutb;
  wire [24:0] w_c1_mult;
  wire [22:0] w_c1_muxa;
  wire [1:0] w_case_en;
  wire w_comp_ctrlsubs;
  wire w_comp_eqexp;
  wire w_comp_eqseg;
  wire w_exp_msb_result;
  wire [31:0] w_ieeecase;
  wire [45:0] w_lshifter;
  wire [22:0] w_luta;
  wire [22:0] w_lutb;
  wire [45:0] w_mult;
  wire [22:0] w_muxa;
  wire [22:0] w_muxb;
  wire w_nxor_comp_ctrlsubs;
  wire w_xor_comp_ctrlsubs;
  assign ghdl_rtil_signal_2_ = ~ i_x[31];
  assign w_exp_msb_result = w_comp_eqexp & ghdl_rtil_signal_2_;
  assign w_muxa = w_comp_eqseg ? 23'h7fff5d : w_luta;
  assign w_xor_comp_ctrlsubs = w_comp_ctrlsubs ^ w_c1_lshifter[17];
  assign w_nxor_comp_ctrlsubs = ~ w_xor_comp_ctrlsubs;
  assign w_muxb = w_c1_lshifter[17] ? w_lutb : w_muxa;
  assign o_exp2 = w_case_en[0] ? w_ieeecase : { 1'h0, w_exp_msb_result, w_adderb, w_adderf[24:2] };
  sum_ripple_carry_adder_7_0 addera (
    .i_cin(1'h1),
    .i_term1(i_x[29:23]),
    .i_term2(7'h10),
    .o_cout(ghdl_rtil_signal_0_),
    .o_sum(w_addera)
  );
  sum_ripple_carry_adder_7_2 adderb (
    .i_cin(1'h1),
    .i_term1(w_c1_lshifter[29:23]),
    .i_term2(7'h01),
    .o_cout(ghdl_rtil_signal_1_),
    .o_sum(w_adderb)
  );
  sum_ripple_carry_adder_5_0 adderc (
    .i_cin(w_c1_lshifter[17]),
    .i_term1(w_c1_lshifter[22:18]),
    .i_term2(5'h00),
    .o_cout(ghdl_rtil_signal_3_),
    .o_sum(w_adderc)
  );
  sum_ripple_carry_adder_23_0 adderd (
    .i_cin(1'h0),
    .i_term1(w_muxb),
    .i_term2(w_c1_lshifter[22:0]),
    .o_cout(ghdl_rtil_signal_5_),
    .o_sum(w_adderd)
  );
  sum_ripple_carry_adder_25_0 adderf (
    .i_cin(w_comp_ctrlsubs),
    .i_term1({ w_adderd, 2'h0 }),
    .i_term2(w_c1_mult),
    .o_cout(ghdl_rtil_signal_6_),
    .o_sum(w_adderf)
  );
  comparator_6_2 comparator_control_lut (
    .i_data1(w_c1_lshifter[22:17]),
    .i_data2(6'h22),
    .o_result(w_comp_ctrlsubs)
  );
  comparator_8_1 comparator_eqexponent (
    .i_data1(i_x[30:23]),
    .i_data2(8'h7e),
    .o_result(w_comp_eqexp)
  );
  comparator_6_0 comparator_eqsegments (
    .i_data1(w_c1_lshifter[22:17]),
    .i_data2(6'h3f),
    .o_result(w_comp_eqseg)
  );
  sum_ripple_carry_adder_23_0 constants_sub (
    .i_cin(1'h1),
    .i_term1(w_c1_muxa),
    .i_term2(w_c1_lutb),
    .o_cout(ghdl_rtil_signal_4_),
    .o_sum(w_addere)
  );
  exp2_ieee_16 ieee32_case (
    .i_data(i_x),
    .o_case(w_ieeecase),
    .o_case_en(w_case_en[0])
  );
  left_shifter_46 lshifter (
    .i_data({ 23'h000001, i_x[22:0] }),
    .i_shifts(w_addera[5:0]),
    .o_datashift(w_lshifter)
  );
  exp2_luts_64x23b_64 \lut64c.lut64_23b  (
    .i_luta_addr(w_adderc),
    .i_lutb_addr(w_c1_lshifter[22:18]),
    .o_luta(w_luta),
    .o_lutb(w_lutb)
  );
  mult_23 multiplier (
    .i_term1(w_addere),
    .i_term2({ w_c1_lshifter[16:0], 6'h00 }),
    .o_product(w_mult)
  );
  ones_complement_30 ones_complement_lshifter (
    .i_data(w_lshifter[45:16]),
    .i_en(i_x[31]),
    .o_data(w_c1_lshifter)
  );
  ones_complement_23 ones_complement_lutb (
    .i_data(w_lutb),
    .i_en(w_xor_comp_ctrlsubs),
    .o_data(w_c1_lutb)
  );
  ones_complement_25 ones_complement_mult (
    .i_data(w_mult[45:21]),
    .i_en(w_comp_ctrlsubs),
    .o_data(w_c1_mult)
  );
  ones_complement_23 ones_complement_muxa (
    .i_data(w_muxa),
    .i_en(w_nxor_comp_ctrlsubs),
    .o_data(w_c1_muxa)
  );
  assign w_case_en[1] = 1'hz;
endmodule

module exp2_ieee_16(i_data, o_case, o_case_en);
  wire ghdl_rtil_signal_0_;
  wire ghdl_rtil_signal_1_;
  wire ghdl_rtil_signal_2_;
  wire ghdl_rtil_signal_3_;
  wire ghdl_rtil_signal_4_;
  wire [31:0] ghdl_rtil_signal_5_;
  wire [31:0] ghdl_rtil_signal_6_;
  wire [31:0] ghdl_rtil_signal_7_;
  wire ghdl_rtil_signal_8_;
  input [31:0] i_data;
  wire [31:0] i_data;
  output [31:0] o_case;
  wire [31:0] o_case;
  output o_case_en;
  wire o_case_en;
  assign ghdl_rtil_signal_0_ = $signed({ 24'h000000, i_data[30:23] }) < $signed(32'd111);
  assign ghdl_rtil_signal_1_ = i_data[30:23] > 8'h86;
  assign ghdl_rtil_signal_2_ = | i_data[22:0];
  assign ghdl_rtil_signal_3_ = i_data[30:23] == 8'hff;
  assign ghdl_rtil_signal_4_ = ghdl_rtil_signal_3_ & ghdl_rtil_signal_2_;
  assign ghdl_rtil_signal_5_ = i_data[31] ? 32'd0 : 32'd2139095040;
  assign ghdl_rtil_signal_6_ = ghdl_rtil_signal_4_ ? 32'd4294967295 : ghdl_rtil_signal_5_;
  assign ghdl_rtil_signal_7_ = ghdl_rtil_signal_1_ ? ghdl_rtil_signal_6_ : 32'd0;
  assign ghdl_rtil_signal_8_ = ghdl_rtil_signal_1_ ? 1'h1 : 1'h0;
  assign o_case = ghdl_rtil_signal_0_ ? 32'd1065353216 : ghdl_rtil_signal_7_;
  assign o_case_en = ghdl_rtil_signal_0_ ? 1'h1 : ghdl_rtil_signal_8_;
endmodule

module exp2_luts_64x23b_64(i_luta_addr, i_lutb_addr, o_luta, o_lutb);
  wire ghdl_rtil_signal_00_;
  wire ghdl_rtil_signal_01_;
  wire ghdl_rtil_signal_02_;
  wire ghdl_rtil_signal_03_;
  wire ghdl_rtil_signal_04_;
  wire ghdl_rtil_signal_05_;
  wire ghdl_rtil_signal_06_;
  wire ghdl_rtil_signal_07_;
  wire ghdl_rtil_signal_08_;
  wire ghdl_rtil_signal_09_;
  wire ghdl_rtil_signal_10_;
  wire ghdl_rtil_signal_11_;
  wire ghdl_rtil_signal_12_;
  wire ghdl_rtil_signal_13_;
  wire ghdl_rtil_signal_14_;
  wire ghdl_rtil_signal_15_;
  wire ghdl_rtil_signal_16_;
  wire ghdl_rtil_signal_17_;
  wire ghdl_rtil_signal_18_;
  wire ghdl_rtil_signal_19_;
  wire ghdl_rtil_signal_20_;
  wire ghdl_rtil_signal_21_;
  wire ghdl_rtil_signal_22_;
  wire ghdl_rtil_signal_23_;
  wire ghdl_rtil_signal_24_;
  wire ghdl_rtil_signal_25_;
  wire ghdl_rtil_signal_26_;
  wire ghdl_rtil_signal_27_;
  wire ghdl_rtil_signal_28_;
  wire ghdl_rtil_signal_29_;
  wire ghdl_rtil_signal_30_;
  wire ghdl_rtil_signal_31_;
  wire ghdl_rtil_signal_32_;
  wire ghdl_rtil_signal_33_;
  wire ghdl_rtil_signal_34_;
  wire ghdl_rtil_signal_35_;
  wire ghdl_rtil_signal_36_;
  wire ghdl_rtil_signal_37_;
  wire ghdl_rtil_signal_38_;
  wire ghdl_rtil_signal_39_;
  wire ghdl_rtil_signal_40_;
  wire ghdl_rtil_signal_41_;
  wire ghdl_rtil_signal_42_;
  wire ghdl_rtil_signal_43_;
  wire ghdl_rtil_signal_44_;
  wire ghdl_rtil_signal_45_;
  wire ghdl_rtil_signal_46_;
  wire ghdl_rtil_signal_47_;
  wire ghdl_rtil_signal_48_;
  wire ghdl_rtil_signal_49_;
  wire ghdl_rtil_signal_50_;
  wire ghdl_rtil_signal_51_;
  wire ghdl_rtil_signal_52_;
  wire ghdl_rtil_signal_53_;
  wire ghdl_rtil_signal_54_;
  wire ghdl_rtil_signal_55_;
  wire ghdl_rtil_signal_56_;
  wire ghdl_rtil_signal_57_;
  wire ghdl_rtil_signal_58_;
  wire ghdl_rtil_signal_59_;
  wire ghdl_rtil_signal_60_;
  wire ghdl_rtil_signal_61_;
  wire ghdl_rtil_signal_62_;
  input [4:0] i_luta_addr;
  wire [4:0] i_luta_addr;
  input [4:0] i_lutb_addr;
  wire [4:0] i_lutb_addr;
  output [22:0] o_luta;
  wire [22:0] o_luta;
  output [22:0] o_lutb;
  wire [22:0] o_lutb;
  assign ghdl_rtil_signal_00_ = i_luta_addr == 5'h01;
  assign ghdl_rtil_signal_01_ = i_luta_addr == 5'h02;
  assign ghdl_rtil_signal_02_ = i_luta_addr == 5'h03;
  assign ghdl_rtil_signal_03_ = i_luta_addr == 5'h04;
  assign ghdl_rtil_signal_04_ = i_luta_addr == 5'h05;
  assign ghdl_rtil_signal_05_ = i_luta_addr == 5'h06;
  assign ghdl_rtil_signal_06_ = i_luta_addr == 5'h07;
  assign ghdl_rtil_signal_07_ = i_luta_addr == 5'h08;
  assign ghdl_rtil_signal_08_ = i_luta_addr == 5'h09;
  assign ghdl_rtil_signal_09_ = i_luta_addr == 5'h0a;
  assign ghdl_rtil_signal_10_ = i_luta_addr == 5'h0b;
  assign ghdl_rtil_signal_11_ = i_luta_addr == 5'h0c;
  assign ghdl_rtil_signal_12_ = i_luta_addr == 5'h0d;
  assign ghdl_rtil_signal_13_ = i_luta_addr == 5'h0e;
  assign ghdl_rtil_signal_14_ = i_luta_addr == 5'h0f;
  assign ghdl_rtil_signal_15_ = i_luta_addr == 5'h10;
  assign ghdl_rtil_signal_16_ = i_luta_addr == 5'h11;
  assign ghdl_rtil_signal_17_ = i_luta_addr == 5'h12;
  assign ghdl_rtil_signal_18_ = i_luta_addr == 5'h13;
  assign ghdl_rtil_signal_19_ = i_luta_addr == 5'h14;
  assign ghdl_rtil_signal_20_ = i_luta_addr == 5'h15;
  assign ghdl_rtil_signal_21_ = i_luta_addr == 5'h16;
  assign ghdl_rtil_signal_22_ = i_luta_addr == 5'h17;
  assign ghdl_rtil_signal_23_ = i_luta_addr == 5'h18;
  assign ghdl_rtil_signal_24_ = i_luta_addr == 5'h19;
  assign ghdl_rtil_signal_25_ = i_luta_addr == 5'h1a;
  assign ghdl_rtil_signal_26_ = i_luta_addr == 5'h1b;
  assign ghdl_rtil_signal_27_ = i_luta_addr == 5'h1c;
  assign ghdl_rtil_signal_28_ = i_luta_addr == 5'h1d;
  assign ghdl_rtil_signal_29_ = i_luta_addr == 5'h1e;
  assign ghdl_rtil_signal_30_ = i_luta_addr == 5'h1f;
  function [22:0] \10281 ;
    input [22:0] a;
    input [712:0] b;
    input [30:0] s;
    casez (s) // synopsys parallel_case
      31'b??????????????????????????????1:
        \10281  = b[22:0];
      31'b?????????????????????????????1?:
        \10281  = b[45:23];
      31'b????????????????????????????1??:
        \10281  = b[68:46];
      31'b???????????????????????????1???:
        \10281  = b[91:69];
      31'b??????????????????????????1????:
        \10281  = b[114:92];
      31'b?????????????????????????1?????:
        \10281  = b[137:115];
      31'b????????????????????????1??????:
        \10281  = b[160:138];
      31'b???????????????????????1???????:
        \10281  = b[183:161];
      31'b??????????????????????1????????:
        \10281  = b[206:184];
      31'b?????????????????????1?????????:
        \10281  = b[229:207];
      31'b????????????????????1??????????:
        \10281  = b[252:230];
      31'b???????????????????1???????????:
        \10281  = b[275:253];
      31'b??????????????????1????????????:
        \10281  = b[298:276];
      31'b?????????????????1?????????????:
        \10281  = b[321:299];
      31'b????????????????1??????????????:
        \10281  = b[344:322];
      31'b???????????????1???????????????:
        \10281  = b[367:345];
      31'b??????????????1????????????????:
        \10281  = b[390:368];
      31'b?????????????1?????????????????:
        \10281  = b[413:391];
      31'b????????????1??????????????????:
        \10281  = b[436:414];
      31'b???????????1???????????????????:
        \10281  = b[459:437];
      31'b??????????1????????????????????:
        \10281  = b[482:460];
      31'b?????????1?????????????????????:
        \10281  = b[505:483];
      31'b????????1??????????????????????:
        \10281  = b[528:506];
      31'b???????1???????????????????????:
        \10281  = b[551:529];
      31'b??????1????????????????????????:
        \10281  = b[574:552];
      31'b?????1?????????????????????????:
        \10281  = b[597:575];
      31'b????1??????????????????????????:
        \10281  = b[620:598];
      31'b???1???????????????????????????:
        \10281  = b[643:621];
      31'b??1????????????????????????????:
        \10281  = b[666:644];
      31'b?1?????????????????????????????:
        \10281  = b[689:667];
      31'b1??????????????????????????????:
        \10281  = b[712:690];
      default:
        \10281  = a;
    endcase
  endfunction
  assign o_luta = \10281 (23'h000000, 713'h1fa0c4be92707be420f58063e6e1d3c6627f7fb2bee88e7da9e5fb120475b93ceacd59d4af47a8415f4fb39ea08ffd48e13aabe875a0eeebfcd9d9bf6fb7a66f78cd6f06f1fe3d243ce1bb7aa3def72ad3f25edfed5377ecd33, { ghdl_rtil_signal_30_, ghdl_rtil_signal_29_, ghdl_rtil_signal_28_, ghdl_rtil_signal_27_, ghdl_rtil_signal_26_, ghdl_rtil_signal_25_, ghdl_rtil_signal_24_, ghdl_rtil_signal_23_, ghdl_rtil_signal_22_, ghdl_rtil_signal_21_, ghdl_rtil_signal_20_, ghdl_rtil_signal_19_, ghdl_rtil_signal_18_, ghdl_rtil_signal_17_, ghdl_rtil_signal_16_, ghdl_rtil_signal_15_, ghdl_rtil_signal_14_, ghdl_rtil_signal_13_, ghdl_rtil_signal_12_, ghdl_rtil_signal_11_, ghdl_rtil_signal_10_, ghdl_rtil_signal_09_, ghdl_rtil_signal_08_, ghdl_rtil_signal_07_, ghdl_rtil_signal_06_, ghdl_rtil_signal_05_, ghdl_rtil_signal_04_, ghdl_rtil_signal_03_, ghdl_rtil_signal_02_, ghdl_rtil_signal_01_, ghdl_rtil_signal_00_ });
  assign ghdl_rtil_signal_31_ = ! { 27'h0000000, i_lutb_addr };
  assign ghdl_rtil_signal_32_ = i_lutb_addr == 5'h01;
  assign ghdl_rtil_signal_33_ = i_lutb_addr == 5'h02;
  assign ghdl_rtil_signal_34_ = i_lutb_addr == 5'h03;
  assign ghdl_rtil_signal_35_ = i_lutb_addr == 5'h04;
  assign ghdl_rtil_signal_36_ = i_lutb_addr == 5'h05;
  assign ghdl_rtil_signal_37_ = i_lutb_addr == 5'h06;
  assign ghdl_rtil_signal_38_ = i_lutb_addr == 5'h07;
  assign ghdl_rtil_signal_39_ = i_lutb_addr == 5'h08;
  assign ghdl_rtil_signal_40_ = i_lutb_addr == 5'h09;
  assign ghdl_rtil_signal_41_ = i_lutb_addr == 5'h0a;
  assign ghdl_rtil_signal_42_ = i_lutb_addr == 5'h0b;
  assign ghdl_rtil_signal_43_ = i_lutb_addr == 5'h0c;
  assign ghdl_rtil_signal_44_ = i_lutb_addr == 5'h0d;
  assign ghdl_rtil_signal_45_ = i_lutb_addr == 5'h0e;
  assign ghdl_rtil_signal_46_ = i_lutb_addr == 5'h0f;
  assign ghdl_rtil_signal_47_ = i_lutb_addr == 5'h10;
  assign ghdl_rtil_signal_48_ = i_lutb_addr == 5'h11;
  assign ghdl_rtil_signal_49_ = i_lutb_addr == 5'h12;
  assign ghdl_rtil_signal_50_ = i_lutb_addr == 5'h13;
  assign ghdl_rtil_signal_51_ = i_lutb_addr == 5'h14;
  assign ghdl_rtil_signal_52_ = i_lutb_addr == 5'h15;
  assign ghdl_rtil_signal_53_ = i_lutb_addr == 5'h16;
  assign ghdl_rtil_signal_54_ = i_lutb_addr == 5'h17;
  assign ghdl_rtil_signal_55_ = i_lutb_addr == 5'h18;
  assign ghdl_rtil_signal_56_ = i_lutb_addr == 5'h19;
  assign ghdl_rtil_signal_57_ = i_lutb_addr == 5'h1a;
  assign ghdl_rtil_signal_58_ = i_lutb_addr == 5'h1b;
  assign ghdl_rtil_signal_59_ = i_lutb_addr == 5'h1c;
  assign ghdl_rtil_signal_60_ = i_lutb_addr == 5'h1d;
  assign ghdl_rtil_signal_61_ = i_lutb_addr == 5'h1e;
  assign ghdl_rtil_signal_62_ = i_lutb_addr == 5'h1f;
  function [22:0] \10380 ;
    input [22:0] a;
    input [735:0] b;
    input [31:0] s;
    casez (s) // synopsys parallel_case
      32'b???????????????????????????????1:
        \10380  = b[22:0];
      32'b??????????????????????????????1?:
        \10380  = b[45:23];
      32'b?????????????????????????????1??:
        \10380  = b[68:46];
      32'b????????????????????????????1???:
        \10380  = b[91:69];
      32'b???????????????????????????1????:
        \10380  = b[114:92];
      32'b??????????????????????????1?????:
        \10380  = b[137:115];
      32'b?????????????????????????1??????:
        \10380  = b[160:138];
      32'b????????????????????????1???????:
        \10380  = b[183:161];
      32'b???????????????????????1????????:
        \10380  = b[206:184];
      32'b??????????????????????1?????????:
        \10380  = b[229:207];
      32'b?????????????????????1??????????:
        \10380  = b[252:230];
      32'b????????????????????1???????????:
        \10380  = b[275:253];
      32'b???????????????????1????????????:
        \10380  = b[298:276];
      32'b??????????????????1?????????????:
        \10380  = b[321:299];
      32'b?????????????????1??????????????:
        \10380  = b[344:322];
      32'b????????????????1???????????????:
        \10380  = b[367:345];
      32'b???????????????1????????????????:
        \10380  = b[390:368];
      32'b??????????????1?????????????????:
        \10380  = b[413:391];
      32'b?????????????1??????????????????:
        \10380  = b[436:414];
      32'b????????????1???????????????????:
        \10380  = b[459:437];
      32'b???????????1????????????????????:
        \10380  = b[482:460];
      32'b??????????1?????????????????????:
        \10380  = b[505:483];
      32'b?????????1??????????????????????:
        \10380  = b[528:506];
      32'b????????1???????????????????????:
        \10380  = b[551:529];
      32'b???????1????????????????????????:
        \10380  = b[574:552];
      32'b??????1?????????????????????????:
        \10380  = b[597:575];
      32'b?????1??????????????????????????:
        \10380  = b[620:598];
      32'b????1???????????????????????????:
        \10380  = b[643:621];
      32'b???1????????????????????????????:
        \10380  = b[666:644];
      32'b??1?????????????????????????????:
        \10380  = b[689:667];
      32'b?1??????????????????????????????:
        \10380  = b[712:690];
      32'b1???????????????????????????????:
        \10380  = b[735:713];
      default:
        \10380  = a;
    endcase
  endfunction
  assign o_lutb = \10380 (23'h000000, 736'hfe7ad5f74107e406e7b4e98f471ade4fbe3c3033779c8aede5a5d98abbaf5c9758cf5ea8ca1d45c7fa7f71f4fd1dea22a3d4ec27abce675cd28ec695bdabfabb9f3af7dfe3f1279be56737d18c07b1a85f828fbf47c2ff1cea7f647f, { ghdl_rtil_signal_62_, ghdl_rtil_signal_61_, ghdl_rtil_signal_60_, ghdl_rtil_signal_59_, ghdl_rtil_signal_58_, ghdl_rtil_signal_57_, ghdl_rtil_signal_56_, ghdl_rtil_signal_55_, ghdl_rtil_signal_54_, ghdl_rtil_signal_53_, ghdl_rtil_signal_52_, ghdl_rtil_signal_51_, ghdl_rtil_signal_50_, ghdl_rtil_signal_49_, ghdl_rtil_signal_48_, ghdl_rtil_signal_47_, ghdl_rtil_signal_46_, ghdl_rtil_signal_45_, ghdl_rtil_signal_44_, ghdl_rtil_signal_43_, ghdl_rtil_signal_42_, ghdl_rtil_signal_41_, ghdl_rtil_signal_40_, ghdl_rtil_signal_39_, ghdl_rtil_signal_38_, ghdl_rtil_signal_37_, ghdl_rtil_signal_36_, ghdl_rtil_signal_35_, ghdl_rtil_signal_34_, ghdl_rtil_signal_33_, ghdl_rtil_signal_32_, ghdl_rtil_signal_31_ });
endmodule

module fa(i_term1, i_term2, i_cin, o_sum, o_cout);
  wire ghdl_rtil_signal_0_;
  wire ghdl_rtil_signal_1_;
  input i_cin;
  wire i_cin;
  input i_term1;
  wire i_term1;
  input i_term2;
  wire i_term2;
  output o_cout;
  wire o_cout;
  output o_sum;
  wire o_sum;
  wire s_xor;
  assign s_xor = i_term1 ^ i_term2;
  assign ghdl_rtil_signal_0_ = i_term1 & i_term2;
  assign ghdl_rtil_signal_1_ = i_cin & s_xor;
  assign o_cout = ghdl_rtil_signal_0_ | ghdl_rtil_signal_1_;
  assign o_sum = s_xor ^ i_cin;
endmodule

module fp_leading_zeros_and_shift_27_8_4(frac, exp, frac_norm, exp_norm, underflow);
  wire ghdl_rtil_signal_000_;
  wire [4:0] ghdl_rtil_signal_001_;
  wire ghdl_rtil_signal_002_;
  wire ghdl_rtil_signal_003_;
  wire [4:0] ghdl_rtil_signal_004_;
  wire ghdl_rtil_signal_005_;
  wire ghdl_rtil_signal_006_;
  wire ghdl_rtil_signal_007_;
  wire ghdl_rtil_signal_008_;
  wire [4:0] ghdl_rtil_signal_009_;
  wire ghdl_rtil_signal_010_;
  wire ghdl_rtil_signal_011_;
  wire ghdl_rtil_signal_012_;
  wire ghdl_rtil_signal_013_;
  wire [4:0] ghdl_rtil_signal_014_;
  wire ghdl_rtil_signal_015_;
  wire ghdl_rtil_signal_016_;
  wire ghdl_rtil_signal_017_;
  wire ghdl_rtil_signal_018_;
  wire [4:0] ghdl_rtil_signal_019_;
  wire ghdl_rtil_signal_020_;
  wire ghdl_rtil_signal_021_;
  wire ghdl_rtil_signal_022_;
  wire ghdl_rtil_signal_023_;
  wire [4:0] ghdl_rtil_signal_024_;
  wire ghdl_rtil_signal_025_;
  wire ghdl_rtil_signal_026_;
  wire ghdl_rtil_signal_027_;
  wire ghdl_rtil_signal_028_;
  wire [4:0] ghdl_rtil_signal_029_;
  wire ghdl_rtil_signal_030_;
  wire ghdl_rtil_signal_031_;
  wire ghdl_rtil_signal_032_;
  wire ghdl_rtil_signal_033_;
  wire [4:0] ghdl_rtil_signal_034_;
  wire ghdl_rtil_signal_035_;
  wire ghdl_rtil_signal_036_;
  wire ghdl_rtil_signal_037_;
  wire ghdl_rtil_signal_038_;
  wire [4:0] ghdl_rtil_signal_039_;
  wire ghdl_rtil_signal_040_;
  wire ghdl_rtil_signal_041_;
  wire ghdl_rtil_signal_042_;
  wire ghdl_rtil_signal_043_;
  wire [4:0] ghdl_rtil_signal_044_;
  wire ghdl_rtil_signal_045_;
  wire ghdl_rtil_signal_046_;
  wire ghdl_rtil_signal_047_;
  wire ghdl_rtil_signal_048_;
  wire [4:0] ghdl_rtil_signal_049_;
  wire ghdl_rtil_signal_050_;
  wire ghdl_rtil_signal_051_;
  wire ghdl_rtil_signal_052_;
  wire ghdl_rtil_signal_053_;
  wire [4:0] ghdl_rtil_signal_054_;
  wire ghdl_rtil_signal_055_;
  wire ghdl_rtil_signal_056_;
  wire ghdl_rtil_signal_057_;
  wire ghdl_rtil_signal_058_;
  wire [4:0] ghdl_rtil_signal_059_;
  wire ghdl_rtil_signal_060_;
  wire ghdl_rtil_signal_061_;
  wire ghdl_rtil_signal_062_;
  wire ghdl_rtil_signal_063_;
  wire [4:0] ghdl_rtil_signal_064_;
  wire ghdl_rtil_signal_065_;
  wire ghdl_rtil_signal_066_;
  wire ghdl_rtil_signal_067_;
  wire ghdl_rtil_signal_068_;
  wire [4:0] ghdl_rtil_signal_069_;
  wire ghdl_rtil_signal_070_;
  wire ghdl_rtil_signal_071_;
  wire ghdl_rtil_signal_072_;
  wire ghdl_rtil_signal_073_;
  wire [4:0] ghdl_rtil_signal_074_;
  wire ghdl_rtil_signal_075_;
  wire ghdl_rtil_signal_076_;
  wire ghdl_rtil_signal_077_;
  wire ghdl_rtil_signal_078_;
  wire [4:0] ghdl_rtil_signal_079_;
  wire ghdl_rtil_signal_080_;
  wire ghdl_rtil_signal_081_;
  wire ghdl_rtil_signal_082_;
  wire ghdl_rtil_signal_083_;
  wire [4:0] ghdl_rtil_signal_084_;
  wire ghdl_rtil_signal_085_;
  wire ghdl_rtil_signal_086_;
  wire ghdl_rtil_signal_087_;
  wire ghdl_rtil_signal_088_;
  wire [4:0] ghdl_rtil_signal_089_;
  wire ghdl_rtil_signal_090_;
  wire ghdl_rtil_signal_091_;
  wire ghdl_rtil_signal_092_;
  wire ghdl_rtil_signal_093_;
  wire [4:0] ghdl_rtil_signal_094_;
  wire ghdl_rtil_signal_095_;
  wire ghdl_rtil_signal_096_;
  wire ghdl_rtil_signal_097_;
  wire ghdl_rtil_signal_098_;
  wire [4:0] ghdl_rtil_signal_099_;
  wire ghdl_rtil_signal_100_;
  wire ghdl_rtil_signal_101_;
  wire ghdl_rtil_signal_102_;
  wire ghdl_rtil_signal_103_;
  wire [4:0] ghdl_rtil_signal_104_;
  wire ghdl_rtil_signal_105_;
  wire ghdl_rtil_signal_106_;
  wire ghdl_rtil_signal_107_;
  wire ghdl_rtil_signal_108_;
  wire [4:0] ghdl_rtil_signal_109_;
  wire ghdl_rtil_signal_110_;
  wire ghdl_rtil_signal_111_;
  wire ghdl_rtil_signal_112_;
  wire ghdl_rtil_signal_113_;
  wire [4:0] ghdl_rtil_signal_114_;
  wire ghdl_rtil_signal_115_;
  wire ghdl_rtil_signal_116_;
  wire ghdl_rtil_signal_117_;
  wire ghdl_rtil_signal_118_;
  wire [4:0] ghdl_rtil_signal_119_;
  wire ghdl_rtil_signal_120_;
  wire ghdl_rtil_signal_121_;
  wire ghdl_rtil_signal_122_;
  wire ghdl_rtil_signal_123_;
  wire [4:0] ghdl_rtil_signal_124_;
  wire ghdl_rtil_signal_125_;
  wire ghdl_rtil_signal_126_;
  wire ghdl_rtil_signal_127_;
  wire ghdl_rtil_signal_128_;
  wire ghdl_rtil_signal_129_;
  wire ghdl_rtil_signal_130_;
  wire [7:0] ghdl_rtil_signal_131_;
  wire ghdl_rtil_signal_132_;
  wire ghdl_rtil_signal_133_;
  wire ghdl_rtil_signal_134_;
  wire [27:0] ghdl_rtil_signal_135_;
  wire [27:0] ghdl_rtil_signal_136_;
  wire [27:0] ghdl_rtil_signal_137_;
  wire [27:0] ghdl_rtil_signal_138_;
  input [7:0] exp;
  wire [7:0] exp;
  output [7:0] exp_norm;
  wire [7:0] exp_norm;
  input [27:0] frac;
  wire [27:0] frac;
  output [27:0] frac_norm;
  wire [27:0] frac_norm;
  wire isz;
  wire [4:0] leadzerosbin;
  output underflow;
  wire underflow;
  assign ghdl_rtil_signal_001_ = ghdl_rtil_signal_000_ ? 5'h1b : 5'h00;
  assign ghdl_rtil_signal_002_ = ghdl_rtil_signal_000_ ? 1'h0 : 1'h1;
  assign ghdl_rtil_signal_003_ = ! frac[26:1];
  assign ghdl_rtil_signal_004_ = ghdl_rtil_signal_007_ ? 5'h1a : ghdl_rtil_signal_001_;
  assign ghdl_rtil_signal_005_ = ghdl_rtil_signal_007_ ? 1'h0 : ghdl_rtil_signal_002_;
  assign ghdl_rtil_signal_006_ = ghdl_rtil_signal_002_ & ghdl_rtil_signal_003_;
  assign ghdl_rtil_signal_007_ = ghdl_rtil_signal_006_ & ghdl_rtil_signal_002_;
  assign ghdl_rtil_signal_008_ = ! frac[26:2];
  assign ghdl_rtil_signal_009_ = ghdl_rtil_signal_012_ ? 5'h19 : ghdl_rtil_signal_004_;
  assign ghdl_rtil_signal_010_ = ghdl_rtil_signal_012_ ? 1'h0 : ghdl_rtil_signal_005_;
  assign ghdl_rtil_signal_011_ = ghdl_rtil_signal_005_ & ghdl_rtil_signal_008_;
  assign ghdl_rtil_signal_012_ = ghdl_rtil_signal_011_ & ghdl_rtil_signal_005_;
  assign ghdl_rtil_signal_013_ = ! frac[26:3];
  assign ghdl_rtil_signal_014_ = ghdl_rtil_signal_017_ ? 5'h18 : ghdl_rtil_signal_009_;
  assign ghdl_rtil_signal_015_ = ghdl_rtil_signal_017_ ? 1'h0 : ghdl_rtil_signal_010_;
  assign ghdl_rtil_signal_016_ = ghdl_rtil_signal_010_ & ghdl_rtil_signal_013_;
  assign ghdl_rtil_signal_017_ = ghdl_rtil_signal_016_ & ghdl_rtil_signal_010_;
  assign ghdl_rtil_signal_018_ = ! frac[26:4];
  assign ghdl_rtil_signal_019_ = ghdl_rtil_signal_022_ ? 5'h17 : ghdl_rtil_signal_014_;
  assign ghdl_rtil_signal_020_ = ghdl_rtil_signal_022_ ? 1'h0 : ghdl_rtil_signal_015_;
  assign ghdl_rtil_signal_021_ = ghdl_rtil_signal_015_ & ghdl_rtil_signal_018_;
  assign ghdl_rtil_signal_022_ = ghdl_rtil_signal_021_ & ghdl_rtil_signal_015_;
  assign ghdl_rtil_signal_023_ = ! frac[26:5];
  assign ghdl_rtil_signal_024_ = ghdl_rtil_signal_027_ ? 5'h16 : ghdl_rtil_signal_019_;
  assign ghdl_rtil_signal_025_ = ghdl_rtil_signal_027_ ? 1'h0 : ghdl_rtil_signal_020_;
  assign ghdl_rtil_signal_026_ = ghdl_rtil_signal_020_ & ghdl_rtil_signal_023_;
  assign ghdl_rtil_signal_027_ = ghdl_rtil_signal_026_ & ghdl_rtil_signal_020_;
  assign ghdl_rtil_signal_028_ = ! frac[26:6];
  assign ghdl_rtil_signal_029_ = ghdl_rtil_signal_032_ ? 5'h15 : ghdl_rtil_signal_024_;
  assign ghdl_rtil_signal_030_ = ghdl_rtil_signal_032_ ? 1'h0 : ghdl_rtil_signal_025_;
  assign ghdl_rtil_signal_031_ = ghdl_rtil_signal_025_ & ghdl_rtil_signal_028_;
  assign ghdl_rtil_signal_032_ = ghdl_rtil_signal_031_ & ghdl_rtil_signal_025_;
  assign ghdl_rtil_signal_033_ = ! frac[26:7];
  assign ghdl_rtil_signal_034_ = ghdl_rtil_signal_037_ ? 5'h14 : ghdl_rtil_signal_029_;
  assign ghdl_rtil_signal_035_ = ghdl_rtil_signal_037_ ? 1'h0 : ghdl_rtil_signal_030_;
  assign ghdl_rtil_signal_036_ = ghdl_rtil_signal_030_ & ghdl_rtil_signal_033_;
  assign ghdl_rtil_signal_037_ = ghdl_rtil_signal_036_ & ghdl_rtil_signal_030_;
  assign ghdl_rtil_signal_038_ = ! frac[26:8];
  assign ghdl_rtil_signal_039_ = ghdl_rtil_signal_042_ ? 5'h13 : ghdl_rtil_signal_034_;
  assign ghdl_rtil_signal_040_ = ghdl_rtil_signal_042_ ? 1'h0 : ghdl_rtil_signal_035_;
  assign ghdl_rtil_signal_041_ = ghdl_rtil_signal_035_ & ghdl_rtil_signal_038_;
  assign ghdl_rtil_signal_042_ = ghdl_rtil_signal_041_ & ghdl_rtil_signal_035_;
  assign ghdl_rtil_signal_043_ = ! frac[26:9];
  assign ghdl_rtil_signal_044_ = ghdl_rtil_signal_047_ ? 5'h12 : ghdl_rtil_signal_039_;
  assign ghdl_rtil_signal_045_ = ghdl_rtil_signal_047_ ? 1'h0 : ghdl_rtil_signal_040_;
  assign ghdl_rtil_signal_046_ = ghdl_rtil_signal_040_ & ghdl_rtil_signal_043_;
  assign ghdl_rtil_signal_047_ = ghdl_rtil_signal_046_ & ghdl_rtil_signal_040_;
  assign ghdl_rtil_signal_048_ = ! frac[26:10];
  assign ghdl_rtil_signal_049_ = ghdl_rtil_signal_052_ ? 5'h11 : ghdl_rtil_signal_044_;
  assign ghdl_rtil_signal_050_ = ghdl_rtil_signal_052_ ? 1'h0 : ghdl_rtil_signal_045_;
  assign ghdl_rtil_signal_051_ = ghdl_rtil_signal_045_ & ghdl_rtil_signal_048_;
  assign ghdl_rtil_signal_052_ = ghdl_rtil_signal_051_ & ghdl_rtil_signal_045_;
  assign ghdl_rtil_signal_053_ = ! frac[26:11];
  assign ghdl_rtil_signal_054_ = ghdl_rtil_signal_057_ ? 5'h10 : ghdl_rtil_signal_049_;
  assign ghdl_rtil_signal_055_ = ghdl_rtil_signal_057_ ? 1'h0 : ghdl_rtil_signal_050_;
  assign ghdl_rtil_signal_056_ = ghdl_rtil_signal_050_ & ghdl_rtil_signal_053_;
  assign ghdl_rtil_signal_057_ = ghdl_rtil_signal_056_ & ghdl_rtil_signal_050_;
  assign ghdl_rtil_signal_058_ = ! frac[26:12];
  assign ghdl_rtil_signal_059_ = ghdl_rtil_signal_062_ ? 5'h0f : ghdl_rtil_signal_054_;
  assign ghdl_rtil_signal_060_ = ghdl_rtil_signal_062_ ? 1'h0 : ghdl_rtil_signal_055_;
  assign ghdl_rtil_signal_061_ = ghdl_rtil_signal_055_ & ghdl_rtil_signal_058_;
  assign ghdl_rtil_signal_062_ = ghdl_rtil_signal_061_ & ghdl_rtil_signal_055_;
  assign ghdl_rtil_signal_063_ = ! frac[26:13];
  assign ghdl_rtil_signal_064_ = ghdl_rtil_signal_067_ ? 5'h0e : ghdl_rtil_signal_059_;
  assign ghdl_rtil_signal_065_ = ghdl_rtil_signal_067_ ? 1'h0 : ghdl_rtil_signal_060_;
  assign ghdl_rtil_signal_066_ = ghdl_rtil_signal_060_ & ghdl_rtil_signal_063_;
  assign ghdl_rtil_signal_067_ = ghdl_rtil_signal_066_ & ghdl_rtil_signal_060_;
  assign ghdl_rtil_signal_068_ = ! frac[26:14];
  assign ghdl_rtil_signal_069_ = ghdl_rtil_signal_072_ ? 5'h0d : ghdl_rtil_signal_064_;
  assign ghdl_rtil_signal_070_ = ghdl_rtil_signal_072_ ? 1'h0 : ghdl_rtil_signal_065_;
  assign ghdl_rtil_signal_071_ = ghdl_rtil_signal_065_ & ghdl_rtil_signal_068_;
  assign ghdl_rtil_signal_072_ = ghdl_rtil_signal_071_ & ghdl_rtil_signal_065_;
  assign ghdl_rtil_signal_073_ = ! frac[26:15];
  assign ghdl_rtil_signal_074_ = ghdl_rtil_signal_077_ ? 5'h0c : ghdl_rtil_signal_069_;
  assign ghdl_rtil_signal_075_ = ghdl_rtil_signal_077_ ? 1'h0 : ghdl_rtil_signal_070_;
  assign ghdl_rtil_signal_076_ = ghdl_rtil_signal_070_ & ghdl_rtil_signal_073_;
  assign ghdl_rtil_signal_077_ = ghdl_rtil_signal_076_ & ghdl_rtil_signal_070_;
  assign ghdl_rtil_signal_078_ = ! frac[26:16];
  assign ghdl_rtil_signal_079_ = ghdl_rtil_signal_082_ ? 5'h0b : ghdl_rtil_signal_074_;
  assign ghdl_rtil_signal_080_ = ghdl_rtil_signal_082_ ? 1'h0 : ghdl_rtil_signal_075_;
  assign ghdl_rtil_signal_081_ = ghdl_rtil_signal_075_ & ghdl_rtil_signal_078_;
  assign ghdl_rtil_signal_082_ = ghdl_rtil_signal_081_ & ghdl_rtil_signal_075_;
  assign ghdl_rtil_signal_083_ = ! frac[26:17];
  assign ghdl_rtil_signal_084_ = ghdl_rtil_signal_087_ ? 5'h0a : ghdl_rtil_signal_079_;
  assign ghdl_rtil_signal_085_ = ghdl_rtil_signal_087_ ? 1'h0 : ghdl_rtil_signal_080_;
  assign ghdl_rtil_signal_086_ = ghdl_rtil_signal_080_ & ghdl_rtil_signal_083_;
  assign ghdl_rtil_signal_087_ = ghdl_rtil_signal_086_ & ghdl_rtil_signal_080_;
  assign ghdl_rtil_signal_088_ = ! frac[26:18];
  assign ghdl_rtil_signal_089_ = ghdl_rtil_signal_092_ ? 5'h09 : ghdl_rtil_signal_084_;
  assign ghdl_rtil_signal_090_ = ghdl_rtil_signal_092_ ? 1'h0 : ghdl_rtil_signal_085_;
  assign ghdl_rtil_signal_091_ = ghdl_rtil_signal_085_ & ghdl_rtil_signal_088_;
  assign ghdl_rtil_signal_092_ = ghdl_rtil_signal_091_ & ghdl_rtil_signal_085_;
  assign ghdl_rtil_signal_093_ = ! frac[26:19];
  assign ghdl_rtil_signal_094_ = ghdl_rtil_signal_097_ ? 5'h08 : ghdl_rtil_signal_089_;
  assign ghdl_rtil_signal_095_ = ghdl_rtil_signal_097_ ? 1'h0 : ghdl_rtil_signal_090_;
  assign ghdl_rtil_signal_096_ = ghdl_rtil_signal_090_ & ghdl_rtil_signal_093_;
  assign ghdl_rtil_signal_097_ = ghdl_rtil_signal_096_ & ghdl_rtil_signal_090_;
  assign ghdl_rtil_signal_098_ = ! frac[26:20];
  assign ghdl_rtil_signal_099_ = ghdl_rtil_signal_102_ ? 5'h07 : ghdl_rtil_signal_094_;
  assign ghdl_rtil_signal_100_ = ghdl_rtil_signal_102_ ? 1'h0 : ghdl_rtil_signal_095_;
  assign ghdl_rtil_signal_101_ = ghdl_rtil_signal_095_ & ghdl_rtil_signal_098_;
  assign ghdl_rtil_signal_102_ = ghdl_rtil_signal_101_ & ghdl_rtil_signal_095_;
  assign ghdl_rtil_signal_103_ = ! frac[26:21];
  assign ghdl_rtil_signal_104_ = ghdl_rtil_signal_107_ ? 5'h06 : ghdl_rtil_signal_099_;
  assign ghdl_rtil_signal_105_ = ghdl_rtil_signal_107_ ? 1'h0 : ghdl_rtil_signal_100_;
  assign ghdl_rtil_signal_106_ = ghdl_rtil_signal_100_ & ghdl_rtil_signal_103_;
  assign ghdl_rtil_signal_107_ = ghdl_rtil_signal_106_ & ghdl_rtil_signal_100_;
  assign ghdl_rtil_signal_108_ = ! frac[26:22];
  assign ghdl_rtil_signal_109_ = ghdl_rtil_signal_112_ ? 5'h05 : ghdl_rtil_signal_104_;
  assign ghdl_rtil_signal_110_ = ghdl_rtil_signal_112_ ? 1'h0 : ghdl_rtil_signal_105_;
  assign ghdl_rtil_signal_111_ = ghdl_rtil_signal_105_ & ghdl_rtil_signal_108_;
  assign ghdl_rtil_signal_112_ = ghdl_rtil_signal_111_ & ghdl_rtil_signal_105_;
  assign ghdl_rtil_signal_113_ = ! frac[26:23];
  assign ghdl_rtil_signal_114_ = ghdl_rtil_signal_117_ ? 5'h04 : ghdl_rtil_signal_109_;
  assign ghdl_rtil_signal_115_ = ghdl_rtil_signal_117_ ? 1'h0 : ghdl_rtil_signal_110_;
  assign ghdl_rtil_signal_116_ = ghdl_rtil_signal_110_ & ghdl_rtil_signal_113_;
  assign ghdl_rtil_signal_117_ = ghdl_rtil_signal_116_ & ghdl_rtil_signal_110_;
  assign ghdl_rtil_signal_118_ = ! frac[26:24];
  assign ghdl_rtil_signal_119_ = ghdl_rtil_signal_122_ ? 5'h03 : ghdl_rtil_signal_114_;
  assign ghdl_rtil_signal_120_ = ghdl_rtil_signal_122_ ? 1'h0 : ghdl_rtil_signal_115_;
  assign ghdl_rtil_signal_121_ = ghdl_rtil_signal_115_ & ghdl_rtil_signal_118_;
  assign ghdl_rtil_signal_122_ = ghdl_rtil_signal_121_ & ghdl_rtil_signal_115_;
  assign ghdl_rtil_signal_123_ = ! frac[26:25];
  assign ghdl_rtil_signal_124_ = ghdl_rtil_signal_127_ ? 5'h02 : ghdl_rtil_signal_119_;
  assign ghdl_rtil_signal_125_ = ghdl_rtil_signal_127_ ? 1'h0 : ghdl_rtil_signal_120_;
  assign ghdl_rtil_signal_126_ = ghdl_rtil_signal_120_ & ghdl_rtil_signal_123_;
  assign ghdl_rtil_signal_127_ = ghdl_rtil_signal_126_ & ghdl_rtil_signal_120_;
  assign ghdl_rtil_signal_128_ = ~ frac[26];
  assign leadzerosbin = ghdl_rtil_signal_130_ ? 5'h01 : ghdl_rtil_signal_124_;
  assign ghdl_rtil_signal_129_ = ghdl_rtil_signal_125_ & ghdl_rtil_signal_128_;
  assign ghdl_rtil_signal_130_ = ghdl_rtil_signal_129_ & ghdl_rtil_signal_125_;
  assign ghdl_rtil_signal_131_ = exp - { 3'h0, leadzerosbin };
  assign exp_norm = isz ? 8'h00 : ghdl_rtil_signal_131_;
  assign ghdl_rtil_signal_000_ = ! frac[26:0];
  assign isz = ghdl_rtil_signal_000_ ? 1'h1 : 1'h0;
  assign ghdl_rtil_signal_132_ = ~ isz;
  assign ghdl_rtil_signal_133_ = exp > { 3'h0, leadzerosbin };
  assign ghdl_rtil_signal_134_ = ghdl_rtil_signal_133_ & ghdl_rtil_signal_132_;
  assign underflow = ghdl_rtil_signal_134_ ? 1'h0 : 1'h1;
  assign ghdl_rtil_signal_135_ = leadzerosbin[4] ? { frac[11:0], 16'h0000 } : frac;
  assign ghdl_rtil_signal_136_ = leadzerosbin[3] ? { ghdl_rtil_signal_135_[19:0], 8'h00 } : ghdl_rtil_signal_135_;
  assign ghdl_rtil_signal_137_ = leadzerosbin[2] ? { ghdl_rtil_signal_136_[23:0], 4'h0 } : ghdl_rtil_signal_136_;
  assign ghdl_rtil_signal_138_ = leadzerosbin[1] ? { ghdl_rtil_signal_137_[25:0], 2'h0 } : ghdl_rtil_signal_137_;
  assign frac_norm = leadzerosbin[0] ? { ghdl_rtil_signal_138_[26:0], 1'h0 } : ghdl_rtil_signal_138_;
endmodule

module left_shifter_32(i_data, i_shifts, o_datashift);
  wire ghdl_rtil_signal_000_;
  wire ghdl_rtil_signal_001_;
  wire ghdl_rtil_signal_002_;
  wire ghdl_rtil_signal_003_;
  wire ghdl_rtil_signal_004_;
  wire ghdl_rtil_signal_005_;
  wire ghdl_rtil_signal_006_;
  wire ghdl_rtil_signal_007_;
  wire ghdl_rtil_signal_008_;
  wire ghdl_rtil_signal_009_;
  wire ghdl_rtil_signal_010_;
  wire ghdl_rtil_signal_011_;
  wire ghdl_rtil_signal_012_;
  wire ghdl_rtil_signal_013_;
  wire ghdl_rtil_signal_014_;
  wire ghdl_rtil_signal_015_;
  wire ghdl_rtil_signal_016_;
  wire ghdl_rtil_signal_017_;
  wire ghdl_rtil_signal_018_;
  wire ghdl_rtil_signal_019_;
  wire ghdl_rtil_signal_020_;
  wire ghdl_rtil_signal_021_;
  wire ghdl_rtil_signal_022_;
  wire ghdl_rtil_signal_023_;
  wire ghdl_rtil_signal_024_;
  wire ghdl_rtil_signal_025_;
  wire ghdl_rtil_signal_026_;
  wire ghdl_rtil_signal_027_;
  wire ghdl_rtil_signal_028_;
  wire ghdl_rtil_signal_029_;
  wire ghdl_rtil_signal_030_;
  wire ghdl_rtil_signal_031_;
  wire ghdl_rtil_signal_032_;
  wire ghdl_rtil_signal_033_;
  wire ghdl_rtil_signal_034_;
  wire ghdl_rtil_signal_035_;
  wire ghdl_rtil_signal_036_;
  wire ghdl_rtil_signal_037_;
  wire ghdl_rtil_signal_038_;
  wire ghdl_rtil_signal_039_;
  wire ghdl_rtil_signal_040_;
  wire ghdl_rtil_signal_041_;
  wire ghdl_rtil_signal_042_;
  wire ghdl_rtil_signal_043_;
  wire ghdl_rtil_signal_044_;
  wire ghdl_rtil_signal_045_;
  wire ghdl_rtil_signal_046_;
  wire ghdl_rtil_signal_047_;
  wire ghdl_rtil_signal_048_;
  wire ghdl_rtil_signal_049_;
  wire ghdl_rtil_signal_050_;
  wire ghdl_rtil_signal_051_;
  wire ghdl_rtil_signal_052_;
  wire ghdl_rtil_signal_053_;
  wire ghdl_rtil_signal_054_;
  wire ghdl_rtil_signal_055_;
  wire ghdl_rtil_signal_056_;
  wire ghdl_rtil_signal_057_;
  wire ghdl_rtil_signal_058_;
  wire ghdl_rtil_signal_059_;
  wire ghdl_rtil_signal_060_;
  wire ghdl_rtil_signal_061_;
  wire ghdl_rtil_signal_062_;
  wire ghdl_rtil_signal_063_;
  wire ghdl_rtil_signal_064_;
  wire ghdl_rtil_signal_065_;
  wire ghdl_rtil_signal_066_;
  wire ghdl_rtil_signal_067_;
  wire ghdl_rtil_signal_068_;
  wire ghdl_rtil_signal_069_;
  wire ghdl_rtil_signal_070_;
  wire ghdl_rtil_signal_071_;
  wire ghdl_rtil_signal_072_;
  wire ghdl_rtil_signal_073_;
  wire ghdl_rtil_signal_074_;
  wire ghdl_rtil_signal_075_;
  wire ghdl_rtil_signal_076_;
  wire ghdl_rtil_signal_077_;
  wire ghdl_rtil_signal_078_;
  wire ghdl_rtil_signal_079_;
  wire ghdl_rtil_signal_080_;
  wire ghdl_rtil_signal_081_;
  wire ghdl_rtil_signal_082_;
  wire ghdl_rtil_signal_083_;
  wire ghdl_rtil_signal_084_;
  wire ghdl_rtil_signal_085_;
  wire ghdl_rtil_signal_086_;
  wire ghdl_rtil_signal_087_;
  wire ghdl_rtil_signal_088_;
  wire ghdl_rtil_signal_089_;
  wire ghdl_rtil_signal_090_;
  wire ghdl_rtil_signal_091_;
  wire ghdl_rtil_signal_092_;
  wire ghdl_rtil_signal_093_;
  wire ghdl_rtil_signal_094_;
  wire ghdl_rtil_signal_095_;
  wire ghdl_rtil_signal_096_;
  wire ghdl_rtil_signal_097_;
  wire ghdl_rtil_signal_098_;
  wire ghdl_rtil_signal_099_;
  wire ghdl_rtil_signal_100_;
  wire ghdl_rtil_signal_101_;
  wire ghdl_rtil_signal_102_;
  wire ghdl_rtil_signal_103_;
  wire ghdl_rtil_signal_104_;
  wire ghdl_rtil_signal_105_;
  wire ghdl_rtil_signal_106_;
  wire ghdl_rtil_signal_107_;
  wire ghdl_rtil_signal_108_;
  wire ghdl_rtil_signal_109_;
  wire ghdl_rtil_signal_110_;
  wire ghdl_rtil_signal_111_;
  wire ghdl_rtil_signal_112_;
  wire ghdl_rtil_signal_113_;
  wire ghdl_rtil_signal_114_;
  wire ghdl_rtil_signal_115_;
  wire ghdl_rtil_signal_116_;
  wire ghdl_rtil_signal_117_;
  wire ghdl_rtil_signal_118_;
  wire ghdl_rtil_signal_119_;
  wire ghdl_rtil_signal_120_;
  wire ghdl_rtil_signal_121_;
  wire ghdl_rtil_signal_122_;
  wire ghdl_rtil_signal_123_;
  wire ghdl_rtil_signal_124_;
  wire ghdl_rtil_signal_125_;
  wire ghdl_rtil_signal_126_;
  wire ghdl_rtil_signal_127_;
  wire [4:0] ghdl_rtil_signal_128_;
  input [31:0] i_data;
  wire [31:0] i_data;
  input [4:0] i_shifts;
  wire [4:0] i_shifts;
  output [31:0] o_datashift;
  wire [31:0] o_datashift;
  assign ghdl_rtil_signal_009_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_070_ : 1'h0;
  assign ghdl_rtil_signal_011_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_073_ : 1'h0;
  assign ghdl_rtil_signal_013_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_065_ : 1'h0;
  assign ghdl_rtil_signal_015_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_068_ : ghdl_rtil_signal_067_;
  assign ghdl_rtil_signal_019_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_074_ : ghdl_rtil_signal_073_;
  assign ghdl_rtil_signal_002_ = ghdl_rtil_signal_128_[0] ? i_data[2] : i_data[1];
  assign ghdl_rtil_signal_006_ = ghdl_rtil_signal_128_[0] ? i_data[6] : i_data[5];
  assign ghdl_rtil_signal_014_ = ghdl_rtil_signal_128_[0] ? i_data[10] : i_data[9];
  assign ghdl_rtil_signal_022_ = ghdl_rtil_signal_128_[0] ? i_data[14] : i_data[13];
  assign ghdl_rtil_signal_023_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_078_ : ghdl_rtil_signal_068_;
  assign ghdl_rtil_signal_003_ = ghdl_rtil_signal_128_[0] ? i_data[3] : i_data[2];
  assign ghdl_rtil_signal_008_ = ghdl_rtil_signal_128_[0] ? i_data[7] : i_data[6];
  assign ghdl_rtil_signal_020_ = ghdl_rtil_signal_128_[0] ? i_data[13] : i_data[12];
  assign ghdl_rtil_signal_028_ = ghdl_rtil_signal_128_[0] ? i_data[17] : i_data[16];
  assign ghdl_rtil_signal_031_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_086_ : ghdl_rtil_signal_078_;
  assign ghdl_rtil_signal_016_ = ghdl_rtil_signal_128_[0] ? i_data[11] : i_data[10];
  assign ghdl_rtil_signal_033_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_088_ : ghdl_rtil_signal_080_;
  assign ghdl_rtil_signal_034_ = ghdl_rtil_signal_128_[0] ? i_data[20] : i_data[19];
  assign ghdl_rtil_signal_037_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_092_ : ghdl_rtil_signal_084_;
  assign ghdl_rtil_signal_041_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_097_ : ghdl_rtil_signal_088_;
  assign ghdl_rtil_signal_025_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_080_ : ghdl_rtil_signal_071_;
  assign ghdl_rtil_signal_027_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_082_ : ghdl_rtil_signal_074_;
  assign ghdl_rtil_signal_035_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_090_ : ghdl_rtil_signal_082_;
  assign ghdl_rtil_signal_000_ = ghdl_rtil_signal_128_[0] ? i_data[0] : 1'h0;
  assign ghdl_rtil_signal_004_ = ghdl_rtil_signal_128_[0] ? i_data[4] : i_data[3];
  assign ghdl_rtil_signal_010_ = ghdl_rtil_signal_128_[0] ? i_data[8] : i_data[7];
  assign ghdl_rtil_signal_018_ = ghdl_rtil_signal_128_[0] ? i_data[12] : i_data[11];
  assign ghdl_rtil_signal_026_ = ghdl_rtil_signal_128_[0] ? i_data[16] : i_data[15];
  assign ghdl_rtil_signal_007_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_067_ : 1'h0;
  assign ghdl_rtil_signal_039_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_094_ : ghdl_rtil_signal_086_;
  assign ghdl_rtil_signal_001_ = ghdl_rtil_signal_128_[0] ? i_data[1] : i_data[0];
  assign ghdl_rtil_signal_005_ = ghdl_rtil_signal_128_[0] ? i_data[5] : i_data[4];
  assign ghdl_rtil_signal_012_ = ghdl_rtil_signal_128_[0] ? i_data[9] : i_data[8];
  assign ghdl_rtil_signal_043_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_100_ : ghdl_rtil_signal_090_;
  assign ghdl_rtil_signal_024_ = ghdl_rtil_signal_128_[0] ? i_data[15] : i_data[14];
  assign ghdl_rtil_signal_032_ = ghdl_rtil_signal_128_[0] ? i_data[19] : i_data[18];
  assign ghdl_rtil_signal_045_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_102_ : ghdl_rtil_signal_092_;
  assign ghdl_rtil_signal_047_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_104_ : ghdl_rtil_signal_094_;
  assign ghdl_rtil_signal_036_ = ghdl_rtil_signal_128_[0] ? i_data[21] : i_data[20];
  assign ghdl_rtil_signal_017_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_071_ : ghdl_rtil_signal_070_;
  assign ghdl_rtil_signal_049_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_106_ : ghdl_rtil_signal_097_;
  assign ghdl_rtil_signal_030_ = ghdl_rtil_signal_128_[0] ? i_data[18] : i_data[17];
  assign ghdl_rtil_signal_038_ = ghdl_rtil_signal_128_[0] ? i_data[22] : i_data[21];
  assign ghdl_rtil_signal_051_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_108_ : ghdl_rtil_signal_100_;
  assign ghdl_rtil_signal_040_ = ghdl_rtil_signal_128_[0] ? i_data[23] : i_data[22];
  assign ghdl_rtil_signal_021_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_076_ : ghdl_rtil_signal_065_;
  assign ghdl_rtil_signal_053_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_110_ : ghdl_rtil_signal_102_;
  assign ghdl_rtil_signal_042_ = ghdl_rtil_signal_128_[0] ? i_data[24] : i_data[23];
  assign ghdl_rtil_signal_054_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_112_ : ghdl_rtil_signal_104_;
  assign ghdl_rtil_signal_044_ = ghdl_rtil_signal_128_[0] ? i_data[25] : i_data[24];
  assign ghdl_rtil_signal_055_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_114_ : ghdl_rtil_signal_106_;
  assign ghdl_rtil_signal_046_ = ghdl_rtil_signal_128_[0] ? i_data[26] : i_data[25];
  assign ghdl_rtil_signal_056_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_116_ : ghdl_rtil_signal_108_;
  assign ghdl_rtil_signal_048_ = ghdl_rtil_signal_128_[0] ? i_data[27] : i_data[26];
  assign ghdl_rtil_signal_029_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_084_ : ghdl_rtil_signal_076_;
  assign ghdl_rtil_signal_057_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_118_ : ghdl_rtil_signal_110_;
  assign ghdl_rtil_signal_050_ = ghdl_rtil_signal_128_[0] ? i_data[28] : i_data[27];
  assign ghdl_rtil_signal_058_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_120_ : ghdl_rtil_signal_112_;
  assign ghdl_rtil_signal_052_ = ghdl_rtil_signal_128_[0] ? i_data[29] : i_data[28];
  assign ghdl_rtil_signal_059_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_122_ : ghdl_rtil_signal_114_;
  assign ghdl_rtil_signal_060_ = ghdl_rtil_signal_128_[0] ? i_data[30] : i_data[29];
  assign ghdl_rtil_signal_061_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_124_ : ghdl_rtil_signal_116_;
  assign ghdl_rtil_signal_062_ = ghdl_rtil_signal_128_[0] ? i_data[31] : i_data[30];
  assign ghdl_rtil_signal_063_ = ghdl_rtil_signal_128_[2] ? ghdl_rtil_signal_126_ : ghdl_rtil_signal_118_;
  assign ghdl_rtil_signal_098_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_009_ : 1'h0;
  assign ghdl_rtil_signal_064_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_011_ : 1'h0;
  assign ghdl_rtil_signal_066_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_013_ : 1'h0;
  assign ghdl_rtil_signal_069_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_015_ : 1'h0;
  assign ghdl_rtil_signal_071_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_005_ : ghdl_rtil_signal_003_;
  assign ghdl_rtil_signal_073_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_002_ : ghdl_rtil_signal_000_;
  assign ghdl_rtil_signal_074_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_006_ : ghdl_rtil_signal_004_;
  assign ghdl_rtil_signal_075_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_019_ : 1'h0;
  assign ghdl_rtil_signal_080_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_012_ : ghdl_rtil_signal_008_;
  assign ghdl_rtil_signal_081_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_025_ : ghdl_rtil_signal_009_;
  assign ghdl_rtil_signal_082_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_014_ : ghdl_rtil_signal_010_;
  assign ghdl_rtil_signal_083_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_027_ : ghdl_rtil_signal_011_;
  assign ghdl_rtil_signal_067_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_000_ : 1'h0;
  assign ghdl_rtil_signal_068_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_004_ : ghdl_rtil_signal_002_;
  assign ghdl_rtil_signal_078_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_010_ : ghdl_rtil_signal_006_;
  assign ghdl_rtil_signal_086_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_018_ : ghdl_rtil_signal_014_;
  assign ghdl_rtil_signal_091_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_035_ : ghdl_rtil_signal_019_;
  assign ghdl_rtil_signal_084_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_016_ : ghdl_rtil_signal_012_;
  assign ghdl_rtil_signal_092_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_024_ : ghdl_rtil_signal_020_;
  assign ghdl_rtil_signal_093_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_037_ : ghdl_rtil_signal_021_;
  assign ghdl_rtil_signal_094_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_026_ : ghdl_rtil_signal_022_;
  assign ghdl_rtil_signal_095_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_007_ : 1'h0;
  assign ghdl_rtil_signal_096_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_039_ : ghdl_rtil_signal_023_;
  assign ghdl_rtil_signal_070_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_001_ : 1'h0;
  assign ghdl_rtil_signal_099_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_041_ : ghdl_rtil_signal_025_;
  assign ghdl_rtil_signal_090_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_022_ : ghdl_rtil_signal_018_;
  assign ghdl_rtil_signal_101_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_043_ : ghdl_rtil_signal_027_;
  assign ghdl_rtil_signal_102_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_032_ : ghdl_rtil_signal_028_;
  assign ghdl_rtil_signal_103_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_045_ : ghdl_rtil_signal_029_;
  assign ghdl_rtil_signal_104_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_034_ : ghdl_rtil_signal_030_;
  assign ghdl_rtil_signal_105_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_047_ : ghdl_rtil_signal_031_;
  assign ghdl_rtil_signal_088_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_020_ : ghdl_rtil_signal_016_;
  assign ghdl_rtil_signal_097_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_028_ : ghdl_rtil_signal_024_;
  assign ghdl_rtil_signal_106_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_036_ : ghdl_rtil_signal_032_;
  assign ghdl_rtil_signal_072_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_017_ : 1'h0;
  assign ghdl_rtil_signal_107_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_049_ : ghdl_rtil_signal_033_;
  assign ghdl_rtil_signal_100_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_030_ : ghdl_rtil_signal_026_;
  assign ghdl_rtil_signal_108_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_038_ : ghdl_rtil_signal_034_;
  assign ghdl_rtil_signal_109_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_051_ : ghdl_rtil_signal_035_;
  assign ghdl_rtil_signal_065_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_003_ : ghdl_rtil_signal_001_;
  assign ghdl_rtil_signal_076_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_008_ : ghdl_rtil_signal_005_;
  assign ghdl_rtil_signal_110_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_040_ : ghdl_rtil_signal_036_;
  assign ghdl_rtil_signal_077_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_021_ : 1'h0;
  assign ghdl_rtil_signal_111_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_053_ : ghdl_rtil_signal_037_;
  assign ghdl_rtil_signal_112_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_042_ : ghdl_rtil_signal_038_;
  assign ghdl_rtil_signal_079_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_023_ : ghdl_rtil_signal_007_;
  assign ghdl_rtil_signal_113_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_054_ : ghdl_rtil_signal_039_;
  assign ghdl_rtil_signal_114_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_044_ : ghdl_rtil_signal_040_;
  assign ghdl_rtil_signal_115_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_055_ : ghdl_rtil_signal_041_;
  assign ghdl_rtil_signal_116_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_046_ : ghdl_rtil_signal_042_;
  assign ghdl_rtil_signal_117_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_056_ : ghdl_rtil_signal_043_;
  assign ghdl_rtil_signal_118_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_048_ : ghdl_rtil_signal_044_;
  assign ghdl_rtil_signal_085_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_029_ : ghdl_rtil_signal_013_;
  assign ghdl_rtil_signal_119_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_057_ : ghdl_rtil_signal_045_;
  assign ghdl_rtil_signal_120_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_050_ : ghdl_rtil_signal_046_;
  assign ghdl_rtil_signal_087_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_031_ : ghdl_rtil_signal_015_;
  assign ghdl_rtil_signal_121_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_058_ : ghdl_rtil_signal_047_;
  assign ghdl_rtil_signal_122_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_052_ : ghdl_rtil_signal_048_;
  assign ghdl_rtil_signal_089_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_033_ : ghdl_rtil_signal_017_;
  assign ghdl_rtil_signal_123_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_059_ : ghdl_rtil_signal_049_;
  assign ghdl_rtil_signal_124_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_060_ : ghdl_rtil_signal_050_;
  assign ghdl_rtil_signal_125_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_061_ : ghdl_rtil_signal_051_;
  assign ghdl_rtil_signal_126_ = ghdl_rtil_signal_128_[1] ? ghdl_rtil_signal_062_ : ghdl_rtil_signal_052_;
  assign ghdl_rtil_signal_127_ = ghdl_rtil_signal_128_[3] ? ghdl_rtil_signal_063_ : ghdl_rtil_signal_053_;
  assign ghdl_rtil_signal_128_ = 5'h1f - i_shifts;
  assign o_datashift[0] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_095_ : 1'h0;
  assign o_datashift[1] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_098_ : 1'h0;
  assign o_datashift[2] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_064_ : 1'h0;
  assign o_datashift[3] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_066_ : 1'h0;
  assign o_datashift[4] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_069_ : 1'h0;
  assign o_datashift[5] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_072_ : 1'h0;
  assign o_datashift[6] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_075_ : 1'h0;
  assign o_datashift[7] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_077_ : 1'h0;
  assign o_datashift[8] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_079_ : 1'h0;
  assign o_datashift[9] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_081_ : 1'h0;
  assign o_datashift[10] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_083_ : 1'h0;
  assign o_datashift[11] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_085_ : 1'h0;
  assign o_datashift[12] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_087_ : 1'h0;
  assign o_datashift[13] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_089_ : 1'h0;
  assign o_datashift[14] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_091_ : 1'h0;
  assign o_datashift[15] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_093_ : 1'h0;
  assign o_datashift[16] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_096_ : ghdl_rtil_signal_095_;
  assign o_datashift[17] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_099_ : ghdl_rtil_signal_098_;
  assign o_datashift[18] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_101_ : ghdl_rtil_signal_064_;
  assign o_datashift[19] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_103_ : ghdl_rtil_signal_066_;
  assign o_datashift[20] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_105_ : ghdl_rtil_signal_069_;
  assign o_datashift[21] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_107_ : ghdl_rtil_signal_072_;
  assign o_datashift[22] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_109_ : ghdl_rtil_signal_075_;
  assign o_datashift[23] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_111_ : ghdl_rtil_signal_077_;
  assign o_datashift[24] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_113_ : ghdl_rtil_signal_079_;
  assign o_datashift[25] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_115_ : ghdl_rtil_signal_081_;
  assign o_datashift[26] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_117_ : ghdl_rtil_signal_083_;
  assign o_datashift[27] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_119_ : ghdl_rtil_signal_085_;
  assign o_datashift[28] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_121_ : ghdl_rtil_signal_087_;
  assign o_datashift[29] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_123_ : ghdl_rtil_signal_089_;
  assign o_datashift[30] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_125_ : ghdl_rtil_signal_091_;
  assign o_datashift[31] = ghdl_rtil_signal_128_[4] ? ghdl_rtil_signal_127_ : ghdl_rtil_signal_093_;
endmodule

module left_shifter_46(i_data, i_shifts, o_datashift);
  wire ghdl_rtil_signal_000_;
  wire ghdl_rtil_signal_001_;
  wire ghdl_rtil_signal_002_;
  wire ghdl_rtil_signal_003_;
  wire ghdl_rtil_signal_004_;
  wire ghdl_rtil_signal_005_;
  wire ghdl_rtil_signal_006_;
  wire ghdl_rtil_signal_007_;
  wire ghdl_rtil_signal_008_;
  wire ghdl_rtil_signal_009_;
  wire ghdl_rtil_signal_010_;
  wire ghdl_rtil_signal_011_;
  wire ghdl_rtil_signal_012_;
  wire ghdl_rtil_signal_013_;
  wire ghdl_rtil_signal_014_;
  wire ghdl_rtil_signal_015_;
  wire ghdl_rtil_signal_016_;
  wire ghdl_rtil_signal_017_;
  wire ghdl_rtil_signal_018_;
  wire ghdl_rtil_signal_019_;
  wire ghdl_rtil_signal_020_;
  wire ghdl_rtil_signal_021_;
  wire ghdl_rtil_signal_022_;
  wire ghdl_rtil_signal_023_;
  wire ghdl_rtil_signal_024_;
  wire ghdl_rtil_signal_025_;
  wire ghdl_rtil_signal_026_;
  wire ghdl_rtil_signal_027_;
  wire ghdl_rtil_signal_028_;
  wire ghdl_rtil_signal_029_;
  wire ghdl_rtil_signal_030_;
  wire ghdl_rtil_signal_031_;
  wire ghdl_rtil_signal_032_;
  wire ghdl_rtil_signal_033_;
  wire ghdl_rtil_signal_034_;
  wire ghdl_rtil_signal_035_;
  wire ghdl_rtil_signal_036_;
  wire ghdl_rtil_signal_037_;
  wire ghdl_rtil_signal_038_;
  wire ghdl_rtil_signal_039_;
  wire ghdl_rtil_signal_040_;
  wire ghdl_rtil_signal_041_;
  wire ghdl_rtil_signal_042_;
  wire ghdl_rtil_signal_043_;
  wire ghdl_rtil_signal_044_;
  wire ghdl_rtil_signal_045_;
  wire ghdl_rtil_signal_046_;
  wire ghdl_rtil_signal_047_;
  wire ghdl_rtil_signal_048_;
  wire ghdl_rtil_signal_049_;
  wire ghdl_rtil_signal_050_;
  wire ghdl_rtil_signal_051_;
  wire ghdl_rtil_signal_052_;
  wire ghdl_rtil_signal_053_;
  wire ghdl_rtil_signal_054_;
  wire ghdl_rtil_signal_055_;
  wire ghdl_rtil_signal_056_;
  wire ghdl_rtil_signal_057_;
  wire ghdl_rtil_signal_058_;
  wire ghdl_rtil_signal_059_;
  wire ghdl_rtil_signal_060_;
  wire ghdl_rtil_signal_061_;
  wire ghdl_rtil_signal_062_;
  wire ghdl_rtil_signal_063_;
  wire ghdl_rtil_signal_064_;
  wire ghdl_rtil_signal_065_;
  wire ghdl_rtil_signal_066_;
  wire ghdl_rtil_signal_067_;
  wire ghdl_rtil_signal_068_;
  wire ghdl_rtil_signal_069_;
  wire ghdl_rtil_signal_070_;
  wire ghdl_rtil_signal_071_;
  wire ghdl_rtil_signal_072_;
  wire ghdl_rtil_signal_073_;
  wire ghdl_rtil_signal_074_;
  wire ghdl_rtil_signal_075_;
  wire ghdl_rtil_signal_076_;
  wire ghdl_rtil_signal_077_;
  wire ghdl_rtil_signal_078_;
  wire ghdl_rtil_signal_079_;
  wire ghdl_rtil_signal_080_;
  wire ghdl_rtil_signal_081_;
  wire ghdl_rtil_signal_082_;
  wire ghdl_rtil_signal_083_;
  wire ghdl_rtil_signal_084_;
  wire ghdl_rtil_signal_085_;
  wire ghdl_rtil_signal_086_;
  wire ghdl_rtil_signal_087_;
  wire ghdl_rtil_signal_088_;
  wire ghdl_rtil_signal_089_;
  wire ghdl_rtil_signal_090_;
  wire ghdl_rtil_signal_091_;
  wire ghdl_rtil_signal_092_;
  wire ghdl_rtil_signal_093_;
  wire ghdl_rtil_signal_094_;
  wire ghdl_rtil_signal_095_;
  wire ghdl_rtil_signal_096_;
  wire ghdl_rtil_signal_097_;
  wire ghdl_rtil_signal_098_;
  wire ghdl_rtil_signal_099_;
  wire ghdl_rtil_signal_100_;
  wire ghdl_rtil_signal_101_;
  wire ghdl_rtil_signal_102_;
  wire ghdl_rtil_signal_103_;
  wire ghdl_rtil_signal_104_;
  wire ghdl_rtil_signal_105_;
  wire ghdl_rtil_signal_106_;
  wire ghdl_rtil_signal_107_;
  wire ghdl_rtil_signal_108_;
  wire ghdl_rtil_signal_109_;
  wire ghdl_rtil_signal_110_;
  wire ghdl_rtil_signal_111_;
  wire ghdl_rtil_signal_112_;
  wire ghdl_rtil_signal_113_;
  wire ghdl_rtil_signal_114_;
  wire ghdl_rtil_signal_115_;
  wire ghdl_rtil_signal_116_;
  wire ghdl_rtil_signal_117_;
  wire ghdl_rtil_signal_118_;
  wire ghdl_rtil_signal_119_;
  wire ghdl_rtil_signal_120_;
  wire ghdl_rtil_signal_121_;
  wire ghdl_rtil_signal_122_;
  wire ghdl_rtil_signal_123_;
  wire ghdl_rtil_signal_124_;
  wire ghdl_rtil_signal_125_;
  wire ghdl_rtil_signal_126_;
  wire ghdl_rtil_signal_127_;
  wire ghdl_rtil_signal_128_;
  wire ghdl_rtil_signal_129_;
  wire ghdl_rtil_signal_130_;
  wire ghdl_rtil_signal_131_;
  wire ghdl_rtil_signal_132_;
  wire ghdl_rtil_signal_133_;
  wire ghdl_rtil_signal_134_;
  wire ghdl_rtil_signal_135_;
  wire ghdl_rtil_signal_136_;
  wire ghdl_rtil_signal_137_;
  wire [5:0] ghdl_rtil_signal_138_;
  wire ghdl_rtil_signal_139_;
  wire ghdl_rtil_signal_140_;
  wire ghdl_rtil_signal_141_;
  wire ghdl_rtil_signal_142_;
  wire ghdl_rtil_signal_143_;
  wire ghdl_rtil_signal_144_;
  wire ghdl_rtil_signal_145_;
  wire ghdl_rtil_signal_146_;
  wire ghdl_rtil_signal_147_;
  wire ghdl_rtil_signal_148_;
  wire ghdl_rtil_signal_149_;
  wire ghdl_rtil_signal_150_;
  wire ghdl_rtil_signal_151_;
  wire ghdl_rtil_signal_152_;
  wire ghdl_rtil_signal_153_;
  wire ghdl_rtil_signal_154_;
  wire ghdl_rtil_signal_155_;
  wire ghdl_rtil_signal_156_;
  wire ghdl_rtil_signal_157_;
  wire ghdl_rtil_signal_158_;
  wire ghdl_rtil_signal_159_;
  wire ghdl_rtil_signal_160_;
  wire ghdl_rtil_signal_161_;
  wire ghdl_rtil_signal_162_;
  wire ghdl_rtil_signal_163_;
  wire ghdl_rtil_signal_164_;
  wire ghdl_rtil_signal_165_;
  wire ghdl_rtil_signal_166_;
  wire ghdl_rtil_signal_167_;
  wire ghdl_rtil_signal_168_;
  wire ghdl_rtil_signal_169_;
  wire ghdl_rtil_signal_170_;
  wire ghdl_rtil_signal_171_;
  wire ghdl_rtil_signal_172_;
  wire ghdl_rtil_signal_173_;
  wire ghdl_rtil_signal_174_;
  wire ghdl_rtil_signal_175_;
  wire ghdl_rtil_signal_176_;
  wire ghdl_rtil_signal_177_;
  wire ghdl_rtil_signal_178_;
  wire ghdl_rtil_signal_179_;
  wire ghdl_rtil_signal_180_;
  wire ghdl_rtil_signal_181_;
  wire ghdl_rtil_signal_182_;
  wire ghdl_rtil_signal_183_;
  wire ghdl_rtil_signal_184_;
  wire ghdl_rtil_signal_185_;
  wire ghdl_rtil_signal_186_;
  wire ghdl_rtil_signal_187_;
  wire ghdl_rtil_signal_188_;
  wire ghdl_rtil_signal_189_;
  wire ghdl_rtil_signal_190_;
  wire ghdl_rtil_signal_191_;
  wire ghdl_rtil_signal_192_;
  wire ghdl_rtil_signal_193_;
  wire ghdl_rtil_signal_194_;
  wire ghdl_rtil_signal_195_;
  wire ghdl_rtil_signal_196_;
  wire ghdl_rtil_signal_197_;
  wire ghdl_rtil_signal_198_;
  wire ghdl_rtil_signal_199_;
  wire ghdl_rtil_signal_200_;
  wire ghdl_rtil_signal_201_;
  wire ghdl_rtil_signal_202_;
  wire ghdl_rtil_signal_203_;
  wire ghdl_rtil_signal_204_;
  wire ghdl_rtil_signal_205_;
  wire ghdl_rtil_signal_206_;
  wire ghdl_rtil_signal_207_;
  wire ghdl_rtil_signal_208_;
  wire ghdl_rtil_signal_209_;
  wire ghdl_rtil_signal_210_;
  wire ghdl_rtil_signal_211_;
  wire ghdl_rtil_signal_212_;
  wire ghdl_rtil_signal_213_;
  wire ghdl_rtil_signal_214_;
  wire ghdl_rtil_signal_215_;
  wire ghdl_rtil_signal_216_;
  wire ghdl_rtil_signal_217_;
  wire ghdl_rtil_signal_218_;
  wire ghdl_rtil_signal_219_;
  wire ghdl_rtil_signal_220_;
  wire ghdl_rtil_signal_221_;
  wire ghdl_rtil_signal_222_;
  wire ghdl_rtil_signal_223_;
  wire ghdl_rtil_signal_224_;
  wire ghdl_rtil_signal_225_;
  wire ghdl_rtil_signal_226_;
  wire ghdl_rtil_signal_227_;
  wire ghdl_rtil_signal_228_;
  wire ghdl_rtil_signal_229_;
  wire ghdl_rtil_signal_230_;
  input [45:0] i_data;
  wire [45:0] i_data;
  input [5:0] i_shifts;
  wire [5:0] i_shifts;
  output [45:0] o_datashift;
  wire [45:0] o_datashift;
  assign ghdl_rtil_signal_011_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_143_ : 1'h0;
  assign ghdl_rtil_signal_017_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_149_ : ghdl_rtil_signal_141_;
  assign ghdl_rtil_signal_019_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_151_ : ghdl_rtil_signal_143_;
  assign ghdl_rtil_signal_002_ = ghdl_rtil_signal_138_[0] ? i_data[2] : i_data[1];
  assign ghdl_rtil_signal_006_ = ghdl_rtil_signal_138_[0] ? i_data[6] : i_data[5];
  assign ghdl_rtil_signal_014_ = ghdl_rtil_signal_138_[0] ? i_data[10] : i_data[9];
  assign ghdl_rtil_signal_022_ = ghdl_rtil_signal_138_[0] ? i_data[14] : i_data[13];
  assign ghdl_rtil_signal_023_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_155_ : ghdl_rtil_signal_147_;
  assign ghdl_rtil_signal_029_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_161_ : ghdl_rtil_signal_153_;
  assign ghdl_rtil_signal_031_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_163_ : ghdl_rtil_signal_155_;
  assign ghdl_rtil_signal_001_ = ghdl_rtil_signal_138_[0] ? i_data[1] : i_data[0];
  assign ghdl_rtil_signal_005_ = ghdl_rtil_signal_138_[0] ? i_data[5] : i_data[4];
  assign ghdl_rtil_signal_012_ = ghdl_rtil_signal_138_[0] ? i_data[9] : i_data[8];
  assign ghdl_rtil_signal_020_ = ghdl_rtil_signal_138_[0] ? i_data[13] : i_data[12];
  assign ghdl_rtil_signal_028_ = ghdl_rtil_signal_138_[0] ? i_data[17] : i_data[16];
  assign ghdl_rtil_signal_036_ = ghdl_rtil_signal_138_[0] ? i_data[21] : i_data[20];
  assign ghdl_rtil_signal_044_ = ghdl_rtil_signal_138_[0] ? i_data[25] : i_data[24];
  assign ghdl_rtil_signal_052_ = ghdl_rtil_signal_138_[0] ? i_data[29] : i_data[28];
  assign ghdl_rtil_signal_053_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_185_ : ghdl_rtil_signal_177_;
  assign ghdl_rtil_signal_030_ = ghdl_rtil_signal_138_[0] ? i_data[18] : i_data[17];
  assign ghdl_rtil_signal_038_ = ghdl_rtil_signal_138_[0] ? i_data[22] : i_data[21];
  assign ghdl_rtil_signal_046_ = ghdl_rtil_signal_138_[0] ? i_data[26] : i_data[25];
  assign ghdl_rtil_signal_054_ = ghdl_rtil_signal_138_[0] ? i_data[30] : i_data[29];
  assign ghdl_rtil_signal_025_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_157_ : ghdl_rtil_signal_149_;
  assign ghdl_rtil_signal_058_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_189_ : ghdl_rtil_signal_181_;
  assign ghdl_rtil_signal_059_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_142_ : 1'h0;
  assign ghdl_rtil_signal_061_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_191_ : ghdl_rtil_signal_183_;
  assign ghdl_rtil_signal_064_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_193_ : ghdl_rtil_signal_185_;
  assign ghdl_rtil_signal_065_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_146_ : 1'h0;
  assign ghdl_rtil_signal_070_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_197_ : ghdl_rtil_signal_189_;
  assign ghdl_rtil_signal_071_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_150_ : 1'h0;
  assign ghdl_rtil_signal_073_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_199_ : ghdl_rtil_signal_191_;
  assign ghdl_rtil_signal_074_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_152_ : 1'h0;
  assign ghdl_rtil_signal_086_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_160_ : 1'h0;
  assign ghdl_rtil_signal_092_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_164_ : 1'h0;
  assign ghdl_rtil_signal_056_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_140_ : 1'h0;
  assign ghdl_rtil_signal_062_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_144_ : 1'h0;
  assign ghdl_rtil_signal_015_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_147_ : ghdl_rtil_signal_139_;
  assign ghdl_rtil_signal_068_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_148_ : 1'h0;
  assign ghdl_rtil_signal_021_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_153_ : ghdl_rtil_signal_145_;
  assign ghdl_rtil_signal_077_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_154_ : 1'h0;
  assign ghdl_rtil_signal_080_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_156_ : 1'h0;
  assign ghdl_rtil_signal_083_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_158_ : 1'h0;
  assign ghdl_rtil_signal_027_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_159_ : ghdl_rtil_signal_151_;
  assign ghdl_rtil_signal_089_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_162_ : 1'h0;
  assign ghdl_rtil_signal_033_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_165_ : ghdl_rtil_signal_157_;
  assign ghdl_rtil_signal_095_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_166_ : 1'h0;
  assign ghdl_rtil_signal_035_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_167_ : ghdl_rtil_signal_159_;
  assign ghdl_rtil_signal_096_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_168_ : 1'h0;
  assign ghdl_rtil_signal_037_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_169_ : ghdl_rtil_signal_161_;
  assign ghdl_rtil_signal_097_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_170_ : 1'h0;
  assign ghdl_rtil_signal_004_ = ghdl_rtil_signal_138_[0] ? i_data[4] : i_data[3];
  assign ghdl_rtil_signal_010_ = ghdl_rtil_signal_138_[0] ? i_data[8] : i_data[7];
  assign ghdl_rtil_signal_018_ = ghdl_rtil_signal_138_[0] ? i_data[12] : i_data[11];
  assign ghdl_rtil_signal_026_ = ghdl_rtil_signal_138_[0] ? i_data[16] : i_data[15];
  assign ghdl_rtil_signal_007_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_139_ : 1'h0;
  assign ghdl_rtil_signal_039_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_171_ : ghdl_rtil_signal_163_;
  assign ghdl_rtil_signal_098_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_172_ : ghdl_rtil_signal_140_;
  assign ghdl_rtil_signal_099_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_174_ : ghdl_rtil_signal_142_;
  assign ghdl_rtil_signal_100_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_176_ : ghdl_rtil_signal_144_;
  assign ghdl_rtil_signal_013_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_145_ : 1'h0;
  assign ghdl_rtil_signal_045_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_177_ : ghdl_rtil_signal_169_;
  assign ghdl_rtil_signal_101_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_178_ : ghdl_rtil_signal_146_;
  assign ghdl_rtil_signal_047_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_179_ : ghdl_rtil_signal_171_;
  assign ghdl_rtil_signal_102_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_180_ : ghdl_rtil_signal_148_;
  assign ghdl_rtil_signal_103_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_182_ : ghdl_rtil_signal_150_;
  assign ghdl_rtil_signal_051_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_183_ : ghdl_rtil_signal_175_;
  assign ghdl_rtil_signal_104_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_184_ : ghdl_rtil_signal_152_;
  assign ghdl_rtil_signal_105_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_186_ : ghdl_rtil_signal_154_;
  assign ghdl_rtil_signal_055_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_187_ : ghdl_rtil_signal_179_;
  assign ghdl_rtil_signal_106_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_188_ : ghdl_rtil_signal_156_;
  assign ghdl_rtil_signal_107_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_190_ : ghdl_rtil_signal_158_;
  assign ghdl_rtil_signal_108_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_192_ : ghdl_rtil_signal_160_;
  assign ghdl_rtil_signal_109_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_194_ : ghdl_rtil_signal_162_;
  assign ghdl_rtil_signal_067_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_195_ : ghdl_rtil_signal_187_;
  assign ghdl_rtil_signal_110_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_196_ : ghdl_rtil_signal_164_;
  assign ghdl_rtil_signal_111_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_198_ : ghdl_rtil_signal_166_;
  assign ghdl_rtil_signal_112_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_200_ : ghdl_rtil_signal_168_;
  assign ghdl_rtil_signal_003_ = ghdl_rtil_signal_138_[0] ? i_data[3] : i_data[2];
  assign ghdl_rtil_signal_008_ = ghdl_rtil_signal_138_[0] ? i_data[7] : i_data[6];
  assign ghdl_rtil_signal_016_ = ghdl_rtil_signal_138_[0] ? i_data[11] : i_data[10];
  assign ghdl_rtil_signal_024_ = ghdl_rtil_signal_138_[0] ? i_data[15] : i_data[14];
  assign ghdl_rtil_signal_032_ = ghdl_rtil_signal_138_[0] ? i_data[19] : i_data[18];
  assign ghdl_rtil_signal_040_ = ghdl_rtil_signal_138_[0] ? i_data[23] : i_data[22];
  assign ghdl_rtil_signal_048_ = ghdl_rtil_signal_138_[0] ? i_data[27] : i_data[26];
  assign ghdl_rtil_signal_057_ = ghdl_rtil_signal_138_[0] ? i_data[31] : i_data[30];
  assign ghdl_rtil_signal_076_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_201_ : ghdl_rtil_signal_193_;
  assign ghdl_rtil_signal_113_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_202_ : ghdl_rtil_signal_170_;
  assign ghdl_rtil_signal_000_ = ghdl_rtil_signal_138_[0] ? i_data[0] : 1'h0;
  assign ghdl_rtil_signal_034_ = ghdl_rtil_signal_138_[0] ? i_data[20] : i_data[19];
  assign ghdl_rtil_signal_042_ = ghdl_rtil_signal_138_[0] ? i_data[24] : i_data[23];
  assign ghdl_rtil_signal_050_ = ghdl_rtil_signal_138_[0] ? i_data[28] : i_data[27];
  assign ghdl_rtil_signal_060_ = ghdl_rtil_signal_138_[0] ? i_data[32] : i_data[31];
  assign ghdl_rtil_signal_079_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_203_ : ghdl_rtil_signal_195_;
  assign ghdl_rtil_signal_114_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_204_ : ghdl_rtil_signal_172_;
  assign ghdl_rtil_signal_063_ = ghdl_rtil_signal_138_[0] ? i_data[33] : i_data[32];
  assign ghdl_rtil_signal_009_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_141_ : 1'h0;
  assign ghdl_rtil_signal_041_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_173_ : ghdl_rtil_signal_165_;
  assign ghdl_rtil_signal_082_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_205_ : ghdl_rtil_signal_197_;
  assign ghdl_rtil_signal_115_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_206_ : ghdl_rtil_signal_174_;
  assign ghdl_rtil_signal_066_ = ghdl_rtil_signal_138_[0] ? i_data[34] : i_data[33];
  assign ghdl_rtil_signal_043_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_175_ : ghdl_rtil_signal_167_;
  assign ghdl_rtil_signal_085_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_207_ : ghdl_rtil_signal_199_;
  assign ghdl_rtil_signal_116_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_208_ : ghdl_rtil_signal_176_;
  assign ghdl_rtil_signal_069_ = ghdl_rtil_signal_138_[0] ? i_data[35] : i_data[34];
  assign ghdl_rtil_signal_088_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_209_ : ghdl_rtil_signal_201_;
  assign ghdl_rtil_signal_117_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_210_ : ghdl_rtil_signal_178_;
  assign ghdl_rtil_signal_072_ = ghdl_rtil_signal_138_[0] ? i_data[36] : i_data[35];
  assign ghdl_rtil_signal_091_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_211_ : ghdl_rtil_signal_203_;
  assign ghdl_rtil_signal_118_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_212_ : ghdl_rtil_signal_180_;
  assign ghdl_rtil_signal_075_ = ghdl_rtil_signal_138_[0] ? i_data[37] : i_data[36];
  assign ghdl_rtil_signal_049_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_181_ : ghdl_rtil_signal_173_;
  assign ghdl_rtil_signal_094_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_213_ : ghdl_rtil_signal_205_;
  assign ghdl_rtil_signal_119_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_214_ : ghdl_rtil_signal_182_;
  assign ghdl_rtil_signal_078_ = ghdl_rtil_signal_138_[0] ? i_data[38] : i_data[37];
  assign ghdl_rtil_signal_120_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_215_ : ghdl_rtil_signal_207_;
  assign ghdl_rtil_signal_121_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_216_ : ghdl_rtil_signal_184_;
  assign ghdl_rtil_signal_081_ = ghdl_rtil_signal_138_[0] ? i_data[39] : i_data[38];
  assign ghdl_rtil_signal_122_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_217_ : ghdl_rtil_signal_209_;
  assign ghdl_rtil_signal_123_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_218_ : ghdl_rtil_signal_186_;
  assign ghdl_rtil_signal_084_ = ghdl_rtil_signal_138_[0] ? i_data[40] : i_data[39];
  assign ghdl_rtil_signal_124_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_219_ : ghdl_rtil_signal_211_;
  assign ghdl_rtil_signal_125_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_220_ : ghdl_rtil_signal_188_;
  assign ghdl_rtil_signal_087_ = ghdl_rtil_signal_138_[0] ? i_data[41] : i_data[40];
  assign ghdl_rtil_signal_126_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_221_ : ghdl_rtil_signal_213_;
  assign ghdl_rtil_signal_127_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_222_ : ghdl_rtil_signal_190_;
  assign ghdl_rtil_signal_090_ = ghdl_rtil_signal_138_[0] ? i_data[42] : i_data[41];
  assign ghdl_rtil_signal_128_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_223_ : ghdl_rtil_signal_215_;
  assign ghdl_rtil_signal_129_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_224_ : ghdl_rtil_signal_192_;
  assign ghdl_rtil_signal_093_ = ghdl_rtil_signal_138_[0] ? i_data[43] : i_data[42];
  assign ghdl_rtil_signal_130_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_225_ : ghdl_rtil_signal_217_;
  assign ghdl_rtil_signal_131_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_226_ : ghdl_rtil_signal_194_;
  assign ghdl_rtil_signal_132_ = ghdl_rtil_signal_138_[0] ? i_data[44] : i_data[43];
  assign ghdl_rtil_signal_133_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_227_ : ghdl_rtil_signal_219_;
  assign ghdl_rtil_signal_134_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_228_ : ghdl_rtil_signal_196_;
  assign ghdl_rtil_signal_135_ = ghdl_rtil_signal_138_[0] ? i_data[45] : i_data[44];
  assign ghdl_rtil_signal_136_ = ghdl_rtil_signal_138_[2] ? ghdl_rtil_signal_229_ : ghdl_rtil_signal_221_;
  assign ghdl_rtil_signal_137_ = ghdl_rtil_signal_138_[4] ? ghdl_rtil_signal_230_ : ghdl_rtil_signal_198_;
  assign ghdl_rtil_signal_140_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_007_ : 1'h0;
  assign o_datashift[0] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_056_ : 1'h0;
  assign o_datashift[1] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_059_ : 1'h0;
  assign ghdl_rtil_signal_144_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_011_ : 1'h0;
  assign o_datashift[2] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_062_ : 1'h0;
  assign ghdl_rtil_signal_146_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_013_ : 1'h0;
  assign o_datashift[3] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_065_ : 1'h0;
  assign o_datashift[4] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_068_ : 1'h0;
  assign o_datashift[5] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_071_ : 1'h0;
  assign ghdl_rtil_signal_143_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_002_ : ghdl_rtil_signal_000_;
  assign ghdl_rtil_signal_151_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_006_ : ghdl_rtil_signal_004_;
  assign o_datashift[6] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_074_ : 1'h0;
  assign ghdl_rtil_signal_154_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_021_ : 1'h0;
  assign o_datashift[7] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_077_ : 1'h0;
  assign o_datashift[8] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_080_ : 1'h0;
  assign o_datashift[9] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_083_ : 1'h0;
  assign o_datashift[10] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_086_ : 1'h0;
  assign ghdl_rtil_signal_145_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_003_ : ghdl_rtil_signal_001_;
  assign ghdl_rtil_signal_153_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_008_ : ghdl_rtil_signal_005_;
  assign ghdl_rtil_signal_161_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_016_ : ghdl_rtil_signal_012_;
  assign ghdl_rtil_signal_162_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_029_ : ghdl_rtil_signal_013_;
  assign o_datashift[11] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_089_ : 1'h0;
  assign ghdl_rtil_signal_164_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_031_ : ghdl_rtil_signal_015_;
  assign o_datashift[12] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_092_ : 1'h0;
  assign o_datashift[13] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_095_ : 1'h0;
  assign ghdl_rtil_signal_167_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_022_ : ghdl_rtil_signal_018_;
  assign ghdl_rtil_signal_168_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_035_ : ghdl_rtil_signal_019_;
  assign o_datashift[14] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_096_ : 1'h0;
  assign ghdl_rtil_signal_170_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_037_ : ghdl_rtil_signal_021_;
  assign o_datashift[15] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_097_ : 1'h0;
  assign ghdl_rtil_signal_172_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_039_ : ghdl_rtil_signal_023_;
  assign o_datashift[16] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_098_ : 1'h0;
  assign o_datashift[17] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_099_ : 1'h0;
  assign o_datashift[18] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_100_ : 1'h0;
  assign ghdl_rtil_signal_178_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_045_ : ghdl_rtil_signal_029_;
  assign o_datashift[19] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_101_ : 1'h0;
  assign ghdl_rtil_signal_139_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_000_ : 1'h0;
  assign ghdl_rtil_signal_147_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_004_ : ghdl_rtil_signal_002_;
  assign o_datashift[20] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_102_ : 1'h0;
  assign ghdl_rtil_signal_181_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_036_ : ghdl_rtil_signal_032_;
  assign o_datashift[21] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_103_ : 1'h0;
  assign ghdl_rtil_signal_175_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_030_ : ghdl_rtil_signal_026_;
  assign ghdl_rtil_signal_183_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_038_ : ghdl_rtil_signal_034_;
  assign ghdl_rtil_signal_152_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_019_ : 1'h0;
  assign ghdl_rtil_signal_184_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_051_ : ghdl_rtil_signal_035_;
  assign o_datashift[22] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_104_ : 1'h0;
  assign ghdl_rtil_signal_169_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_024_ : ghdl_rtil_signal_020_;
  assign ghdl_rtil_signal_186_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_053_ : ghdl_rtil_signal_037_;
  assign o_datashift[23] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_105_ : 1'h0;
  assign ghdl_rtil_signal_155_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_010_ : ghdl_rtil_signal_006_;
  assign ghdl_rtil_signal_163_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_018_ : ghdl_rtil_signal_014_;
  assign ghdl_rtil_signal_171_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_026_ : ghdl_rtil_signal_022_;
  assign ghdl_rtil_signal_179_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_034_ : ghdl_rtil_signal_030_;
  assign ghdl_rtil_signal_187_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_042_ : ghdl_rtil_signal_038_;
  assign ghdl_rtil_signal_156_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_023_ : ghdl_rtil_signal_007_;
  assign ghdl_rtil_signal_188_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_055_ : ghdl_rtil_signal_039_;
  assign o_datashift[24] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_106_ : 1'h0;
  assign ghdl_rtil_signal_158_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_025_ : ghdl_rtil_signal_009_;
  assign ghdl_rtil_signal_190_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_058_ : ghdl_rtil_signal_041_;
  assign o_datashift[25] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_107_ : 1'h0;
  assign ghdl_rtil_signal_159_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_014_ : ghdl_rtil_signal_010_;
  assign o_datashift[26] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_108_ : 1'h0;
  assign o_datashift[27] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_109_ : 1'h0;
  assign ghdl_rtil_signal_196_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_067_ : ghdl_rtil_signal_047_;
  assign o_datashift[28] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_110_ : 1'h0;
  assign ghdl_rtil_signal_166_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_033_ : ghdl_rtil_signal_017_;
  assign ghdl_rtil_signal_198_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_070_ : ghdl_rtil_signal_049_;
  assign o_datashift[29] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_111_ : 1'h0;
  assign ghdl_rtil_signal_200_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_073_ : ghdl_rtil_signal_051_;
  assign o_datashift[30] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_112_ : 1'h0;
  assign ghdl_rtil_signal_177_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_032_ : ghdl_rtil_signal_028_;
  assign ghdl_rtil_signal_185_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_040_ : ghdl_rtil_signal_036_;
  assign ghdl_rtil_signal_193_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_048_ : ghdl_rtil_signal_044_;
  assign ghdl_rtil_signal_201_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_057_ : ghdl_rtil_signal_052_;
  assign ghdl_rtil_signal_202_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_076_ : ghdl_rtil_signal_053_;
  assign o_datashift[31] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_113_ : 1'h0;
  assign ghdl_rtil_signal_195_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_050_ : ghdl_rtil_signal_046_;
  assign ghdl_rtil_signal_203_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_060_ : ghdl_rtil_signal_054_;
  assign ghdl_rtil_signal_204_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_079_ : ghdl_rtil_signal_055_;
  assign o_datashift[32] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_114_ : ghdl_rtil_signal_056_;
  assign ghdl_rtil_signal_141_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_001_ : 1'h0;
  assign ghdl_rtil_signal_149_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_005_ : ghdl_rtil_signal_003_;
  assign ghdl_rtil_signal_157_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_012_ : ghdl_rtil_signal_008_;
  assign ghdl_rtil_signal_165_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_020_ : ghdl_rtil_signal_016_;
  assign ghdl_rtil_signal_173_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_028_ : ghdl_rtil_signal_024_;
  assign ghdl_rtil_signal_189_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_044_ : ghdl_rtil_signal_040_;
  assign ghdl_rtil_signal_197_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_052_ : ghdl_rtil_signal_048_;
  assign ghdl_rtil_signal_205_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_063_ : ghdl_rtil_signal_057_;
  assign ghdl_rtil_signal_142_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_009_ : 1'h0;
  assign ghdl_rtil_signal_174_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_041_ : ghdl_rtil_signal_025_;
  assign ghdl_rtil_signal_206_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_082_ : ghdl_rtil_signal_058_;
  assign o_datashift[33] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_115_ : ghdl_rtil_signal_059_;
  assign ghdl_rtil_signal_191_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_046_ : ghdl_rtil_signal_042_;
  assign ghdl_rtil_signal_199_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_054_ : ghdl_rtil_signal_050_;
  assign ghdl_rtil_signal_207_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_066_ : ghdl_rtil_signal_060_;
  assign ghdl_rtil_signal_176_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_043_ : ghdl_rtil_signal_027_;
  assign ghdl_rtil_signal_208_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_085_ : ghdl_rtil_signal_061_;
  assign o_datashift[34] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_116_ : ghdl_rtil_signal_062_;
  assign ghdl_rtil_signal_209_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_069_ : ghdl_rtil_signal_063_;
  assign ghdl_rtil_signal_210_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_088_ : ghdl_rtil_signal_064_;
  assign o_datashift[35] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_117_ : ghdl_rtil_signal_065_;
  assign ghdl_rtil_signal_211_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_072_ : ghdl_rtil_signal_066_;
  assign ghdl_rtil_signal_148_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_015_ : 1'h0;
  assign ghdl_rtil_signal_180_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_047_ : ghdl_rtil_signal_031_;
  assign ghdl_rtil_signal_212_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_091_ : ghdl_rtil_signal_067_;
  assign o_datashift[36] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_118_ : ghdl_rtil_signal_068_;
  assign ghdl_rtil_signal_213_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_075_ : ghdl_rtil_signal_069_;
  assign ghdl_rtil_signal_150_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_017_ : 1'h0;
  assign ghdl_rtil_signal_182_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_049_ : ghdl_rtil_signal_033_;
  assign ghdl_rtil_signal_214_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_094_ : ghdl_rtil_signal_070_;
  assign o_datashift[37] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_119_ : ghdl_rtil_signal_071_;
  assign ghdl_rtil_signal_215_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_078_ : ghdl_rtil_signal_072_;
  assign ghdl_rtil_signal_216_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_120_ : ghdl_rtil_signal_073_;
  assign o_datashift[38] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_121_ : ghdl_rtil_signal_074_;
  assign ghdl_rtil_signal_217_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_081_ : ghdl_rtil_signal_075_;
  assign ghdl_rtil_signal_218_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_122_ : ghdl_rtil_signal_076_;
  assign o_datashift[39] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_123_ : ghdl_rtil_signal_077_;
  assign ghdl_rtil_signal_219_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_084_ : ghdl_rtil_signal_078_;
  assign ghdl_rtil_signal_220_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_124_ : ghdl_rtil_signal_079_;
  assign o_datashift[40] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_125_ : ghdl_rtil_signal_080_;
  assign ghdl_rtil_signal_221_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_087_ : ghdl_rtil_signal_081_;
  assign ghdl_rtil_signal_222_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_126_ : ghdl_rtil_signal_082_;
  assign o_datashift[41] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_127_ : ghdl_rtil_signal_083_;
  assign ghdl_rtil_signal_223_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_090_ : ghdl_rtil_signal_084_;
  assign ghdl_rtil_signal_160_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_027_ : ghdl_rtil_signal_011_;
  assign ghdl_rtil_signal_192_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_061_ : ghdl_rtil_signal_043_;
  assign ghdl_rtil_signal_224_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_128_ : ghdl_rtil_signal_085_;
  assign o_datashift[42] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_129_ : ghdl_rtil_signal_086_;
  assign ghdl_rtil_signal_225_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_093_ : ghdl_rtil_signal_087_;
  assign ghdl_rtil_signal_194_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_064_ : ghdl_rtil_signal_045_;
  assign ghdl_rtil_signal_226_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_130_ : ghdl_rtil_signal_088_;
  assign o_datashift[43] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_131_ : ghdl_rtil_signal_089_;
  assign ghdl_rtil_signal_227_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_132_ : ghdl_rtil_signal_090_;
  assign ghdl_rtil_signal_228_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_133_ : ghdl_rtil_signal_091_;
  assign o_datashift[44] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_134_ : ghdl_rtil_signal_092_;
  assign ghdl_rtil_signal_229_ = ghdl_rtil_signal_138_[1] ? ghdl_rtil_signal_135_ : ghdl_rtil_signal_093_;
  assign ghdl_rtil_signal_230_ = ghdl_rtil_signal_138_[3] ? ghdl_rtil_signal_136_ : ghdl_rtil_signal_094_;
  assign o_datashift[45] = ghdl_rtil_signal_138_[5] ? ghdl_rtil_signal_137_ : ghdl_rtil_signal_095_;
  assign ghdl_rtil_signal_138_ = 6'h3f - i_shifts;
endmodule

module log2_fp_23_8_64_23(i_x, o_log2);
  wire ghdl_rtil_signal_0_;
  wire ghdl_rtil_signal_1_;
  wire ghdl_rtil_signal_2_;
  wire ghdl_rtil_signal_3_;
  wire ghdl_rtil_signal_4_;
  wire ghdl_rtil_signal_5_;
  input [31:0] i_x;
  wire [31:0] i_x;
  output [31:0] o_log2;
  wire [31:0] o_log2;
  wire [22:0] w_adderb;
  wire w_adderb_cout;
  wire [25:0] w_adderc;
  wire [31:0] w_adderc_c1;
  wire [6:0] w_adderd;
  wire [6:0] w_adderd_c1;
  wire [31:0] w_addere;
  wire [31:0] w_addere_shift;
  wire [6:0] w_adderf;
  wire [4:0] w_clz;
  wire w_comp_c1_ctrl;
  wire w_comp_c1_ctrl_n;
  wire w_comp_c1_ctrl_xnor;
  wire w_comp_c1_ctrl_xor;
  wire w_comp_eqseg;
  wire [22:0] w_constants_sub;
  wire w_coutf;
  wire w_exp_comp;
  wire w_exp_ncomp;
  wire [31:0] w_ieeecase;
  wire w_ieeecase_en;
  wire [22:0] w_luta;
  wire [4:0] w_luta_adder;
  wire [22:0] w_lutb;
  wire [22:0] w_lutb_c1;
  wire [45:0] w_mult;
  wire [25:0] w_mult_c1;
  wire [22:0] w_mux_luta;
  wire [22:0] w_mux_luta_c1;
  wire [22:0] w_muxa;
  assign w_mux_luta = w_comp_eqseg ? 23'h00003d : w_luta;
  assign w_comp_c1_ctrl_n = ~ w_comp_c1_ctrl;
  assign w_comp_c1_ctrl_xor = w_comp_c1_ctrl_n ^ i_x[17];
  assign w_comp_c1_ctrl_xnor = ~ w_comp_c1_ctrl_xor;
  assign w_muxa = i_x[17] ? w_lutb : w_mux_luta;
  assign w_exp_ncomp = ~ w_exp_comp;
  assign o_log2 = w_ieeecase_en ? w_ieeecase : { w_exp_comp, w_coutf, w_adderf, w_addere_shift[30:8] };
  sum_ripple_carry_adder_5_0 adder_luta (
    .i_cin(i_x[17]),
    .i_term1(i_x[22:18]),
    .i_term2(5'h00),
    .o_cout(ghdl_rtil_signal_0_),
    .o_sum(w_luta_adder)
  );
  sum_ripple_carry_adder_23_0 adderb (
    .i_cin(1'h0),
    .i_term1(w_muxa),
    .i_term2(i_x[22:0]),
    .o_cout(w_adderb_cout),
    .o_sum(w_adderb)
  );
  sum_ripple_carry_adder_26_0 adderc (
    .i_cin(w_comp_c1_ctrl_n),
    .i_term1({ w_adderb_cout, w_adderb, 2'h0 }),
    .i_term2(w_mult_c1),
    .o_cout(ghdl_rtil_signal_2_),
    .o_sum(w_adderc)
  );
  sum_ripple_carry_adder_7_0 adderd (
    .i_cin(w_exp_ncomp),
    .i_term1(i_x[29:23]),
    .i_term2(7'h00),
    .o_cout(ghdl_rtil_signal_3_),
    .o_sum(w_adderd)
  );
  sum_ripple_carry_adder_32_0 addere (
    .i_cin(w_exp_comp),
    .i_term1(w_adderc_c1),
    .i_term2({ w_adderd_c1, 25'h0000000 }),
    .o_cout(ghdl_rtil_signal_4_),
    .o_sum(w_addere)
  );
  sum_ripple_carry_adder_7_1 adderf (
    .i_cin(1'h0),
    .i_term1({ 2'h0, w_clz }),
    .i_term2(7'h06),
    .o_cout(w_coutf),
    .o_sum(w_adderf)
  );
  log2_ieee case_ieee32 (
    .i_data(i_x),
    .o_case(w_ieeecase),
    .o_case_en(w_ieeecase_en)
  );
  comparator_6_2 comparator_control_lut (
    .i_data1(i_x[22:17]),
    .i_data2(6'h1c),
    .o_result(w_comp_c1_ctrl)
  );
  comparator_6_0 comparator_eqsegments (
    .i_data1(i_x[22:17]),
    .i_data2(6'h3f),
    .o_result(w_comp_eqseg)
  );
  sum_ripple_carry_adder_23_0 constants_sub (
    .i_cin(1'h1),
    .i_term1(w_mux_luta_c1),
    .i_term2(w_lutb_c1),
    .o_cout(ghdl_rtil_signal_1_),
    .o_sum(w_constants_sub)
  );
  comparator_8_1 exp_comparator (
    .i_data1(8'h7f),
    .i_data2(i_x[30:23]),
    .o_result(w_exp_comp)
  );
  clz_32_c4ea21bb365bbeeaf5f2c654883e56d11e43c44e leading_zeros (
    .i_data(w_addere),
    .o_msb_zeros(ghdl_rtil_signal_5_),
    .o_zeros(w_clz)
  );
  log2_luts_64x23b_64 \lut64c.lut64_23b  (
    .i_luta_addr(w_luta_adder),
    .i_lutb_addr(i_x[22:18]),
    .o_luta(w_luta),
    .o_lutb(w_lutb)
  );
  mult_23 multiplier (
    .i_term1(w_constants_sub),
    .i_term2({ i_x[16:0], 6'h00 }),
    .o_product(w_mult)
  );
  ones_complement_32 ones_complement_adderc (
    .i_data({ 6'h00, w_adderc }),
    .i_en(w_exp_comp),
    .o_data(w_adderc_c1)
  );
  ones_complement_7 ones_complement_adderd (
    .i_data(w_adderd),
    .i_en(w_exp_comp),
    .o_data(w_adderd_c1)
  );
  ones_complement_23 ones_complement_luta (
    .i_data(w_mux_luta),
    .i_en(w_comp_c1_ctrl_xnor),
    .o_data(w_mux_luta_c1)
  );
  ones_complement_23 ones_complement_lutb (
    .i_data(w_lutb),
    .i_en(w_comp_c1_ctrl_xor),
    .o_data(w_lutb_c1)
  );
  ones_complement_26 ones_complement_mult (
    .i_data({ 1'h0, w_mult[45:21] }),
    .i_en(w_comp_c1_ctrl_n),
    .o_data(w_mult_c1)
  );
  left_shifter_32 shifter (
    .i_data(w_addere),
    .i_shifts(w_clz),
    .o_datashift(w_addere_shift)
  );
endmodule

module log2_ieee(i_data, o_case, o_case_en);
  wire ghdl_rtil_signal_00_;
  wire ghdl_rtil_signal_01_;
  wire ghdl_rtil_signal_02_;
  wire ghdl_rtil_signal_03_;
  wire ghdl_rtil_signal_04_;
  wire [31:0] ghdl_rtil_signal_05_;
  wire ghdl_rtil_signal_06_;
  wire ghdl_rtil_signal_07_;
  wire ghdl_rtil_signal_08_;
  wire [31:0] ghdl_rtil_signal_09_;
  wire ghdl_rtil_signal_10_;
  wire [31:0] ghdl_rtil_signal_11_;
  wire ghdl_rtil_signal_12_;
  wire [31:0] ghdl_rtil_signal_13_;
  wire ghdl_rtil_signal_14_;
  input [31:0] i_data;
  wire [31:0] i_data;
  output [31:0] o_case;
  wire [31:0] o_case;
  output o_case_en;
  wire o_case_en;
  assign ghdl_rtil_signal_00_ = ! i_data[30:23];
  assign ghdl_rtil_signal_01_ = i_data[30:23] == 8'hff;
  assign ghdl_rtil_signal_04_ = ghdl_rtil_signal_03_ & ghdl_rtil_signal_02_;
  assign ghdl_rtil_signal_05_ = ghdl_rtil_signal_04_ ? 32'd2139095040 : 32'd4294967295;
  assign ghdl_rtil_signal_06_ = i_data[30:23] == 8'h7f;
  assign ghdl_rtil_signal_03_ = ! i_data[22:0];
  assign ghdl_rtil_signal_07_ = ghdl_rtil_signal_03_ & ghdl_rtil_signal_06_;
  assign ghdl_rtil_signal_02_ = ~ i_data[31];
  assign ghdl_rtil_signal_08_ = ghdl_rtil_signal_02_ & ghdl_rtil_signal_07_;
  assign ghdl_rtil_signal_09_ = i_data[31] ? 32'd4294967295 : 32'd0;
  assign ghdl_rtil_signal_10_ = i_data[31] ? 1'h1 : 1'h0;
  assign ghdl_rtil_signal_11_ = ghdl_rtil_signal_08_ ? 32'd0 : ghdl_rtil_signal_09_;
  assign ghdl_rtil_signal_12_ = ghdl_rtil_signal_08_ ? 1'h1 : ghdl_rtil_signal_10_;
  assign ghdl_rtil_signal_13_ = ghdl_rtil_signal_01_ ? ghdl_rtil_signal_05_ : ghdl_rtil_signal_11_;
  assign ghdl_rtil_signal_14_ = ghdl_rtil_signal_01_ ? 1'h1 : ghdl_rtil_signal_12_;
  assign o_case = ghdl_rtil_signal_00_ ? 32'd4286578688 : ghdl_rtil_signal_13_;
  assign o_case_en = ghdl_rtil_signal_00_ ? 1'h1 : ghdl_rtil_signal_14_;
endmodule

module log2_luts_64x23b_64(i_luta_addr, i_lutb_addr, o_luta, o_lutb);
  wire ghdl_rtil_signal_00_;
  wire ghdl_rtil_signal_01_;
  wire ghdl_rtil_signal_02_;
  wire ghdl_rtil_signal_03_;
  wire ghdl_rtil_signal_04_;
  wire ghdl_rtil_signal_05_;
  wire ghdl_rtil_signal_06_;
  wire ghdl_rtil_signal_07_;
  wire ghdl_rtil_signal_08_;
  wire ghdl_rtil_signal_09_;
  wire ghdl_rtil_signal_10_;
  wire ghdl_rtil_signal_11_;
  wire ghdl_rtil_signal_12_;
  wire ghdl_rtil_signal_13_;
  wire ghdl_rtil_signal_14_;
  wire ghdl_rtil_signal_15_;
  wire ghdl_rtil_signal_16_;
  wire ghdl_rtil_signal_17_;
  wire ghdl_rtil_signal_18_;
  wire ghdl_rtil_signal_19_;
  wire ghdl_rtil_signal_20_;
  wire ghdl_rtil_signal_21_;
  wire ghdl_rtil_signal_22_;
  wire ghdl_rtil_signal_23_;
  wire ghdl_rtil_signal_24_;
  wire ghdl_rtil_signal_25_;
  wire ghdl_rtil_signal_26_;
  wire ghdl_rtil_signal_27_;
  wire ghdl_rtil_signal_28_;
  wire ghdl_rtil_signal_29_;
  wire ghdl_rtil_signal_30_;
  wire ghdl_rtil_signal_31_;
  wire ghdl_rtil_signal_32_;
  wire ghdl_rtil_signal_33_;
  wire ghdl_rtil_signal_34_;
  wire ghdl_rtil_signal_35_;
  wire ghdl_rtil_signal_36_;
  wire ghdl_rtil_signal_37_;
  wire ghdl_rtil_signal_38_;
  wire ghdl_rtil_signal_39_;
  wire ghdl_rtil_signal_40_;
  wire ghdl_rtil_signal_41_;
  wire ghdl_rtil_signal_42_;
  wire ghdl_rtil_signal_43_;
  wire ghdl_rtil_signal_44_;
  wire ghdl_rtil_signal_45_;
  wire ghdl_rtil_signal_46_;
  wire ghdl_rtil_signal_47_;
  wire ghdl_rtil_signal_48_;
  wire ghdl_rtil_signal_49_;
  wire ghdl_rtil_signal_50_;
  wire ghdl_rtil_signal_51_;
  wire ghdl_rtil_signal_52_;
  wire ghdl_rtil_signal_53_;
  wire ghdl_rtil_signal_54_;
  wire ghdl_rtil_signal_55_;
  wire ghdl_rtil_signal_56_;
  wire ghdl_rtil_signal_57_;
  wire ghdl_rtil_signal_58_;
  wire ghdl_rtil_signal_59_;
  wire ghdl_rtil_signal_60_;
  wire ghdl_rtil_signal_61_;
  wire ghdl_rtil_signal_62_;
  input [4:0] i_luta_addr;
  wire [4:0] i_luta_addr;
  input [4:0] i_lutb_addr;
  wire [4:0] i_lutb_addr;
  output [22:0] o_luta;
  wire [22:0] o_luta;
  output [22:0] o_lutb;
  wire [22:0] o_lutb;
  assign ghdl_rtil_signal_00_ = i_luta_addr == 5'h01;
  assign ghdl_rtil_signal_01_ = i_luta_addr == 5'h02;
  assign ghdl_rtil_signal_02_ = i_luta_addr == 5'h03;
  assign ghdl_rtil_signal_03_ = i_luta_addr == 5'h04;
  assign ghdl_rtil_signal_04_ = i_luta_addr == 5'h05;
  assign ghdl_rtil_signal_05_ = i_luta_addr == 5'h06;
  assign ghdl_rtil_signal_06_ = i_luta_addr == 5'h07;
  assign ghdl_rtil_signal_07_ = i_luta_addr == 5'h08;
  assign ghdl_rtil_signal_08_ = i_luta_addr == 5'h09;
  assign ghdl_rtil_signal_09_ = i_luta_addr == 5'h0a;
  assign ghdl_rtil_signal_10_ = i_luta_addr == 5'h0b;
  assign ghdl_rtil_signal_11_ = i_luta_addr == 5'h0c;
  assign ghdl_rtil_signal_12_ = i_luta_addr == 5'h0d;
  assign ghdl_rtil_signal_13_ = i_luta_addr == 5'h0e;
  assign ghdl_rtil_signal_14_ = i_luta_addr == 5'h0f;
  assign ghdl_rtil_signal_15_ = i_luta_addr == 5'h10;
  assign ghdl_rtil_signal_16_ = i_luta_addr == 5'h11;
  assign ghdl_rtil_signal_17_ = i_luta_addr == 5'h12;
  assign ghdl_rtil_signal_18_ = i_luta_addr == 5'h13;
  assign ghdl_rtil_signal_19_ = i_luta_addr == 5'h14;
  assign ghdl_rtil_signal_20_ = i_luta_addr == 5'h15;
  assign ghdl_rtil_signal_21_ = i_luta_addr == 5'h16;
  assign ghdl_rtil_signal_22_ = i_luta_addr == 5'h17;
  assign ghdl_rtil_signal_23_ = i_luta_addr == 5'h18;
  assign ghdl_rtil_signal_24_ = i_luta_addr == 5'h19;
  assign ghdl_rtil_signal_25_ = i_luta_addr == 5'h1a;
  assign ghdl_rtil_signal_26_ = i_luta_addr == 5'h1b;
  assign ghdl_rtil_signal_27_ = i_luta_addr == 5'h1c;
  assign ghdl_rtil_signal_28_ = i_luta_addr == 5'h1d;
  assign ghdl_rtil_signal_29_ = i_luta_addr == 5'h1e;
  assign ghdl_rtil_signal_30_ = i_luta_addr == 5'h1f;
  function [22:0] \1190 ;
    input [22:0] a;
    input [712:0] b;
    input [30:0] s;
    casez (s) // synopsys parallel_case
      31'b??????????????????????????????1:
        \1190  = b[22:0];
      31'b?????????????????????????????1?:
        \1190  = b[45:23];
      31'b????????????????????????????1??:
        \1190  = b[68:46];
      31'b???????????????????????????1???:
        \1190  = b[91:69];
      31'b??????????????????????????1????:
        \1190  = b[114:92];
      31'b?????????????????????????1?????:
        \1190  = b[137:115];
      31'b????????????????????????1??????:
        \1190  = b[160:138];
      31'b???????????????????????1???????:
        \1190  = b[183:161];
      31'b??????????????????????1????????:
        \1190  = b[206:184];
      31'b?????????????????????1?????????:
        \1190  = b[229:207];
      31'b????????????????????1??????????:
        \1190  = b[252:230];
      31'b???????????????????1???????????:
        \1190  = b[275:253];
      31'b??????????????????1????????????:
        \1190  = b[298:276];
      31'b?????????????????1?????????????:
        \1190  = b[321:299];
      31'b????????????????1??????????????:
        \1190  = b[344:322];
      31'b???????????????1???????????????:
        \1190  = b[367:345];
      31'b??????????????1????????????????:
        \1190  = b[390:368];
      31'b?????????????1?????????????????:
        \1190  = b[413:391];
      31'b????????????1??????????????????:
        \1190  = b[436:414];
      31'b???????????1???????????????????:
        \1190  = b[459:437];
      31'b??????????1????????????????????:
        \1190  = b[482:460];
      31'b?????????1?????????????????????:
        \1190  = b[505:483];
      31'b????????1??????????????????????:
        \1190  = b[528:506];
      31'b???????1???????????????????????:
        \1190  = b[551:529];
      31'b??????1????????????????????????:
        \1190  = b[574:552];
      31'b?????1?????????????????????????:
        \1190  = b[597:575];
      31'b????1??????????????????????????:
        \1190  = b[620:598];
      31'b???1???????????????????????????:
        \1190  = b[643:621];
      31'b??1????????????????????????????:
        \1190  = b[666:644];
      31'b?1?????????????????????????????:
        \1190  = b[689:667];
      31'b1??????????????????????????????:
        \1190  = b[712:690];
      default:
        \1190  = a;
    endcase
  endfunction
  assign o_luta = \1190 (23'h000000, 713'h0045f00111ad8322a9082a8413eae42e94d869c700eaf6c200fa84503e092cd71350ba28499c535220aaf3715c0f02bf4d0582440af584159e4e2a417451c0089c4d6126b162222c43de6086d0120b81b01234841996801af97, { ghdl_rtil_signal_30_, ghdl_rtil_signal_29_, ghdl_rtil_signal_28_, ghdl_rtil_signal_27_, ghdl_rtil_signal_26_, ghdl_rtil_signal_25_, ghdl_rtil_signal_24_, ghdl_rtil_signal_23_, ghdl_rtil_signal_22_, ghdl_rtil_signal_21_, ghdl_rtil_signal_20_, ghdl_rtil_signal_19_, ghdl_rtil_signal_18_, ghdl_rtil_signal_17_, ghdl_rtil_signal_16_, ghdl_rtil_signal_15_, ghdl_rtil_signal_14_, ghdl_rtil_signal_13_, ghdl_rtil_signal_12_, ghdl_rtil_signal_11_, ghdl_rtil_signal_10_, ghdl_rtil_signal_09_, ghdl_rtil_signal_08_, ghdl_rtil_signal_07_, ghdl_rtil_signal_06_, ghdl_rtil_signal_05_, ghdl_rtil_signal_04_, ghdl_rtil_signal_03_, ghdl_rtil_signal_02_, ghdl_rtil_signal_01_, ghdl_rtil_signal_00_ });
  assign ghdl_rtil_signal_31_ = ! { 27'h0000000, i_lutb_addr };
  assign ghdl_rtil_signal_32_ = i_lutb_addr == 5'h01;
  assign ghdl_rtil_signal_33_ = i_lutb_addr == 5'h02;
  assign ghdl_rtil_signal_34_ = i_lutb_addr == 5'h03;
  assign ghdl_rtil_signal_35_ = i_lutb_addr == 5'h04;
  assign ghdl_rtil_signal_36_ = i_lutb_addr == 5'h05;
  assign ghdl_rtil_signal_37_ = i_lutb_addr == 5'h06;
  assign ghdl_rtil_signal_38_ = i_lutb_addr == 5'h07;
  assign ghdl_rtil_signal_39_ = i_lutb_addr == 5'h08;
  assign ghdl_rtil_signal_40_ = i_lutb_addr == 5'h09;
  assign ghdl_rtil_signal_41_ = i_lutb_addr == 5'h0a;
  assign ghdl_rtil_signal_42_ = i_lutb_addr == 5'h0b;
  assign ghdl_rtil_signal_43_ = i_lutb_addr == 5'h0c;
  assign ghdl_rtil_signal_44_ = i_lutb_addr == 5'h0d;
  assign ghdl_rtil_signal_45_ = i_lutb_addr == 5'h0e;
  assign ghdl_rtil_signal_46_ = i_lutb_addr == 5'h0f;
  assign ghdl_rtil_signal_47_ = i_lutb_addr == 5'h10;
  assign ghdl_rtil_signal_48_ = i_lutb_addr == 5'h11;
  assign ghdl_rtil_signal_49_ = i_lutb_addr == 5'h12;
  assign ghdl_rtil_signal_50_ = i_lutb_addr == 5'h13;
  assign ghdl_rtil_signal_51_ = i_lutb_addr == 5'h14;
  assign ghdl_rtil_signal_52_ = i_lutb_addr == 5'h15;
  assign ghdl_rtil_signal_53_ = i_lutb_addr == 5'h16;
  assign ghdl_rtil_signal_54_ = i_lutb_addr == 5'h17;
  assign ghdl_rtil_signal_55_ = i_lutb_addr == 5'h18;
  assign ghdl_rtil_signal_56_ = i_lutb_addr == 5'h19;
  assign ghdl_rtil_signal_57_ = i_lutb_addr == 5'h1a;
  assign ghdl_rtil_signal_58_ = i_lutb_addr == 5'h1b;
  assign ghdl_rtil_signal_59_ = i_lutb_addr == 5'h1c;
  assign ghdl_rtil_signal_60_ = i_lutb_addr == 5'h1d;
  assign ghdl_rtil_signal_61_ = i_lutb_addr == 5'h1e;
  assign ghdl_rtil_signal_62_ = i_lutb_addr == 5'h1f;
  function [22:0] \1289 ;
    input [22:0] a;
    input [735:0] b;
    input [31:0] s;
    casez (s) // synopsys parallel_case
      32'b???????????????????????????????1:
        \1289  = b[22:0];
      32'b??????????????????????????????1?:
        \1289  = b[45:23];
      32'b?????????????????????????????1??:
        \1289  = b[68:46];
      32'b????????????????????????????1???:
        \1289  = b[91:69];
      32'b???????????????????????????1????:
        \1289  = b[114:92];
      32'b??????????????????????????1?????:
        \1289  = b[137:115];
      32'b?????????????????????????1??????:
        \1289  = b[160:138];
      32'b????????????????????????1???????:
        \1289  = b[183:161];
      32'b???????????????????????1????????:
        \1289  = b[206:184];
      32'b??????????????????????1?????????:
        \1289  = b[229:207];
      32'b?????????????????????1??????????:
        \1289  = b[252:230];
      32'b????????????????????1???????????:
        \1289  = b[275:253];
      32'b???????????????????1????????????:
        \1289  = b[298:276];
      32'b??????????????????1?????????????:
        \1289  = b[321:299];
      32'b?????????????????1??????????????:
        \1289  = b[344:322];
      32'b????????????????1???????????????:
        \1289  = b[367:345];
      32'b???????????????1????????????????:
        \1289  = b[390:368];
      32'b??????????????1?????????????????:
        \1289  = b[413:391];
      32'b?????????????1??????????????????:
        \1289  = b[436:414];
      32'b????????????1???????????????????:
        \1289  = b[459:437];
      32'b???????????1????????????????????:
        \1289  = b[482:460];
      32'b??????????1?????????????????????:
        \1289  = b[505:483];
      32'b?????????1??????????????????????:
        \1289  = b[528:506];
      32'b????????1???????????????????????:
        \1289  = b[551:529];
      32'b???????1????????????????????????:
        \1289  = b[574:552];
      32'b??????1?????????????????????????:
        \1289  = b[597:575];
      32'b?????1??????????????????????????:
        \1289  = b[620:598];
      32'b????1???????????????????????????:
        \1289  = b[643:621];
      32'b???1????????????????????????????:
        \1289  = b[666:644];
      32'b??1?????????????????????????????:
        \1289  = b[689:667];
      32'b?1??????????????????????????????:
        \1289  = b[712:690];
      32'b1???????????????????????????????:
        \1289  = b[735:713];
      default:
        \1289  = a;
    endcase
  endfunction
  assign o_lutb = \1289 (23'h000000, 736'h011aea067c4415249039d9309135215a19031ca786fbed0f5f762150c04745d096cbf13bf3a29029c547938aca5a15e2ea2c0e6857ff08ae5521565c4299dd0500ed0980cb11c5ce209ad83a54e864ce50a575a0f93c013b3c00dddc, { ghdl_rtil_signal_62_, ghdl_rtil_signal_61_, ghdl_rtil_signal_60_, ghdl_rtil_signal_59_, ghdl_rtil_signal_58_, ghdl_rtil_signal_57_, ghdl_rtil_signal_56_, ghdl_rtil_signal_55_, ghdl_rtil_signal_54_, ghdl_rtil_signal_53_, ghdl_rtil_signal_52_, ghdl_rtil_signal_51_, ghdl_rtil_signal_50_, ghdl_rtil_signal_49_, ghdl_rtil_signal_48_, ghdl_rtil_signal_47_, ghdl_rtil_signal_46_, ghdl_rtil_signal_45_, ghdl_rtil_signal_44_, ghdl_rtil_signal_43_, ghdl_rtil_signal_42_, ghdl_rtil_signal_41_, ghdl_rtil_signal_40_, ghdl_rtil_signal_39_, ghdl_rtil_signal_38_, ghdl_rtil_signal_37_, ghdl_rtil_signal_36_, ghdl_rtil_signal_35_, ghdl_rtil_signal_34_, ghdl_rtil_signal_33_, ghdl_rtil_signal_32_, ghdl_rtil_signal_31_ });
endmodule

module mult_23(i_term1, i_term2, o_product);
  input [22:0] i_term1;
  wire [22:0] i_term1;
  input [22:0] i_term2;
  wire [22:0] i_term2;
  output [45:0] o_product;
  wire [45:0] o_product;
  assign o_product = { 23'h000000, i_term1 } * { 23'h000000, i_term2 };
endmodule

module multfp(entrada_x, entrada_y, salida, underflow, overflow);
  wire [22:0] ghdl_rtil_signal_000_;
  wire [22:0] ghdl_rtil_signal_001_;
  wire [22:0] ghdl_rtil_signal_002_;
  wire [22:0] ghdl_rtil_signal_003_;
  wire [22:0] ghdl_rtil_signal_004_;
  wire [22:0] ghdl_rtil_signal_005_;
  wire [22:0] ghdl_rtil_signal_006_;
  wire [22:0] ghdl_rtil_signal_007_;
  wire [22:0] ghdl_rtil_signal_008_;
  wire [22:0] ghdl_rtil_signal_009_;
  wire [22:0] ghdl_rtil_signal_010_;
  wire [22:0] ghdl_rtil_signal_011_;
  wire [22:0] ghdl_rtil_signal_012_;
  wire [22:0] ghdl_rtil_signal_013_;
  wire [22:0] ghdl_rtil_signal_014_;
  wire [22:0] ghdl_rtil_signal_015_;
  wire [22:0] ghdl_rtil_signal_016_;
  wire [22:0] ghdl_rtil_signal_017_;
  wire [22:0] ghdl_rtil_signal_018_;
  wire [22:0] ghdl_rtil_signal_019_;
  wire [22:0] ghdl_rtil_signal_020_;
  wire [22:0] ghdl_rtil_signal_021_;
  wire [22:0] ghdl_rtil_signal_022_;
  wire [22:0] ghdl_rtil_signal_023_;
  wire [22:0] ghdl_rtil_signal_024_;
  wire [22:0] ghdl_rtil_signal_025_;
  wire [22:0] ghdl_rtil_signal_026_;
  wire [22:0] ghdl_rtil_signal_027_;
  wire [22:0] ghdl_rtil_signal_028_;
  wire [22:0] ghdl_rtil_signal_029_;
  wire ghdl_rtil_signal_030_;
  wire ghdl_rtil_signal_031_;
  wire ghdl_rtil_signal_032_;
  wire ghdl_rtil_signal_033_;
  wire ghdl_rtil_signal_034_;
  wire ghdl_rtil_signal_035_;
  wire ghdl_rtil_signal_036_;
  wire ghdl_rtil_signal_037_;
  wire [9:0] ghdl_rtil_signal_038_;
  wire [9:0] ghdl_rtil_signal_039_;
  wire [9:0] ghdl_rtil_signal_040_;
  wire ghdl_rtil_signal_041_;
  wire ghdl_rtil_signal_042_;
  wire [30:0] ghdl_rtil_signal_043_;
  wire ghdl_rtil_signal_044_;
  wire ghdl_rtil_signal_045_;
  wire [31:0] ghdl_rtil_signal_046_;
  wire [31:0] ghdl_rtil_signal_047_;
  wire [31:0] ghdl_rtil_signal_048_;
  wire [31:0] ghdl_rtil_signal_049_;
  wire [31:0] ghdl_rtil_signal_050_;
  wire [31:0] ghdl_rtil_signal_051_;
  wire [31:0] ghdl_rtil_signal_052_;
  wire [31:0] ghdl_rtil_signal_053_;
  wire [31:0] ghdl_rtil_signal_054_;
  wire [31:0] ghdl_rtil_signal_055_;
  wire [31:0] ghdl_rtil_signal_056_;
  wire [31:0] ghdl_rtil_signal_057_;
  wire [31:0] ghdl_rtil_signal_058_;
  wire [31:0] ghdl_rtil_signal_059_;
  wire [31:0] ghdl_rtil_signal_060_;
  wire [31:0] ghdl_rtil_signal_061_;
  wire [31:0] ghdl_rtil_signal_062_;
  wire [31:0] ghdl_rtil_signal_063_;
  wire [31:0] ghdl_rtil_signal_064_;
  wire [31:0] ghdl_rtil_signal_065_;
  wire [31:0] ghdl_rtil_signal_066_;
  wire [31:0] ghdl_rtil_signal_067_;
  wire [31:0] ghdl_rtil_signal_068_;
  wire [31:0] ghdl_rtil_signal_069_;
  wire [31:0] ghdl_rtil_signal_070_;
  wire [31:0] ghdl_rtil_signal_071_;
  wire [31:0] ghdl_rtil_signal_072_;
  wire [31:0] ghdl_rtil_signal_073_;
  wire [31:0] ghdl_rtil_signal_074_;
  wire [31:0] ghdl_rtil_signal_075_;
  wire [31:0] ghdl_rtil_signal_076_;
  wire [31:0] ghdl_rtil_signal_077_;
  wire [31:0] ghdl_rtil_signal_078_;
  wire [31:0] ghdl_rtil_signal_079_;
  wire [31:0] ghdl_rtil_signal_080_;
  wire [31:0] ghdl_rtil_signal_081_;
  wire [31:0] ghdl_rtil_signal_082_;
  wire [31:0] ghdl_rtil_signal_083_;
  wire [31:0] ghdl_rtil_signal_084_;
  wire [31:0] ghdl_rtil_signal_085_;
  wire [31:0] ghdl_rtil_signal_086_;
  wire [31:0] ghdl_rtil_signal_087_;
  wire [31:0] ghdl_rtil_signal_088_;
  wire [31:0] ghdl_rtil_signal_089_;
  wire [31:0] ghdl_rtil_signal_090_;
  wire [31:0] ghdl_rtil_signal_091_;
  wire [31:0] ghdl_rtil_signal_092_;
  wire [5:0] ghdl_rtil_signal_093_;
  wire [22:0] ghdl_rtil_signal_094_;
  wire [22:0] ghdl_rtil_signal_095_;
  wire [22:0] ghdl_rtil_signal_096_;
  wire [22:0] ghdl_rtil_signal_097_;
  wire [22:0] ghdl_rtil_signal_098_;
  wire [22:0] ghdl_rtil_signal_099_;
  wire [22:0] ghdl_rtil_signal_100_;
  wire [22:0] ghdl_rtil_signal_101_;
  wire [22:0] ghdl_rtil_signal_102_;
  wire [22:0] ghdl_rtil_signal_103_;
  wire [22:0] ghdl_rtil_signal_104_;
  wire [22:0] ghdl_rtil_signal_105_;
  wire [22:0] ghdl_rtil_signal_106_;
  wire [22:0] ghdl_rtil_signal_107_;
  wire [22:0] ghdl_rtil_signal_108_;
  wire [22:0] ghdl_rtil_signal_109_;
  input [31:0] entrada_x;
  wire [31:0] entrada_x;
  input [31:0] entrada_y;
  wire [31:0] entrada_y;
  wire [9:0] exponente_final;
  wire [47:0] mantisa_final;
  wire [22:0] mantisa_real;
  output overflow;
  wire overflow;
  wire [31:0] resultado;
  output [31:0] salida;
  wire [31:0] salida;
  wire soverflow;
  wire sunderflow;
  output underflow;
  wire underflow;
  assign ghdl_rtil_signal_000_ = ghdl_rtil_signal_093_[0] ? mantisa_final[45:23] : mantisa_final[46:24];
  assign ghdl_rtil_signal_001_ = ghdl_rtil_signal_093_[0] ? mantisa_final[41:19] : mantisa_final[42:20];
  assign ghdl_rtil_signal_002_ = ghdl_rtil_signal_093_[0] ? mantisa_final[37:15] : mantisa_final[38:16];
  assign ghdl_rtil_signal_003_ = ghdl_rtil_signal_093_[0] ? mantisa_final[33:11] : mantisa_final[34:12];
  assign ghdl_rtil_signal_004_ = ghdl_rtil_signal_093_[0] ? mantisa_final[29:7] : mantisa_final[30:8];
  assign ghdl_rtil_signal_005_ = ghdl_rtil_signal_093_[0] ? mantisa_final[25:3] : mantisa_final[26:4];
  assign ghdl_rtil_signal_006_ = ghdl_rtil_signal_093_[0] ? { mantisa_final[21:0], 1'h0 } : mantisa_final[22:0];
  assign ghdl_rtil_signal_007_ = ghdl_rtil_signal_093_[0] ? { mantisa_final[17:0], 5'h00 } : { mantisa_final[18:0], 4'h0 };
  assign ghdl_rtil_signal_008_ = ghdl_rtil_signal_093_[0] ? { mantisa_final[13:0], 9'h000 } : { mantisa_final[14:0], 8'h00 };
  assign ghdl_rtil_signal_009_ = ghdl_rtil_signal_093_[0] ? { mantisa_final[9:0], 13'h0000 } : { mantisa_final[10:0], 12'h000 };
  assign ghdl_rtil_signal_010_ = ghdl_rtil_signal_093_[0] ? { mantisa_final[5:0], 17'h00000 } : { mantisa_final[6:0], 16'h0000 };
  assign ghdl_rtil_signal_011_ = ghdl_rtil_signal_093_[0] ? { mantisa_final[1:0], 21'h000000 } : { mantisa_final[2:0], 20'h00000 };
  assign ghdl_rtil_signal_012_ = ghdl_rtil_signal_093_[2] ? ghdl_rtil_signal_095_ : ghdl_rtil_signal_094_;
  assign ghdl_rtil_signal_013_ = ghdl_rtil_signal_093_[2] ? ghdl_rtil_signal_099_ : ghdl_rtil_signal_098_;
  assign ghdl_rtil_signal_014_ = ghdl_rtil_signal_093_[2] ? ghdl_rtil_signal_103_ : ghdl_rtil_signal_102_;
  assign ghdl_rtil_signal_015_ = ghdl_rtil_signal_093_[0] ? mantisa_final[43:21] : mantisa_final[44:22];
  assign ghdl_rtil_signal_016_ = ghdl_rtil_signal_093_[0] ? mantisa_final[39:17] : mantisa_final[40:18];
  assign ghdl_rtil_signal_017_ = ghdl_rtil_signal_093_[0] ? mantisa_final[35:13] : mantisa_final[36:14];
  assign ghdl_rtil_signal_018_ = ghdl_rtil_signal_093_[0] ? mantisa_final[31:9] : mantisa_final[32:10];
  assign ghdl_rtil_signal_019_ = ghdl_rtil_signal_093_[0] ? mantisa_final[27:5] : mantisa_final[28:6];
  assign ghdl_rtil_signal_020_ = ghdl_rtil_signal_093_[0] ? mantisa_final[23:1] : mantisa_final[24:2];
  assign ghdl_rtil_signal_021_ = ghdl_rtil_signal_093_[0] ? { mantisa_final[19:0], 3'h0 } : { mantisa_final[20:0], 2'h0 };
  assign ghdl_rtil_signal_022_ = ghdl_rtil_signal_093_[0] ? { mantisa_final[15:0], 7'h00 } : { mantisa_final[16:0], 6'h00 };
  assign ghdl_rtil_signal_023_ = ghdl_rtil_signal_093_[0] ? { mantisa_final[11:0], 11'h000 } : { mantisa_final[12:0], 10'h000 };
  assign ghdl_rtil_signal_024_ = ghdl_rtil_signal_093_[0] ? { mantisa_final[7:0], 15'h0000 } : { mantisa_final[8:0], 14'h0000 };
  assign ghdl_rtil_signal_025_ = ghdl_rtil_signal_093_[0] ? { mantisa_final[3:0], 19'h00000 } : { mantisa_final[4:0], 18'h00000 };
  assign ghdl_rtil_signal_026_ = ghdl_rtil_signal_093_[0] ? 23'h000000 : { mantisa_final[0], 22'h000000 };
  assign ghdl_rtil_signal_027_ = ghdl_rtil_signal_093_[2] ? ghdl_rtil_signal_097_ : ghdl_rtil_signal_096_;
  assign ghdl_rtil_signal_028_ = ghdl_rtil_signal_093_[2] ? ghdl_rtil_signal_101_ : ghdl_rtil_signal_100_;
  assign ghdl_rtil_signal_029_ = ghdl_rtil_signal_093_[2] ? ghdl_rtil_signal_105_ : ghdl_rtil_signal_104_;
  assign ghdl_rtil_signal_094_ = ghdl_rtil_signal_093_[1] ? ghdl_rtil_signal_015_ : ghdl_rtil_signal_000_;
  assign ghdl_rtil_signal_095_ = ghdl_rtil_signal_093_[1] ? ghdl_rtil_signal_016_ : ghdl_rtil_signal_001_;
  assign ghdl_rtil_signal_096_ = ghdl_rtil_signal_093_[1] ? ghdl_rtil_signal_017_ : ghdl_rtil_signal_002_;
  assign ghdl_rtil_signal_097_ = ghdl_rtil_signal_093_[1] ? ghdl_rtil_signal_018_ : ghdl_rtil_signal_003_;
  assign ghdl_rtil_signal_098_ = ghdl_rtil_signal_093_[1] ? ghdl_rtil_signal_019_ : ghdl_rtil_signal_004_;
  assign ghdl_rtil_signal_099_ = ghdl_rtil_signal_093_[1] ? ghdl_rtil_signal_020_ : ghdl_rtil_signal_005_;
  assign ghdl_rtil_signal_100_ = ghdl_rtil_signal_093_[1] ? ghdl_rtil_signal_021_ : ghdl_rtil_signal_006_;
  assign ghdl_rtil_signal_101_ = ghdl_rtil_signal_093_[1] ? ghdl_rtil_signal_022_ : ghdl_rtil_signal_007_;
  assign ghdl_rtil_signal_102_ = ghdl_rtil_signal_093_[1] ? ghdl_rtil_signal_023_ : ghdl_rtil_signal_008_;
  assign ghdl_rtil_signal_103_ = ghdl_rtil_signal_093_[1] ? ghdl_rtil_signal_024_ : ghdl_rtil_signal_009_;
  assign ghdl_rtil_signal_104_ = ghdl_rtil_signal_093_[1] ? ghdl_rtil_signal_025_ : ghdl_rtil_signal_010_;
  assign ghdl_rtil_signal_105_ = ghdl_rtil_signal_093_[1] ? ghdl_rtil_signal_026_ : ghdl_rtil_signal_011_;
  assign ghdl_rtil_signal_106_ = ghdl_rtil_signal_093_[3] ? ghdl_rtil_signal_027_ : ghdl_rtil_signal_012_;
  assign ghdl_rtil_signal_107_ = ghdl_rtil_signal_093_[3] ? ghdl_rtil_signal_028_ : ghdl_rtil_signal_013_;
  assign ghdl_rtil_signal_108_ = ghdl_rtil_signal_093_[3] ? ghdl_rtil_signal_029_ : ghdl_rtil_signal_014_;
  assign mantisa_final = { 25'h0000001, entrada_x[22:0] } * { 25'h0000001, entrada_y[22:0] };
  assign ghdl_rtil_signal_030_ = ! entrada_x;
  assign ghdl_rtil_signal_031_ = ! entrada_y;
  assign ghdl_rtil_signal_032_ = ghdl_rtil_signal_030_ | ghdl_rtil_signal_031_;
  assign ghdl_rtil_signal_033_ = entrada_x == 32'd2147483648;
  assign ghdl_rtil_signal_034_ = ghdl_rtil_signal_032_ | ghdl_rtil_signal_033_;
  assign ghdl_rtil_signal_035_ = entrada_y == 32'd2147483648;
  assign ghdl_rtil_signal_036_ = ghdl_rtil_signal_034_ | ghdl_rtil_signal_035_;
  assign ghdl_rtil_signal_037_ = entrada_x[31] ^ entrada_y[31];
  assign salida = ghdl_rtil_signal_036_ ? 32'd0 : { ghdl_rtil_signal_037_, resultado[30:0] };
  assign underflow = ghdl_rtil_signal_036_ ? 1'h0 : sunderflow;
  assign overflow = ghdl_rtil_signal_036_ ? 1'h0 : soverflow;
  assign ghdl_rtil_signal_039_ = ghdl_rtil_signal_038_ - 10'h07e;
  assign ghdl_rtil_signal_038_ = { 2'h0, entrada_x[30:23] } + { 2'h0, entrada_y[30:23] };
  assign ghdl_rtil_signal_040_ = ghdl_rtil_signal_038_ - 10'h07f;
  assign exponente_final = mantisa_final[47] ? ghdl_rtil_signal_039_ : ghdl_rtil_signal_040_;
  assign ghdl_rtil_signal_041_ = $signed(exponente_final) > $signed(10'h0ff);
  assign ghdl_rtil_signal_042_ = $signed(exponente_final) < $signed(10'h000);
  assign ghdl_rtil_signal_043_ = ghdl_rtil_signal_042_ ? 31'h00000000 : { exponente_final[7:0], mantisa_real };
  assign ghdl_rtil_signal_044_ = ghdl_rtil_signal_042_ ? 1'h0 : resultado[31];
  assign ghdl_rtil_signal_045_ = ghdl_rtil_signal_042_ ? 1'h1 : 1'h0;
  assign resultado = ghdl_rtil_signal_041_ ? 32'd0 : { ghdl_rtil_signal_044_, ghdl_rtil_signal_043_ };
  assign sunderflow = ghdl_rtil_signal_041_ ? 1'h0 : ghdl_rtil_signal_045_;
  assign soverflow = ghdl_rtil_signal_041_ ? 1'h1 : 1'h0;
  assign ghdl_rtil_signal_046_ = mantisa_final[1] ? 32'd1 : 32'd0;
  assign ghdl_rtil_signal_047_ = mantisa_final[2] ? 32'd2 : ghdl_rtil_signal_046_;
  assign ghdl_rtil_signal_048_ = mantisa_final[3] ? 32'd3 : ghdl_rtil_signal_047_;
  assign ghdl_rtil_signal_049_ = mantisa_final[4] ? 32'd4 : ghdl_rtil_signal_048_;
  assign ghdl_rtil_signal_050_ = mantisa_final[5] ? 32'd5 : ghdl_rtil_signal_049_;
  assign ghdl_rtil_signal_051_ = mantisa_final[6] ? 32'd6 : ghdl_rtil_signal_050_;
  assign ghdl_rtil_signal_052_ = mantisa_final[7] ? 32'd7 : ghdl_rtil_signal_051_;
  assign ghdl_rtil_signal_053_ = mantisa_final[8] ? 32'd8 : ghdl_rtil_signal_052_;
  assign ghdl_rtil_signal_054_ = mantisa_final[9] ? 32'd9 : ghdl_rtil_signal_053_;
  assign ghdl_rtil_signal_055_ = mantisa_final[10] ? 32'd10 : ghdl_rtil_signal_054_;
  assign ghdl_rtil_signal_056_ = mantisa_final[11] ? 32'd11 : ghdl_rtil_signal_055_;
  assign ghdl_rtil_signal_057_ = mantisa_final[12] ? 32'd12 : ghdl_rtil_signal_056_;
  assign ghdl_rtil_signal_058_ = mantisa_final[13] ? 32'd13 : ghdl_rtil_signal_057_;
  assign ghdl_rtil_signal_059_ = mantisa_final[14] ? 32'd14 : ghdl_rtil_signal_058_;
  assign ghdl_rtil_signal_060_ = mantisa_final[15] ? 32'd15 : ghdl_rtil_signal_059_;
  assign ghdl_rtil_signal_061_ = mantisa_final[16] ? 32'd16 : ghdl_rtil_signal_060_;
  assign ghdl_rtil_signal_062_ = mantisa_final[17] ? 32'd17 : ghdl_rtil_signal_061_;
  assign ghdl_rtil_signal_063_ = mantisa_final[18] ? 32'd18 : ghdl_rtil_signal_062_;
  assign ghdl_rtil_signal_064_ = mantisa_final[19] ? 32'd19 : ghdl_rtil_signal_063_;
  assign ghdl_rtil_signal_065_ = mantisa_final[20] ? 32'd20 : ghdl_rtil_signal_064_;
  assign ghdl_rtil_signal_066_ = mantisa_final[21] ? 32'd21 : ghdl_rtil_signal_065_;
  assign ghdl_rtil_signal_067_ = mantisa_final[22] ? 32'd22 : ghdl_rtil_signal_066_;
  assign ghdl_rtil_signal_068_ = mantisa_final[23] ? 32'd23 : ghdl_rtil_signal_067_;
  assign ghdl_rtil_signal_069_ = mantisa_final[24] ? 32'd24 : ghdl_rtil_signal_068_;
  assign ghdl_rtil_signal_070_ = mantisa_final[25] ? 32'd25 : ghdl_rtil_signal_069_;
  assign ghdl_rtil_signal_071_ = mantisa_final[26] ? 32'd26 : ghdl_rtil_signal_070_;
  assign ghdl_rtil_signal_072_ = mantisa_final[27] ? 32'd27 : ghdl_rtil_signal_071_;
  assign ghdl_rtil_signal_073_ = mantisa_final[28] ? 32'd28 : ghdl_rtil_signal_072_;
  assign ghdl_rtil_signal_074_ = mantisa_final[29] ? 32'd29 : ghdl_rtil_signal_073_;
  assign ghdl_rtil_signal_075_ = mantisa_final[30] ? 32'd30 : ghdl_rtil_signal_074_;
  assign ghdl_rtil_signal_076_ = mantisa_final[31] ? 32'd31 : ghdl_rtil_signal_075_;
  assign ghdl_rtil_signal_077_ = mantisa_final[32] ? 32'd32 : ghdl_rtil_signal_076_;
  assign ghdl_rtil_signal_078_ = mantisa_final[33] ? 32'd33 : ghdl_rtil_signal_077_;
  assign ghdl_rtil_signal_079_ = mantisa_final[34] ? 32'd34 : ghdl_rtil_signal_078_;
  assign ghdl_rtil_signal_080_ = mantisa_final[35] ? 32'd35 : ghdl_rtil_signal_079_;
  assign ghdl_rtil_signal_081_ = mantisa_final[36] ? 32'd36 : ghdl_rtil_signal_080_;
  assign ghdl_rtil_signal_082_ = mantisa_final[37] ? 32'd37 : ghdl_rtil_signal_081_;
  assign ghdl_rtil_signal_083_ = mantisa_final[38] ? 32'd38 : ghdl_rtil_signal_082_;
  assign ghdl_rtil_signal_084_ = mantisa_final[39] ? 32'd39 : ghdl_rtil_signal_083_;
  assign ghdl_rtil_signal_085_ = mantisa_final[40] ? 32'd40 : ghdl_rtil_signal_084_;
  assign ghdl_rtil_signal_086_ = mantisa_final[41] ? 32'd41 : ghdl_rtil_signal_085_;
  assign ghdl_rtil_signal_087_ = mantisa_final[42] ? 32'd42 : ghdl_rtil_signal_086_;
  assign ghdl_rtil_signal_088_ = mantisa_final[43] ? 32'd43 : ghdl_rtil_signal_087_;
  assign ghdl_rtil_signal_089_ = mantisa_final[44] ? 32'd44 : ghdl_rtil_signal_088_;
  assign ghdl_rtil_signal_090_ = mantisa_final[45] ? 32'd45 : ghdl_rtil_signal_089_;
  assign ghdl_rtil_signal_091_ = mantisa_final[46] ? 32'd46 : ghdl_rtil_signal_090_;
  assign ghdl_rtil_signal_092_ = mantisa_final[47] ? 32'd47 : ghdl_rtil_signal_091_;
  assign ghdl_rtil_signal_093_ = 6'h2f - ghdl_rtil_signal_092_[5:0];
  assign ghdl_rtil_signal_109_ = ghdl_rtil_signal_093_[4] ? ghdl_rtil_signal_107_ : ghdl_rtil_signal_106_;
  assign mantisa_real = ghdl_rtil_signal_093_[5] ? ghdl_rtil_signal_108_ : ghdl_rtil_signal_109_;
endmodule

module ones_complement_23(i_data, i_en, o_data);
  input [22:0] i_data;
  wire [22:0] i_data;
  input i_en;
  wire i_en;
  output [22:0] o_data;
  wire [22:0] o_data;
  assign o_data[0] = i_data[0] ^ i_en;
  assign o_data[1] = i_data[1] ^ i_en;
  assign o_data[2] = i_data[2] ^ i_en;
  assign o_data[3] = i_data[3] ^ i_en;
  assign o_data[4] = i_data[4] ^ i_en;
  assign o_data[5] = i_data[5] ^ i_en;
  assign o_data[6] = i_data[6] ^ i_en;
  assign o_data[7] = i_data[7] ^ i_en;
  assign o_data[8] = i_data[8] ^ i_en;
  assign o_data[9] = i_data[9] ^ i_en;
  assign o_data[10] = i_data[10] ^ i_en;
  assign o_data[11] = i_data[11] ^ i_en;
  assign o_data[12] = i_data[12] ^ i_en;
  assign o_data[13] = i_data[13] ^ i_en;
  assign o_data[14] = i_data[14] ^ i_en;
  assign o_data[15] = i_data[15] ^ i_en;
  assign o_data[16] = i_data[16] ^ i_en;
  assign o_data[17] = i_data[17] ^ i_en;
  assign o_data[18] = i_data[18] ^ i_en;
  assign o_data[19] = i_data[19] ^ i_en;
  assign o_data[20] = i_data[20] ^ i_en;
  assign o_data[21] = i_data[21] ^ i_en;
  assign o_data[22] = i_data[22] ^ i_en;
endmodule

module ones_complement_25(i_data, i_en, o_data);
  input [24:0] i_data;
  wire [24:0] i_data;
  input i_en;
  wire i_en;
  output [24:0] o_data;
  wire [24:0] o_data;
  assign o_data[0] = i_data[0] ^ i_en;
  assign o_data[1] = i_data[1] ^ i_en;
  assign o_data[2] = i_data[2] ^ i_en;
  assign o_data[3] = i_data[3] ^ i_en;
  assign o_data[4] = i_data[4] ^ i_en;
  assign o_data[5] = i_data[5] ^ i_en;
  assign o_data[6] = i_data[6] ^ i_en;
  assign o_data[7] = i_data[7] ^ i_en;
  assign o_data[8] = i_data[8] ^ i_en;
  assign o_data[9] = i_data[9] ^ i_en;
  assign o_data[10] = i_data[10] ^ i_en;
  assign o_data[11] = i_data[11] ^ i_en;
  assign o_data[12] = i_data[12] ^ i_en;
  assign o_data[13] = i_data[13] ^ i_en;
  assign o_data[14] = i_data[14] ^ i_en;
  assign o_data[15] = i_data[15] ^ i_en;
  assign o_data[16] = i_data[16] ^ i_en;
  assign o_data[17] = i_data[17] ^ i_en;
  assign o_data[18] = i_data[18] ^ i_en;
  assign o_data[19] = i_data[19] ^ i_en;
  assign o_data[20] = i_data[20] ^ i_en;
  assign o_data[21] = i_data[21] ^ i_en;
  assign o_data[22] = i_data[22] ^ i_en;
  assign o_data[23] = i_data[23] ^ i_en;
  assign o_data[24] = i_data[24] ^ i_en;
endmodule

module ones_complement_26(i_data, i_en, o_data);
  input [25:0] i_data;
  wire [25:0] i_data;
  input i_en;
  wire i_en;
  output [25:0] o_data;
  wire [25:0] o_data;
  assign o_data[0] = i_data[0] ^ i_en;
  assign o_data[1] = i_data[1] ^ i_en;
  assign o_data[2] = i_data[2] ^ i_en;
  assign o_data[3] = i_data[3] ^ i_en;
  assign o_data[4] = i_data[4] ^ i_en;
  assign o_data[5] = i_data[5] ^ i_en;
  assign o_data[6] = i_data[6] ^ i_en;
  assign o_data[7] = i_data[7] ^ i_en;
  assign o_data[8] = i_data[8] ^ i_en;
  assign o_data[9] = i_data[9] ^ i_en;
  assign o_data[10] = i_data[10] ^ i_en;
  assign o_data[11] = i_data[11] ^ i_en;
  assign o_data[12] = i_data[12] ^ i_en;
  assign o_data[13] = i_data[13] ^ i_en;
  assign o_data[14] = i_data[14] ^ i_en;
  assign o_data[15] = i_data[15] ^ i_en;
  assign o_data[16] = i_data[16] ^ i_en;
  assign o_data[17] = i_data[17] ^ i_en;
  assign o_data[18] = i_data[18] ^ i_en;
  assign o_data[19] = i_data[19] ^ i_en;
  assign o_data[20] = i_data[20] ^ i_en;
  assign o_data[21] = i_data[21] ^ i_en;
  assign o_data[22] = i_data[22] ^ i_en;
  assign o_data[23] = i_data[23] ^ i_en;
  assign o_data[24] = i_data[24] ^ i_en;
  assign o_data[25] = i_data[25] ^ i_en;
endmodule

module ones_complement_30(i_data, i_en, o_data);
  input [29:0] i_data;
  wire [29:0] i_data;
  input i_en;
  wire i_en;
  output [29:0] o_data;
  wire [29:0] o_data;
  assign o_data[0] = i_data[0] ^ i_en;
  assign o_data[1] = i_data[1] ^ i_en;
  assign o_data[2] = i_data[2] ^ i_en;
  assign o_data[3] = i_data[3] ^ i_en;
  assign o_data[4] = i_data[4] ^ i_en;
  assign o_data[5] = i_data[5] ^ i_en;
  assign o_data[6] = i_data[6] ^ i_en;
  assign o_data[7] = i_data[7] ^ i_en;
  assign o_data[8] = i_data[8] ^ i_en;
  assign o_data[9] = i_data[9] ^ i_en;
  assign o_data[10] = i_data[10] ^ i_en;
  assign o_data[11] = i_data[11] ^ i_en;
  assign o_data[12] = i_data[12] ^ i_en;
  assign o_data[13] = i_data[13] ^ i_en;
  assign o_data[14] = i_data[14] ^ i_en;
  assign o_data[15] = i_data[15] ^ i_en;
  assign o_data[16] = i_data[16] ^ i_en;
  assign o_data[17] = i_data[17] ^ i_en;
  assign o_data[18] = i_data[18] ^ i_en;
  assign o_data[19] = i_data[19] ^ i_en;
  assign o_data[20] = i_data[20] ^ i_en;
  assign o_data[21] = i_data[21] ^ i_en;
  assign o_data[22] = i_data[22] ^ i_en;
  assign o_data[23] = i_data[23] ^ i_en;
  assign o_data[24] = i_data[24] ^ i_en;
  assign o_data[25] = i_data[25] ^ i_en;
  assign o_data[26] = i_data[26] ^ i_en;
  assign o_data[27] = i_data[27] ^ i_en;
  assign o_data[28] = i_data[28] ^ i_en;
  assign o_data[29] = i_data[29] ^ i_en;
endmodule

module ones_complement_32(i_data, i_en, o_data);
  input [31:0] i_data;
  wire [31:0] i_data;
  input i_en;
  wire i_en;
  output [31:0] o_data;
  wire [31:0] o_data;
  assign o_data[0] = i_data[0] ^ i_en;
  assign o_data[1] = i_data[1] ^ i_en;
  assign o_data[2] = i_data[2] ^ i_en;
  assign o_data[3] = i_data[3] ^ i_en;
  assign o_data[4] = i_data[4] ^ i_en;
  assign o_data[5] = i_data[5] ^ i_en;
  assign o_data[6] = i_data[6] ^ i_en;
  assign o_data[7] = i_data[7] ^ i_en;
  assign o_data[8] = i_data[8] ^ i_en;
  assign o_data[9] = i_data[9] ^ i_en;
  assign o_data[10] = i_data[10] ^ i_en;
  assign o_data[11] = i_data[11] ^ i_en;
  assign o_data[12] = i_data[12] ^ i_en;
  assign o_data[13] = i_data[13] ^ i_en;
  assign o_data[14] = i_data[14] ^ i_en;
  assign o_data[15] = i_data[15] ^ i_en;
  assign o_data[16] = i_data[16] ^ i_en;
  assign o_data[17] = i_data[17] ^ i_en;
  assign o_data[18] = i_data[18] ^ i_en;
  assign o_data[19] = i_data[19] ^ i_en;
  assign o_data[20] = i_data[20] ^ i_en;
  assign o_data[21] = i_data[21] ^ i_en;
  assign o_data[22] = i_data[22] ^ i_en;
  assign o_data[23] = i_data[23] ^ i_en;
  assign o_data[24] = i_data[24] ^ i_en;
  assign o_data[25] = i_data[25] ^ i_en;
  assign o_data[26] = i_data[26] ^ i_en;
  assign o_data[27] = i_data[27] ^ i_en;
  assign o_data[28] = i_data[28] ^ i_en;
  assign o_data[29] = i_data[29] ^ i_en;
  assign o_data[30] = i_data[30] ^ i_en;
  assign o_data[31] = i_data[31] ^ i_en;
endmodule

module ones_complement_7(i_data, i_en, o_data);
  input [6:0] i_data;
  wire [6:0] i_data;
  input i_en;
  wire i_en;
  output [6:0] o_data;
  wire [6:0] o_data;
  assign o_data[0] = i_data[0] ^ i_en;
  assign o_data[1] = i_data[1] ^ i_en;
  assign o_data[2] = i_data[2] ^ i_en;
  assign o_data[3] = i_data[3] ^ i_en;
  assign o_data[4] = i_data[4] ^ i_en;
  assign o_data[5] = i_data[5] ^ i_en;
  assign o_data[6] = i_data[6] ^ i_en;
endmodule

module prueba_32_24_8(fp_a, fp_b, add_sub, fp_z);
  wire ghdl_rtil_signal_00_;
  wire ghdl_rtil_signal_01_;
  wire ghdl_rtil_signal_02_;
  wire ghdl_rtil_signal_03_;
  wire ghdl_rtil_signal_04_;
  wire ghdl_rtil_signal_05_;
  wire ghdl_rtil_signal_06_;
  wire ghdl_rtil_signal_07_;
  wire ghdl_rtil_signal_08_;
  wire ghdl_rtil_signal_09_;
  wire ghdl_rtil_signal_10_;
  wire ghdl_rtil_signal_11_;
  wire ghdl_rtil_signal_12_;
  wire ghdl_rtil_signal_13_;
  wire ghdl_rtil_signal_14_;
  wire [27:0] ghdl_rtil_signal_15_;
  wire ghdl_rtil_signal_16_;
  wire ghdl_rtil_signal_17_;
  wire ghdl_rtil_signal_18_;
  wire ghdl_rtil_signal_19_;
  wire [27:0] ghdl_rtil_signal_20_;
  wire ghdl_rtil_signal_21_;
  wire ghdl_rtil_signal_22_;
  wire ghdl_rtil_signal_23_;
  wire ghdl_rtil_signal_24_;
  wire ghdl_rtil_signal_25_;
  wire ghdl_rtil_signal_26_;
  wire ghdl_rtil_signal_27_;
  wire ghdl_rtil_signal_28_;
  wire ghdl_rtil_signal_29_;
  wire ghdl_rtil_signal_30_;
  wire ghdl_rtil_signal_31_;
  wire ghdl_rtil_signal_32_;
  wire [31:0] ghdl_rtil_signal_33_;
  wire [31:0] ghdl_rtil_signal_34_;
  wire [31:0] ghdl_rtil_signal_35_;
  input add_sub;
  wire add_sub;
  wire [27:0] addab;
  wire [27:0] addsubab;
  wire didnorm1;
  wire [8:0] diffexp;
  wire [8:0] diffexpab;
  wire [8:0] diffexpba;
  wire [8:0] efectexp;
  wire [27:0] efectfraca;
  wire [27:0] efectfracb;
  wire [27:0] efectfracb_align;
  wire [7:0] exp_add_norm1;
  wire [7:0] exp_add_norm1_aux;
  wire [7:0] exp_norm1;
  wire [7:0] exp_sub_norm1;
  wire expa_ff;
  wire expa_z;
  wire expb_ff;
  wire expb_z;
  input [31:0] fp_a;
  wire [31:0] fp_a;
  input [31:0] fp_b;
  wire [31:0] fp_b;
  output [31:0] fp_z;
  wire [31:0] fp_z;
  wire [27:0] frac;
  wire [27:0] frac_add_norm1;
  wire [27:0] frac_norm1;
  wire [22:0] frac_norm2;
  wire [27:0] frac_sub_norm1;
  wire fraca_z;
  wire fracb_z;
  wire isinf;
  wire isnan;
  wire isnan_a;
  wire isnan_b;
  wire isroundup;
  wire issub;
  wire istwo;
  wire iszero_a;
  wire iszero_aorb;
  wire iszero_b;
  wire overflow;
  wire sign;
  wire sign_b;
  wire [27:0] subab;
  wire [27:0] subbaexpeq;
  wire \subtraction_norm:10832 ;
  wire underflow;
  assign ghdl_rtil_signal_00_ = fp_a[30:23] == 8'hff;
  assign expa_ff = ghdl_rtil_signal_00_ ? 1'h1 : 1'h0;
  assign ghdl_rtil_signal_01_ = fp_b[30:23] == 8'hff;
  assign expb_ff = ghdl_rtil_signal_01_ ? 1'h1 : 1'h0;
  assign ghdl_rtil_signal_02_ = ! fp_a[30:23];
  assign expa_z = ghdl_rtil_signal_02_ ? 1'h1 : 1'h0;
  assign ghdl_rtil_signal_03_ = ! fp_b[30:23];
  assign expb_z = ghdl_rtil_signal_03_ ? 1'h1 : 1'h0;
  assign ghdl_rtil_signal_04_ = ! fp_a[22:0];
  assign fraca_z = ghdl_rtil_signal_04_ ? 1'h1 : 1'h0;
  assign ghdl_rtil_signal_05_ = ! fp_b[22:0];
  assign fracb_z = ghdl_rtil_signal_05_ ? 1'h1 : 1'h0;
  assign ghdl_rtil_signal_06_ = ~ fraca_z;
  assign isnan_a = expa_ff & ghdl_rtil_signal_06_;
  assign ghdl_rtil_signal_07_ = ~ fracb_z;
  assign isnan_b = expb_ff & ghdl_rtil_signal_07_;
  assign iszero_a = expa_z & fraca_z;
  assign iszero_b = expb_z & fracb_z;
  assign iszero_aorb = iszero_a | iszero_b;
  assign ghdl_rtil_signal_08_ = isnan_a | isnan_b;
  assign ghdl_rtil_signal_10_ = ghdl_rtil_signal_09_ & issub;
  assign isnan = ghdl_rtil_signal_08_ | ghdl_rtil_signal_10_;
  assign ghdl_rtil_signal_11_ = expa_ff ^ expb_ff;
  assign ghdl_rtil_signal_09_ = expa_ff & expb_ff;
  assign ghdl_rtil_signal_13_ = ghdl_rtil_signal_09_ & ghdl_rtil_signal_12_;
  assign isinf = ghdl_rtil_signal_11_ | ghdl_rtil_signal_13_;
  assign sign_b = add_sub ? fp_b[31] : ghdl_rtil_signal_14_;
  assign ghdl_rtil_signal_14_ = ~ fp_b[31];
  assign issub = fp_a[31] ^ sign_b;
  assign diffexpab = { 1'h0, fp_a[30:23] } - { 1'h0, fp_b[30:23] };
  assign diffexpba = { 1'h0, fp_b[30:23] } - { 1'h0, fp_a[30:23] };
  assign diffexp = diffexpab[8] ? diffexpba : { 1'h0, diffexpab[7:0] };
  assign efectfraca = diffexpab[8] ? { 2'h1, fp_b[22:0], 3'h0 } : { 2'h1, fp_a[22:0], 3'h0 };
  assign efectfracb = diffexpab[8] ? { 2'h1, fp_a[22:0], 3'h0 } : { 2'h1, fp_b[22:0], 3'h0 };
  assign efectexp = diffexpab[8] ? { 1'h0, fp_b[30:23] } : { 1'h0, fp_a[30:23] };
  assign addab = efectfraca + efectfracb_align;
  assign subab = efectfraca - efectfracb_align;
  assign addsubab = issub ? subab : addab;
  assign subbaexpeq[27:3] = { 2'h1, fp_b[22:0] } - { 2'h1, fp_a[22:0] };
  assign frac = iszero_a ? { 2'h1, fp_b[22:0], 3'h0 } : ghdl_rtil_signal_15_;
  assign ghdl_rtil_signal_15_ = iszero_b ? { 2'h1, fp_a[22:0], 3'h0 } : ghdl_rtil_signal_20_;
  assign ghdl_rtil_signal_16_ = ~ subbaexpeq[27];
  assign ghdl_rtil_signal_17_ = fp_a[30:23] == fp_b[30:23];
  assign ghdl_rtil_signal_18_ = ghdl_rtil_signal_17_ & ghdl_rtil_signal_16_;
  assign ghdl_rtil_signal_19_ = issub & ghdl_rtil_signal_18_;
  assign ghdl_rtil_signal_20_ = ghdl_rtil_signal_19_ ? { subbaexpeq[27:3], 3'h0 } : addsubab;
  assign ghdl_rtil_signal_21_ = fp_a[31] == sign_b;
  assign sign = ghdl_rtil_signal_21_ ? fp_a[31] : ghdl_rtil_signal_22_;
  assign ghdl_rtil_signal_22_ = diffexpab[8] ? sign_b : ghdl_rtil_signal_23_;
  assign ghdl_rtil_signal_23_ = addsubab[27] ? sign_b : fp_a[31];
  assign ghdl_rtil_signal_24_ = frac[1] | frac[0];
  assign frac_add_norm1 = frac[27] ? { 2'h1, frac[26:2], ghdl_rtil_signal_24_ } : { 1'h0, frac[26:0] };
  assign didnorm1 = frac[27] ? 1'h1 : 1'h0;
  assign ghdl_rtil_signal_25_ = frac[26:2] == 25'h1ffffff;
  assign istwo = ghdl_rtil_signal_25_ ? 1'h1 : 1'h0;
  assign exp_add_norm1_aux[0] = didnorm1 | istwo;
  assign exp_add_norm1 = efectexp[7:0] + { 7'h00, exp_add_norm1_aux[0] };
  assign frac_norm1 = issub ? frac_sub_norm1 : frac_add_norm1;
  assign exp_norm1 = issub ? exp_sub_norm1 : exp_add_norm1;
  assign ghdl_rtil_signal_26_ = frac_norm1[1] | frac_norm1[0];
  assign ghdl_rtil_signal_27_ = ghdl_rtil_signal_26_ & frac_norm1[2];
  assign ghdl_rtil_signal_28_ = frac_norm1[3:0] == 4'hc;
  assign ghdl_rtil_signal_29_ = ghdl_rtil_signal_27_ | ghdl_rtil_signal_28_;
  assign isroundup = ghdl_rtil_signal_29_ ? 1'h1 : 1'h0;
  assign frac_norm2 = frac_norm1[25:3] + { 22'h000000, isroundup };
  assign ghdl_rtil_signal_30_ = exp_norm1 == 8'hff;
  assign ghdl_rtil_signal_12_ = ~ issub;
  assign ghdl_rtil_signal_31_ = ghdl_rtil_signal_12_ & ghdl_rtil_signal_30_;
  assign overflow = ghdl_rtil_signal_31_ ? 1'h1 : 1'h0;
  assign underflow = issub ? \subtraction_norm:10832  : 1'h0;
  assign fp_z = isnan ? { sign, 31'h7f800001 } : ghdl_rtil_signal_33_;
  assign ghdl_rtil_signal_32_ = isinf | overflow;
  assign ghdl_rtil_signal_33_ = ghdl_rtil_signal_32_ ? { sign, 31'h7f800000 } : ghdl_rtil_signal_34_;
  assign ghdl_rtil_signal_34_ = iszero_aorb ? { sign, efectexp[7:0], frac[25:3] } : ghdl_rtil_signal_35_;
  assign ghdl_rtil_signal_35_ = underflow ? { sign, 31'h00000000 } : { sign, exp_norm1, frac_norm2 };
  fp_leading_zeros_and_shift_27_8_4 subtraction_norm (
    .exp(efectexp[7:0]),
    .exp_norm(exp_sub_norm1),
    .frac(frac),
    .frac_norm(frac_sub_norm1),
    .underflow(\subtraction_norm:10832 )
  );
  right_shifter_27_8_4 unioa (
    .diff_exp(diffexp),
    .frac(efectfracb),
    .frac_align(efectfracb_align)
  );
  assign exp_add_norm1_aux[7:1] = 7'h00;
  assign subbaexpeq[2:0] = 3'h0;
endmodule

module right_shifter_27_8_4(frac, diff_exp, frac_align);
  wire ghdl_rtil_signal_00_;
  wire ghdl_rtil_signal_01_;
  wire [27:0] ghdl_rtil_signal_02_;
  wire ghdl_rtil_signal_03_;
  wire ghdl_rtil_signal_04_;
  wire ghdl_rtil_signal_05_;
  wire [27:0] ghdl_rtil_signal_06_;
  wire ghdl_rtil_signal_07_;
  wire ghdl_rtil_signal_08_;
  wire ghdl_rtil_signal_09_;
  wire [27:0] ghdl_rtil_signal_10_;
  wire ghdl_rtil_signal_11_;
  wire ghdl_rtil_signal_12_;
  wire ghdl_rtil_signal_13_;
  wire [27:0] ghdl_rtil_signal_14_;
  wire ghdl_rtil_signal_15_;
  wire ghdl_rtil_signal_16_;
  wire [27:0] ghdl_rtil_signal_17_;
  wire ghdl_rtil_signal_18_;
  wire ghdl_rtil_signal_19_;
  input [8:0] diff_exp;
  wire [8:0] diff_exp;
  input [27:0] frac;
  wire [27:0] frac;
  output [27:0] frac_align;
  wire [27:0] frac_align;
  wire [27:0] fracalign_int;
  assign ghdl_rtil_signal_00_ = | frac[15:0];
  assign ghdl_rtil_signal_01_ = ghdl_rtil_signal_00_ ? 1'h1 : 1'h0;
  assign ghdl_rtil_signal_02_ = diff_exp[4] ? { 16'h0000, frac[27:16] } : frac;
  assign ghdl_rtil_signal_03_ = diff_exp[4] ? ghdl_rtil_signal_01_ : 1'h0;
  assign ghdl_rtil_signal_04_ = | ghdl_rtil_signal_02_[7:0];
  assign ghdl_rtil_signal_05_ = ghdl_rtil_signal_04_ ? 1'h1 : 1'h0;
  assign ghdl_rtil_signal_06_ = diff_exp[3] ? { 8'h00, ghdl_rtil_signal_02_[27:8] } : ghdl_rtil_signal_02_;
  assign ghdl_rtil_signal_07_ = diff_exp[3] ? ghdl_rtil_signal_05_ : ghdl_rtil_signal_03_;
  assign ghdl_rtil_signal_08_ = | ghdl_rtil_signal_06_[3:0];
  assign ghdl_rtil_signal_09_ = ghdl_rtil_signal_08_ ? 1'h1 : 1'h0;
  assign ghdl_rtil_signal_10_ = diff_exp[2] ? { 4'h0, ghdl_rtil_signal_06_[27:4] } : ghdl_rtil_signal_06_;
  assign ghdl_rtil_signal_11_ = diff_exp[2] ? ghdl_rtil_signal_09_ : ghdl_rtil_signal_07_;
  assign ghdl_rtil_signal_12_ = | ghdl_rtil_signal_10_[1:0];
  assign ghdl_rtil_signal_13_ = ghdl_rtil_signal_12_ ? 1'h1 : 1'h0;
  assign ghdl_rtil_signal_14_ = diff_exp[1] ? { 2'h0, ghdl_rtil_signal_10_[27:2] } : ghdl_rtil_signal_10_;
  assign ghdl_rtil_signal_15_ = diff_exp[1] ? ghdl_rtil_signal_13_ : ghdl_rtil_signal_11_;
  assign ghdl_rtil_signal_16_ = ghdl_rtil_signal_14_[0] ? 1'h1 : 1'h0;
  assign { fracalign_int[27:1], ghdl_rtil_signal_17_[0] } = diff_exp[0] ? { 1'h0, ghdl_rtil_signal_14_[27:1] } : ghdl_rtil_signal_14_;
  assign ghdl_rtil_signal_18_ = diff_exp[0] ? ghdl_rtil_signal_16_ : ghdl_rtil_signal_15_;
  assign fracalign_int[0] = ghdl_rtil_signal_17_[0] | ghdl_rtil_signal_18_;
  assign ghdl_rtil_signal_19_ = ! diff_exp[8:5];
  assign frac_align = ghdl_rtil_signal_19_ ? fracalign_int : 28'h0000001;
  assign ghdl_rtil_signal_17_[27:1] = fracalign_int[27:1];
endmodule

module rsqrt(i_x, o_rsqrt);
  wire ghdl_rtil_signal_0_;
  wire ghdl_rtil_signal_1_;
  wire ghdl_rtil_signal_2_;
  wire ghdl_rtil_signal_3_;
  wire ghdl_rtil_signal_4_;
  wire ghdl_rtil_signal_5_;
  wire ghdl_rtil_signal_6_;
  wire ghdl_rtil_signal_7_;
  input [31:0] i_x;
  wire [31:0] i_x;
  wire [31:0] mult1;
  wire [31:0] mult2;
  wire [31:0] mult3;
  wire [31:0] mult4;
  output [31:0] o_rsqrt;
  wire [31:0] o_rsqrt;
  wire [31:0] resta;
  wire w_case_en;
  wire [31:0] w_ieeecase;
  wire [31:0] x2;
  wire [31:0] y;
  assign y = 32'd1597463174 - { 1'h0, i_x[31:1] };
  assign x2[30:23] = i_x[30:23] - 8'h01;
  assign o_rsqrt = w_case_en ? w_ieeecase : resta;
  multfp fp1 (
    .entrada_x(32'd1069547520),
    .entrada_y(y),
    .overflow(ghdl_rtil_signal_1_),
    .salida(mult1),
    .underflow(ghdl_rtil_signal_0_)
  );
  multfp fp2 (
    .entrada_x(y),
    .entrada_y(y),
    .overflow(ghdl_rtil_signal_3_),
    .salida(mult2),
    .underflow(ghdl_rtil_signal_2_)
  );
  multfp fp3 (
    .entrada_x(y),
    .entrada_y({ i_x[31], x2[30:23], i_x[22:0] }),
    .overflow(ghdl_rtil_signal_5_),
    .salida(mult3),
    .underflow(ghdl_rtil_signal_4_)
  );
  multfp fp4 (
    .entrada_x(mult2),
    .entrada_y(mult3),
    .overflow(ghdl_rtil_signal_7_),
    .salida(mult4),
    .underflow(ghdl_rtil_signal_6_)
  );
  rsqrt_ieee ieeecase (
    .i_data(i_x),
    .o_case(w_ieeecase),
    .o_case_en(w_case_en)
  );
  suma_resta_32 sub (
    .operacion(4'h2),
    .operando1(mult1),
    .operando2(mult4),
    .resultado(resta)
  );
  assign x2[22:0] = i_x[22:0];
  assign x2[31] = i_x[31];
endmodule

module rsqrt_ieee(i_data, o_case, o_case_en);
  wire ghdl_rtil_signal_0_;
  wire [31:0] ghdl_rtil_signal_1_;
  wire ghdl_rtil_signal_2_;
  wire ghdl_rtil_signal_3_;
  wire [31:0] ghdl_rtil_signal_4_;
  wire [31:0] ghdl_rtil_signal_5_;
  wire ghdl_rtil_signal_6_;
  wire [31:0] ghdl_rtil_signal_7_;
  wire ghdl_rtil_signal_8_;
  input [31:0] i_data;
  wire [31:0] i_data;
  output [31:0] o_case;
  wire [31:0] o_case;
  output o_case_en;
  wire o_case_en;
  assign ghdl_rtil_signal_1_ = ghdl_rtil_signal_0_ ? 32'd4286578688 : 32'd4294967295;
  assign ghdl_rtil_signal_0_ = ! i_data[30:23];
  assign ghdl_rtil_signal_2_ = i_data[30:23] == 8'hff;
  assign ghdl_rtil_signal_3_ = ! i_data[22:0];
  assign ghdl_rtil_signal_4_ = ghdl_rtil_signal_3_ ? 32'd0 : 32'd4294967295;
  assign ghdl_rtil_signal_5_ = ghdl_rtil_signal_2_ ? ghdl_rtil_signal_4_ : 32'd4294967295;
  assign ghdl_rtil_signal_6_ = ghdl_rtil_signal_2_ ? 1'h1 : 1'h0;
  assign ghdl_rtil_signal_7_ = ghdl_rtil_signal_0_ ? 32'd2139095040 : ghdl_rtil_signal_5_;
  assign ghdl_rtil_signal_8_ = ghdl_rtil_signal_0_ ? 1'h1 : ghdl_rtil_signal_6_;
  assign o_case = i_data[31] ? ghdl_rtil_signal_1_ : ghdl_rtil_signal_7_;
  assign o_case_en = i_data[31] ? 1'h1 : ghdl_rtil_signal_8_;
endmodule

module sfu(clk_i, rst_n, start_i, src1_i, selop_i, Result_o, stall_o);
  wire ghdl_rtil_signal_0_;
  wire ghdl_rtil_signal_1_;
  wire ghdl_rtil_signal_2_;
  wire ghdl_rtil_signal_3_;
  wire ghdl_rtil_signal_4_;
  wire ghdl_rtil_signal_5_;
  wire ghdl_rtil_signal_6_;
  wire ghdl_rtil_signal_7_;
  output [31:0] Result_o;
  wire [31:0] Result_o;
  input clk_i;
  wire clk_i;
  wire cordic_sel;
  wire [31:0] cos_res;
  wire [31:0] exp2_res;
  reg ff_ready_cordic;
  wire [31:0] log2_res;
  wire ready_cordic;
  wire [31:0] rsqrt_res;
  input rst_n;
  wire rst_n;
  input [2:0] selop_i;
  wire [2:0] selop_i;
  wire [31:0] sin_res;
  input [31:0] src1_i;
  wire [31:0] src1_i;
  output stall_o;
  wire stall_o;
  wire start_cordic;
  input start_i;
  wire start_i;
  assign ghdl_rtil_signal_7_ = selop_i[2] | selop_i[1];
  assign cordic_sel = ~ ghdl_rtil_signal_7_;
  assign start_cordic = cordic_sel & start_i;
  assign ghdl_rtil_signal_0_ = ~ ready_cordic;
  assign ghdl_rtil_signal_1_ = ghdl_rtil_signal_0_ | ff_ready_cordic;
  assign stall_o = cordic_sel & ghdl_rtil_signal_1_;
  assign ghdl_rtil_signal_2_ = ! selop_i;
  assign ghdl_rtil_signal_3_ = selop_i == 3'h1;
  assign ghdl_rtil_signal_4_ = selop_i == 3'h2;
  assign ghdl_rtil_signal_5_ = selop_i == 3'h3;
  assign ghdl_rtil_signal_6_ = selop_i == 3'h4;
  function [31:0] \33 ;
    input [31:0] a;
    input [159:0] b;
    input [4:0] s;
    casez (s) // synopsys parallel_case
      5'b????1:
        \33  = b[31:0];
      5'b???1?:
        \33  = b[63:32];
      5'b??1??:
        \33  = b[95:64];
      5'b?1???:
        \33  = b[127:96];
      5'b1????:
        \33  = b[159:128];
      default:
        \33  = a;
    endcase
  endfunction
  assign Result_o = \33 (src1_i, { exp2_res, log2_res, rsqrt_res, cos_res, sin_res }, { ghdl_rtil_signal_6_, ghdl_rtil_signal_5_, ghdl_rtil_signal_4_, ghdl_rtil_signal_3_, ghdl_rtil_signal_2_ });
  always @(posedge clk_i, negedge rst_n)
    if (!rst_n) ff_ready_cordic <= 1'h0;
    else ff_ready_cordic <= ready_cordic;
  cordic cordic_inst (
    .iclk(clk_i),
    .ientrada(src1_i),
    .ireset(rst_n),
    .istart(start_cordic),
    .oready(ready_cordic),
    .osalida1(cos_res),
    .osalida2(sin_res)
  );
  exp2_fp_23_8_64_23 exp2_inst (
    .i_x(src1_i),
    .o_exp2(exp2_res)
  );
  log2_fp_23_8_64_23 log2_inst (
    .i_x(src1_i),
    .o_log2(log2_res)
  );
  rsqrt rsqrt_ints (
    .i_x(src1_i),
    .o_rsqrt(rsqrt_res)
  );
endmodule

module sum_ripple_carry_adder_23_0(i_term1, i_term2, i_cin, o_sum, o_cout);
  input i_cin;
  wire i_cin;
  input [22:0] i_term1;
  wire [22:0] i_term1;
  input [22:0] i_term2;
  wire [22:0] i_term2;
  output o_cout;
  wire o_cout;
  output [22:0] o_sum;
  wire [22:0] o_sum;
  wire [22:0] w_cout;
  fa \block_a:1.otherbits.b  (
    .i_cin(w_cout[21]),
    .i_term1(i_term1[22]),
    .i_term2(i_term2[22]),
    .o_cout(o_cout),
    .o_sum(o_sum[22])
  );
  fa \block_a:10.otherbits.b  (
    .i_cin(w_cout[12]),
    .i_term1(i_term1[13]),
    .i_term2(i_term2[13]),
    .o_cout(w_cout[13]),
    .o_sum(o_sum[13])
  );
  fa \block_a:11.otherbits.b  (
    .i_cin(w_cout[11]),
    .i_term1(i_term1[12]),
    .i_term2(i_term2[12]),
    .o_cout(w_cout[12]),
    .o_sum(o_sum[12])
  );
  fa \block_a:12.otherbits.b  (
    .i_cin(w_cout[10]),
    .i_term1(i_term1[11]),
    .i_term2(i_term2[11]),
    .o_cout(w_cout[11]),
    .o_sum(o_sum[11])
  );
  fa \block_a:13.otherbits.b  (
    .i_cin(w_cout[9]),
    .i_term1(i_term1[10]),
    .i_term2(i_term2[10]),
    .o_cout(w_cout[10]),
    .o_sum(o_sum[10])
  );
  fa \block_a:14.otherbits.b  (
    .i_cin(w_cout[8]),
    .i_term1(i_term1[9]),
    .i_term2(i_term2[9]),
    .o_cout(w_cout[9]),
    .o_sum(o_sum[9])
  );
  fa \block_a:15.otherbits.b  (
    .i_cin(w_cout[7]),
    .i_term1(i_term1[8]),
    .i_term2(i_term2[8]),
    .o_cout(w_cout[8]),
    .o_sum(o_sum[8])
  );
  fa \block_a:16.otherbits.b  (
    .i_cin(w_cout[6]),
    .i_term1(i_term1[7]),
    .i_term2(i_term2[7]),
    .o_cout(w_cout[7]),
    .o_sum(o_sum[7])
  );
  fa \block_a:17.otherbits.b  (
    .i_cin(w_cout[5]),
    .i_term1(i_term1[6]),
    .i_term2(i_term2[6]),
    .o_cout(w_cout[6]),
    .o_sum(o_sum[6])
  );
  fa \block_a:18.otherbits.b  (
    .i_cin(w_cout[4]),
    .i_term1(i_term1[5]),
    .i_term2(i_term2[5]),
    .o_cout(w_cout[5]),
    .o_sum(o_sum[5])
  );
  fa \block_a:19.otherbits.b  (
    .i_cin(w_cout[3]),
    .i_term1(i_term1[4]),
    .i_term2(i_term2[4]),
    .o_cout(w_cout[4]),
    .o_sum(o_sum[4])
  );
  fa \block_a:2.otherbits.b  (
    .i_cin(w_cout[20]),
    .i_term1(i_term1[21]),
    .i_term2(i_term2[21]),
    .o_cout(w_cout[21]),
    .o_sum(o_sum[21])
  );
  fa \block_a:20.otherbits.b  (
    .i_cin(w_cout[2]),
    .i_term1(i_term1[3]),
    .i_term2(i_term2[3]),
    .o_cout(w_cout[3]),
    .o_sum(o_sum[3])
  );
  fa \block_a:21.otherbits.b  (
    .i_cin(w_cout[1]),
    .i_term1(i_term1[2]),
    .i_term2(i_term2[2]),
    .o_cout(w_cout[2]),
    .o_sum(o_sum[2])
  );
  fa \block_a:22.otherbits.b  (
    .i_cin(w_cout[0]),
    .i_term1(i_term1[1]),
    .i_term2(i_term2[1]),
    .o_cout(w_cout[1]),
    .o_sum(o_sum[1])
  );
  fa \block_a:23.lowbit.a  (
    .i_cin(i_cin),
    .i_term1(i_term1[0]),
    .i_term2(i_term2[0]),
    .o_cout(w_cout[0]),
    .o_sum(o_sum[0])
  );
  fa \block_a:3.otherbits.b  (
    .i_cin(w_cout[19]),
    .i_term1(i_term1[20]),
    .i_term2(i_term2[20]),
    .o_cout(w_cout[20]),
    .o_sum(o_sum[20])
  );
  fa \block_a:4.otherbits.b  (
    .i_cin(w_cout[18]),
    .i_term1(i_term1[19]),
    .i_term2(i_term2[19]),
    .o_cout(w_cout[19]),
    .o_sum(o_sum[19])
  );
  fa \block_a:5.otherbits.b  (
    .i_cin(w_cout[17]),
    .i_term1(i_term1[18]),
    .i_term2(i_term2[18]),
    .o_cout(w_cout[18]),
    .o_sum(o_sum[18])
  );
  fa \block_a:6.otherbits.b  (
    .i_cin(w_cout[16]),
    .i_term1(i_term1[17]),
    .i_term2(i_term2[17]),
    .o_cout(w_cout[17]),
    .o_sum(o_sum[17])
  );
  fa \block_a:7.otherbits.b  (
    .i_cin(w_cout[15]),
    .i_term1(i_term1[16]),
    .i_term2(i_term2[16]),
    .o_cout(w_cout[16]),
    .o_sum(o_sum[16])
  );
  fa \block_a:8.otherbits.b  (
    .i_cin(w_cout[14]),
    .i_term1(i_term1[15]),
    .i_term2(i_term2[15]),
    .o_cout(w_cout[15]),
    .o_sum(o_sum[15])
  );
  fa \block_a:9.otherbits.b  (
    .i_cin(w_cout[13]),
    .i_term1(i_term1[14]),
    .i_term2(i_term2[14]),
    .o_cout(w_cout[14]),
    .o_sum(o_sum[14])
  );
  assign w_cout[22] = o_cout;
endmodule

module sum_ripple_carry_adder_25_0(i_term1, i_term2, i_cin, o_sum, o_cout);
  input i_cin;
  wire i_cin;
  input [24:0] i_term1;
  wire [24:0] i_term1;
  input [24:0] i_term2;
  wire [24:0] i_term2;
  output o_cout;
  wire o_cout;
  output [24:0] o_sum;
  wire [24:0] o_sum;
  wire [24:0] w_cout;
  fa \block_a:1.otherbits.b  (
    .i_cin(w_cout[23]),
    .i_term1(i_term1[24]),
    .i_term2(i_term2[24]),
    .o_cout(o_cout),
    .o_sum(o_sum[24])
  );
  fa \block_a:10.otherbits.b  (
    .i_cin(w_cout[14]),
    .i_term1(i_term1[15]),
    .i_term2(i_term2[15]),
    .o_cout(w_cout[15]),
    .o_sum(o_sum[15])
  );
  fa \block_a:11.otherbits.b  (
    .i_cin(w_cout[13]),
    .i_term1(i_term1[14]),
    .i_term2(i_term2[14]),
    .o_cout(w_cout[14]),
    .o_sum(o_sum[14])
  );
  fa \block_a:12.otherbits.b  (
    .i_cin(w_cout[12]),
    .i_term1(i_term1[13]),
    .i_term2(i_term2[13]),
    .o_cout(w_cout[13]),
    .o_sum(o_sum[13])
  );
  fa \block_a:13.otherbits.b  (
    .i_cin(w_cout[11]),
    .i_term1(i_term1[12]),
    .i_term2(i_term2[12]),
    .o_cout(w_cout[12]),
    .o_sum(o_sum[12])
  );
  fa \block_a:14.otherbits.b  (
    .i_cin(w_cout[10]),
    .i_term1(i_term1[11]),
    .i_term2(i_term2[11]),
    .o_cout(w_cout[11]),
    .o_sum(o_sum[11])
  );
  fa \block_a:15.otherbits.b  (
    .i_cin(w_cout[9]),
    .i_term1(i_term1[10]),
    .i_term2(i_term2[10]),
    .o_cout(w_cout[10]),
    .o_sum(o_sum[10])
  );
  fa \block_a:16.otherbits.b  (
    .i_cin(w_cout[8]),
    .i_term1(i_term1[9]),
    .i_term2(i_term2[9]),
    .o_cout(w_cout[9]),
    .o_sum(o_sum[9])
  );
  fa \block_a:17.otherbits.b  (
    .i_cin(w_cout[7]),
    .i_term1(i_term1[8]),
    .i_term2(i_term2[8]),
    .o_cout(w_cout[8]),
    .o_sum(o_sum[8])
  );
  fa \block_a:18.otherbits.b  (
    .i_cin(w_cout[6]),
    .i_term1(i_term1[7]),
    .i_term2(i_term2[7]),
    .o_cout(w_cout[7]),
    .o_sum(o_sum[7])
  );
  fa \block_a:19.otherbits.b  (
    .i_cin(w_cout[5]),
    .i_term1(i_term1[6]),
    .i_term2(i_term2[6]),
    .o_cout(w_cout[6]),
    .o_sum(o_sum[6])
  );
  fa \block_a:2.otherbits.b  (
    .i_cin(w_cout[22]),
    .i_term1(i_term1[23]),
    .i_term2(i_term2[23]),
    .o_cout(w_cout[23]),
    .o_sum(o_sum[23])
  );
  fa \block_a:20.otherbits.b  (
    .i_cin(w_cout[4]),
    .i_term1(i_term1[5]),
    .i_term2(i_term2[5]),
    .o_cout(w_cout[5]),
    .o_sum(o_sum[5])
  );
  fa \block_a:21.otherbits.b  (
    .i_cin(w_cout[3]),
    .i_term1(i_term1[4]),
    .i_term2(i_term2[4]),
    .o_cout(w_cout[4]),
    .o_sum(o_sum[4])
  );
  fa \block_a:22.otherbits.b  (
    .i_cin(w_cout[2]),
    .i_term1(i_term1[3]),
    .i_term2(i_term2[3]),
    .o_cout(w_cout[3]),
    .o_sum(o_sum[3])
  );
  fa \block_a:23.otherbits.b  (
    .i_cin(w_cout[1]),
    .i_term1(i_term1[2]),
    .i_term2(i_term2[2]),
    .o_cout(w_cout[2]),
    .o_sum(o_sum[2])
  );
  fa \block_a:24.otherbits.b  (
    .i_cin(w_cout[0]),
    .i_term1(i_term1[1]),
    .i_term2(i_term2[1]),
    .o_cout(w_cout[1]),
    .o_sum(o_sum[1])
  );
  fa \block_a:25.lowbit.a  (
    .i_cin(i_cin),
    .i_term1(i_term1[0]),
    .i_term2(i_term2[0]),
    .o_cout(w_cout[0]),
    .o_sum(o_sum[0])
  );
  fa \block_a:3.otherbits.b  (
    .i_cin(w_cout[21]),
    .i_term1(i_term1[22]),
    .i_term2(i_term2[22]),
    .o_cout(w_cout[22]),
    .o_sum(o_sum[22])
  );
  fa \block_a:4.otherbits.b  (
    .i_cin(w_cout[20]),
    .i_term1(i_term1[21]),
    .i_term2(i_term2[21]),
    .o_cout(w_cout[21]),
    .o_sum(o_sum[21])
  );
  fa \block_a:5.otherbits.b  (
    .i_cin(w_cout[19]),
    .i_term1(i_term1[20]),
    .i_term2(i_term2[20]),
    .o_cout(w_cout[20]),
    .o_sum(o_sum[20])
  );
  fa \block_a:6.otherbits.b  (
    .i_cin(w_cout[18]),
    .i_term1(i_term1[19]),
    .i_term2(i_term2[19]),
    .o_cout(w_cout[19]),
    .o_sum(o_sum[19])
  );
  fa \block_a:7.otherbits.b  (
    .i_cin(w_cout[17]),
    .i_term1(i_term1[18]),
    .i_term2(i_term2[18]),
    .o_cout(w_cout[18]),
    .o_sum(o_sum[18])
  );
  fa \block_a:8.otherbits.b  (
    .i_cin(w_cout[16]),
    .i_term1(i_term1[17]),
    .i_term2(i_term2[17]),
    .o_cout(w_cout[17]),
    .o_sum(o_sum[17])
  );
  fa \block_a:9.otherbits.b  (
    .i_cin(w_cout[15]),
    .i_term1(i_term1[16]),
    .i_term2(i_term2[16]),
    .o_cout(w_cout[16]),
    .o_sum(o_sum[16])
  );
  assign w_cout[24] = o_cout;
endmodule

module sum_ripple_carry_adder_26_0(i_term1, i_term2, i_cin, o_sum, o_cout);
  input i_cin;
  wire i_cin;
  input [25:0] i_term1;
  wire [25:0] i_term1;
  input [25:0] i_term2;
  wire [25:0] i_term2;
  output o_cout;
  wire o_cout;
  output [25:0] o_sum;
  wire [25:0] o_sum;
  wire [25:0] w_cout;
  fa \block_a:1.otherbits.b  (
    .i_cin(w_cout[24]),
    .i_term1(i_term1[25]),
    .i_term2(i_term2[25]),
    .o_cout(o_cout),
    .o_sum(o_sum[25])
  );
  fa \block_a:10.otherbits.b  (
    .i_cin(w_cout[15]),
    .i_term1(i_term1[16]),
    .i_term2(i_term2[16]),
    .o_cout(w_cout[16]),
    .o_sum(o_sum[16])
  );
  fa \block_a:11.otherbits.b  (
    .i_cin(w_cout[14]),
    .i_term1(i_term1[15]),
    .i_term2(i_term2[15]),
    .o_cout(w_cout[15]),
    .o_sum(o_sum[15])
  );
  fa \block_a:12.otherbits.b  (
    .i_cin(w_cout[13]),
    .i_term1(i_term1[14]),
    .i_term2(i_term2[14]),
    .o_cout(w_cout[14]),
    .o_sum(o_sum[14])
  );
  fa \block_a:13.otherbits.b  (
    .i_cin(w_cout[12]),
    .i_term1(i_term1[13]),
    .i_term2(i_term2[13]),
    .o_cout(w_cout[13]),
    .o_sum(o_sum[13])
  );
  fa \block_a:14.otherbits.b  (
    .i_cin(w_cout[11]),
    .i_term1(i_term1[12]),
    .i_term2(i_term2[12]),
    .o_cout(w_cout[12]),
    .o_sum(o_sum[12])
  );
  fa \block_a:15.otherbits.b  (
    .i_cin(w_cout[10]),
    .i_term1(i_term1[11]),
    .i_term2(i_term2[11]),
    .o_cout(w_cout[11]),
    .o_sum(o_sum[11])
  );
  fa \block_a:16.otherbits.b  (
    .i_cin(w_cout[9]),
    .i_term1(i_term1[10]),
    .i_term2(i_term2[10]),
    .o_cout(w_cout[10]),
    .o_sum(o_sum[10])
  );
  fa \block_a:17.otherbits.b  (
    .i_cin(w_cout[8]),
    .i_term1(i_term1[9]),
    .i_term2(i_term2[9]),
    .o_cout(w_cout[9]),
    .o_sum(o_sum[9])
  );
  fa \block_a:18.otherbits.b  (
    .i_cin(w_cout[7]),
    .i_term1(i_term1[8]),
    .i_term2(i_term2[8]),
    .o_cout(w_cout[8]),
    .o_sum(o_sum[8])
  );
  fa \block_a:19.otherbits.b  (
    .i_cin(w_cout[6]),
    .i_term1(i_term1[7]),
    .i_term2(i_term2[7]),
    .o_cout(w_cout[7]),
    .o_sum(o_sum[7])
  );
  fa \block_a:2.otherbits.b  (
    .i_cin(w_cout[23]),
    .i_term1(i_term1[24]),
    .i_term2(i_term2[24]),
    .o_cout(w_cout[24]),
    .o_sum(o_sum[24])
  );
  fa \block_a:20.otherbits.b  (
    .i_cin(w_cout[5]),
    .i_term1(i_term1[6]),
    .i_term2(i_term2[6]),
    .o_cout(w_cout[6]),
    .o_sum(o_sum[6])
  );
  fa \block_a:21.otherbits.b  (
    .i_cin(w_cout[4]),
    .i_term1(i_term1[5]),
    .i_term2(i_term2[5]),
    .o_cout(w_cout[5]),
    .o_sum(o_sum[5])
  );
  fa \block_a:22.otherbits.b  (
    .i_cin(w_cout[3]),
    .i_term1(i_term1[4]),
    .i_term2(i_term2[4]),
    .o_cout(w_cout[4]),
    .o_sum(o_sum[4])
  );
  fa \block_a:23.otherbits.b  (
    .i_cin(w_cout[2]),
    .i_term1(i_term1[3]),
    .i_term2(i_term2[3]),
    .o_cout(w_cout[3]),
    .o_sum(o_sum[3])
  );
  fa \block_a:24.otherbits.b  (
    .i_cin(w_cout[1]),
    .i_term1(i_term1[2]),
    .i_term2(i_term2[2]),
    .o_cout(w_cout[2]),
    .o_sum(o_sum[2])
  );
  fa \block_a:25.otherbits.b  (
    .i_cin(w_cout[0]),
    .i_term1(i_term1[1]),
    .i_term2(i_term2[1]),
    .o_cout(w_cout[1]),
    .o_sum(o_sum[1])
  );
  fa \block_a:26.lowbit.a  (
    .i_cin(i_cin),
    .i_term1(i_term1[0]),
    .i_term2(i_term2[0]),
    .o_cout(w_cout[0]),
    .o_sum(o_sum[0])
  );
  fa \block_a:3.otherbits.b  (
    .i_cin(w_cout[22]),
    .i_term1(i_term1[23]),
    .i_term2(i_term2[23]),
    .o_cout(w_cout[23]),
    .o_sum(o_sum[23])
  );
  fa \block_a:4.otherbits.b  (
    .i_cin(w_cout[21]),
    .i_term1(i_term1[22]),
    .i_term2(i_term2[22]),
    .o_cout(w_cout[22]),
    .o_sum(o_sum[22])
  );
  fa \block_a:5.otherbits.b  (
    .i_cin(w_cout[20]),
    .i_term1(i_term1[21]),
    .i_term2(i_term2[21]),
    .o_cout(w_cout[21]),
    .o_sum(o_sum[21])
  );
  fa \block_a:6.otherbits.b  (
    .i_cin(w_cout[19]),
    .i_term1(i_term1[20]),
    .i_term2(i_term2[20]),
    .o_cout(w_cout[20]),
    .o_sum(o_sum[20])
  );
  fa \block_a:7.otherbits.b  (
    .i_cin(w_cout[18]),
    .i_term1(i_term1[19]),
    .i_term2(i_term2[19]),
    .o_cout(w_cout[19]),
    .o_sum(o_sum[19])
  );
  fa \block_a:8.otherbits.b  (
    .i_cin(w_cout[17]),
    .i_term1(i_term1[18]),
    .i_term2(i_term2[18]),
    .o_cout(w_cout[18]),
    .o_sum(o_sum[18])
  );
  fa \block_a:9.otherbits.b  (
    .i_cin(w_cout[16]),
    .i_term1(i_term1[17]),
    .i_term2(i_term2[17]),
    .o_cout(w_cout[17]),
    .o_sum(o_sum[17])
  );
  assign w_cout[25] = o_cout;
endmodule

module sum_ripple_carry_adder_32_0(i_term1, i_term2, i_cin, o_sum, o_cout);
  input i_cin;
  wire i_cin;
  input [31:0] i_term1;
  wire [31:0] i_term1;
  input [31:0] i_term2;
  wire [31:0] i_term2;
  output o_cout;
  wire o_cout;
  output [31:0] o_sum;
  wire [31:0] o_sum;
  wire [31:0] w_cout;
  fa \block_a:1.otherbits.b  (
    .i_cin(w_cout[30]),
    .i_term1(i_term1[31]),
    .i_term2(i_term2[31]),
    .o_cout(o_cout),
    .o_sum(o_sum[31])
  );
  fa \block_a:10.otherbits.b  (
    .i_cin(w_cout[21]),
    .i_term1(i_term1[22]),
    .i_term2(i_term2[22]),
    .o_cout(w_cout[22]),
    .o_sum(o_sum[22])
  );
  fa \block_a:11.otherbits.b  (
    .i_cin(w_cout[20]),
    .i_term1(i_term1[21]),
    .i_term2(i_term2[21]),
    .o_cout(w_cout[21]),
    .o_sum(o_sum[21])
  );
  fa \block_a:12.otherbits.b  (
    .i_cin(w_cout[19]),
    .i_term1(i_term1[20]),
    .i_term2(i_term2[20]),
    .o_cout(w_cout[20]),
    .o_sum(o_sum[20])
  );
  fa \block_a:13.otherbits.b  (
    .i_cin(w_cout[18]),
    .i_term1(i_term1[19]),
    .i_term2(i_term2[19]),
    .o_cout(w_cout[19]),
    .o_sum(o_sum[19])
  );
  fa \block_a:14.otherbits.b  (
    .i_cin(w_cout[17]),
    .i_term1(i_term1[18]),
    .i_term2(i_term2[18]),
    .o_cout(w_cout[18]),
    .o_sum(o_sum[18])
  );
  fa \block_a:15.otherbits.b  (
    .i_cin(w_cout[16]),
    .i_term1(i_term1[17]),
    .i_term2(i_term2[17]),
    .o_cout(w_cout[17]),
    .o_sum(o_sum[17])
  );
  fa \block_a:16.otherbits.b  (
    .i_cin(w_cout[15]),
    .i_term1(i_term1[16]),
    .i_term2(i_term2[16]),
    .o_cout(w_cout[16]),
    .o_sum(o_sum[16])
  );
  fa \block_a:17.otherbits.b  (
    .i_cin(w_cout[14]),
    .i_term1(i_term1[15]),
    .i_term2(i_term2[15]),
    .o_cout(w_cout[15]),
    .o_sum(o_sum[15])
  );
  fa \block_a:18.otherbits.b  (
    .i_cin(w_cout[13]),
    .i_term1(i_term1[14]),
    .i_term2(i_term2[14]),
    .o_cout(w_cout[14]),
    .o_sum(o_sum[14])
  );
  fa \block_a:19.otherbits.b  (
    .i_cin(w_cout[12]),
    .i_term1(i_term1[13]),
    .i_term2(i_term2[13]),
    .o_cout(w_cout[13]),
    .o_sum(o_sum[13])
  );
  fa \block_a:2.otherbits.b  (
    .i_cin(w_cout[29]),
    .i_term1(i_term1[30]),
    .i_term2(i_term2[30]),
    .o_cout(w_cout[30]),
    .o_sum(o_sum[30])
  );
  fa \block_a:20.otherbits.b  (
    .i_cin(w_cout[11]),
    .i_term1(i_term1[12]),
    .i_term2(i_term2[12]),
    .o_cout(w_cout[12]),
    .o_sum(o_sum[12])
  );
  fa \block_a:21.otherbits.b  (
    .i_cin(w_cout[10]),
    .i_term1(i_term1[11]),
    .i_term2(i_term2[11]),
    .o_cout(w_cout[11]),
    .o_sum(o_sum[11])
  );
  fa \block_a:22.otherbits.b  (
    .i_cin(w_cout[9]),
    .i_term1(i_term1[10]),
    .i_term2(i_term2[10]),
    .o_cout(w_cout[10]),
    .o_sum(o_sum[10])
  );
  fa \block_a:23.otherbits.b  (
    .i_cin(w_cout[8]),
    .i_term1(i_term1[9]),
    .i_term2(i_term2[9]),
    .o_cout(w_cout[9]),
    .o_sum(o_sum[9])
  );
  fa \block_a:24.otherbits.b  (
    .i_cin(w_cout[7]),
    .i_term1(i_term1[8]),
    .i_term2(i_term2[8]),
    .o_cout(w_cout[8]),
    .o_sum(o_sum[8])
  );
  fa \block_a:25.otherbits.b  (
    .i_cin(w_cout[6]),
    .i_term1(i_term1[7]),
    .i_term2(i_term2[7]),
    .o_cout(w_cout[7]),
    .o_sum(o_sum[7])
  );
  fa \block_a:26.otherbits.b  (
    .i_cin(w_cout[5]),
    .i_term1(i_term1[6]),
    .i_term2(i_term2[6]),
    .o_cout(w_cout[6]),
    .o_sum(o_sum[6])
  );
  fa \block_a:27.otherbits.b  (
    .i_cin(w_cout[4]),
    .i_term1(i_term1[5]),
    .i_term2(i_term2[5]),
    .o_cout(w_cout[5]),
    .o_sum(o_sum[5])
  );
  fa \block_a:28.otherbits.b  (
    .i_cin(w_cout[3]),
    .i_term1(i_term1[4]),
    .i_term2(i_term2[4]),
    .o_cout(w_cout[4]),
    .o_sum(o_sum[4])
  );
  fa \block_a:29.otherbits.b  (
    .i_cin(w_cout[2]),
    .i_term1(i_term1[3]),
    .i_term2(i_term2[3]),
    .o_cout(w_cout[3]),
    .o_sum(o_sum[3])
  );
  fa \block_a:3.otherbits.b  (
    .i_cin(w_cout[28]),
    .i_term1(i_term1[29]),
    .i_term2(i_term2[29]),
    .o_cout(w_cout[29]),
    .o_sum(o_sum[29])
  );
  fa \block_a:30.otherbits.b  (
    .i_cin(w_cout[1]),
    .i_term1(i_term1[2]),
    .i_term2(i_term2[2]),
    .o_cout(w_cout[2]),
    .o_sum(o_sum[2])
  );
  fa \block_a:31.otherbits.b  (
    .i_cin(w_cout[0]),
    .i_term1(i_term1[1]),
    .i_term2(i_term2[1]),
    .o_cout(w_cout[1]),
    .o_sum(o_sum[1])
  );
  fa \block_a:32.lowbit.a  (
    .i_cin(i_cin),
    .i_term1(i_term1[0]),
    .i_term2(i_term2[0]),
    .o_cout(w_cout[0]),
    .o_sum(o_sum[0])
  );
  fa \block_a:4.otherbits.b  (
    .i_cin(w_cout[27]),
    .i_term1(i_term1[28]),
    .i_term2(i_term2[28]),
    .o_cout(w_cout[28]),
    .o_sum(o_sum[28])
  );
  fa \block_a:5.otherbits.b  (
    .i_cin(w_cout[26]),
    .i_term1(i_term1[27]),
    .i_term2(i_term2[27]),
    .o_cout(w_cout[27]),
    .o_sum(o_sum[27])
  );
  fa \block_a:6.otherbits.b  (
    .i_cin(w_cout[25]),
    .i_term1(i_term1[26]),
    .i_term2(i_term2[26]),
    .o_cout(w_cout[26]),
    .o_sum(o_sum[26])
  );
  fa \block_a:7.otherbits.b  (
    .i_cin(w_cout[24]),
    .i_term1(i_term1[25]),
    .i_term2(i_term2[25]),
    .o_cout(w_cout[25]),
    .o_sum(o_sum[25])
  );
  fa \block_a:8.otherbits.b  (
    .i_cin(w_cout[23]),
    .i_term1(i_term1[24]),
    .i_term2(i_term2[24]),
    .o_cout(w_cout[24]),
    .o_sum(o_sum[24])
  );
  fa \block_a:9.otherbits.b  (
    .i_cin(w_cout[22]),
    .i_term1(i_term1[23]),
    .i_term2(i_term2[23]),
    .o_cout(w_cout[23]),
    .o_sum(o_sum[23])
  );
  assign w_cout[31] = o_cout;
endmodule

module sum_ripple_carry_adder_5_0(i_term1, i_term2, i_cin, o_sum, o_cout);
  input i_cin;
  wire i_cin;
  input [4:0] i_term1;
  wire [4:0] i_term1;
  input [4:0] i_term2;
  wire [4:0] i_term2;
  output o_cout;
  wire o_cout;
  output [4:0] o_sum;
  wire [4:0] o_sum;
  wire [4:0] w_cout;
  fa \block_a:1.otherbits.b  (
    .i_cin(w_cout[3]),
    .i_term1(i_term1[4]),
    .i_term2(i_term2[4]),
    .o_cout(o_cout),
    .o_sum(o_sum[4])
  );
  fa \block_a:2.otherbits.b  (
    .i_cin(w_cout[2]),
    .i_term1(i_term1[3]),
    .i_term2(i_term2[3]),
    .o_cout(w_cout[3]),
    .o_sum(o_sum[3])
  );
  fa \block_a:3.otherbits.b  (
    .i_cin(w_cout[1]),
    .i_term1(i_term1[2]),
    .i_term2(i_term2[2]),
    .o_cout(w_cout[2]),
    .o_sum(o_sum[2])
  );
  fa \block_a:4.otherbits.b  (
    .i_cin(w_cout[0]),
    .i_term1(i_term1[1]),
    .i_term2(i_term2[1]),
    .o_cout(w_cout[1]),
    .o_sum(o_sum[1])
  );
  fa \block_a:5.lowbit.a  (
    .i_cin(i_cin),
    .i_term1(i_term1[0]),
    .i_term2(i_term2[0]),
    .o_cout(w_cout[0]),
    .o_sum(o_sum[0])
  );
  assign w_cout[4] = o_cout;
endmodule

module sum_ripple_carry_adder_7_0(i_term1, i_term2, i_cin, o_sum, o_cout);
  input i_cin;
  wire i_cin;
  input [6:0] i_term1;
  wire [6:0] i_term1;
  input [6:0] i_term2;
  wire [6:0] i_term2;
  output o_cout;
  wire o_cout;
  output [6:0] o_sum;
  wire [6:0] o_sum;
  wire [6:0] w_cout;
  fa \block_a:1.otherbits.b  (
    .i_cin(w_cout[5]),
    .i_term1(i_term1[6]),
    .i_term2(i_term2[6]),
    .o_cout(o_cout),
    .o_sum(o_sum[6])
  );
  fa \block_a:2.otherbits.b  (
    .i_cin(w_cout[4]),
    .i_term1(i_term1[5]),
    .i_term2(i_term2[5]),
    .o_cout(w_cout[5]),
    .o_sum(o_sum[5])
  );
  fa \block_a:3.otherbits.b  (
    .i_cin(w_cout[3]),
    .i_term1(i_term1[4]),
    .i_term2(i_term2[4]),
    .o_cout(w_cout[4]),
    .o_sum(o_sum[4])
  );
  fa \block_a:4.otherbits.b  (
    .i_cin(w_cout[2]),
    .i_term1(i_term1[3]),
    .i_term2(i_term2[3]),
    .o_cout(w_cout[3]),
    .o_sum(o_sum[3])
  );
  fa \block_a:5.otherbits.b  (
    .i_cin(w_cout[1]),
    .i_term1(i_term1[2]),
    .i_term2(i_term2[2]),
    .o_cout(w_cout[2]),
    .o_sum(o_sum[2])
  );
  fa \block_a:6.otherbits.b  (
    .i_cin(w_cout[0]),
    .i_term1(i_term1[1]),
    .i_term2(i_term2[1]),
    .o_cout(w_cout[1]),
    .o_sum(o_sum[1])
  );
  fa \block_a:7.lowbit.a  (
    .i_cin(i_cin),
    .i_term1(i_term1[0]),
    .i_term2(i_term2[0]),
    .o_cout(w_cout[0]),
    .o_sum(o_sum[0])
  );
  assign w_cout[6] = o_cout;
endmodule

module sum_ripple_carry_adder_7_1(i_term1, i_term2, i_cin, o_sum, o_cout);
  input i_cin;
  wire i_cin;
  input [6:0] i_term1;
  wire [6:0] i_term1;
  input [6:0] i_term2;
  wire [6:0] i_term2;
  output o_cout;
  wire o_cout;
  output [6:0] o_sum;
  wire [6:0] o_sum;
  wire [6:0] w_cout;
  wire [6:0] w_term1;
  assign w_term1[6] = ~ i_term1[6];
  assign w_term1[5] = ~ i_term1[5];
  assign w_term1[4] = ~ i_term1[4];
  assign w_term1[3] = ~ i_term1[3];
  assign w_term1[2] = ~ i_term1[2];
  assign w_term1[1] = ~ i_term1[1];
  assign w_term1[0] = ~ i_term1[0];
  fa \block_a:1.otherbits.b  (
    .i_cin(w_cout[5]),
    .i_term1(w_term1[6]),
    .i_term2(i_term2[6]),
    .o_cout(o_cout),
    .o_sum(o_sum[6])
  );
  fa \block_a:2.otherbits.b  (
    .i_cin(w_cout[4]),
    .i_term1(w_term1[5]),
    .i_term2(i_term2[5]),
    .o_cout(w_cout[5]),
    .o_sum(o_sum[5])
  );
  fa \block_a:3.otherbits.b  (
    .i_cin(w_cout[3]),
    .i_term1(w_term1[4]),
    .i_term2(i_term2[4]),
    .o_cout(w_cout[4]),
    .o_sum(o_sum[4])
  );
  fa \block_a:4.otherbits.b  (
    .i_cin(w_cout[2]),
    .i_term1(w_term1[3]),
    .i_term2(i_term2[3]),
    .o_cout(w_cout[3]),
    .o_sum(o_sum[3])
  );
  fa \block_a:5.otherbits.b  (
    .i_cin(w_cout[1]),
    .i_term1(w_term1[2]),
    .i_term2(i_term2[2]),
    .o_cout(w_cout[2]),
    .o_sum(o_sum[2])
  );
  fa \block_a:6.otherbits.b  (
    .i_cin(w_cout[0]),
    .i_term1(w_term1[1]),
    .i_term2(i_term2[1]),
    .o_cout(w_cout[1]),
    .o_sum(o_sum[1])
  );
  fa \block_a:7.lowbit.a  (
    .i_cin(i_cin),
    .i_term1(w_term1[0]),
    .i_term2(i_term2[0]),
    .o_cout(w_cout[0]),
    .o_sum(o_sum[0])
  );
  assign w_cout[6] = o_cout;
endmodule

module sum_ripple_carry_adder_7_2(i_term1, i_term2, i_cin, o_sum, o_cout);
  input i_cin;
  wire i_cin;
  input [6:0] i_term1;
  wire [6:0] i_term1;
  input [6:0] i_term2;
  wire [6:0] i_term2;
  output o_cout;
  wire o_cout;
  output [6:0] o_sum;
  wire [6:0] o_sum;
  wire [6:0] w_cout;
  wire [6:0] w_term2;
  assign w_term2[6] = ~ i_term2[6];
  assign w_term2[5] = ~ i_term2[5];
  assign w_term2[4] = ~ i_term2[4];
  assign w_term2[3] = ~ i_term2[3];
  assign w_term2[2] = ~ i_term2[2];
  assign w_term2[1] = ~ i_term2[1];
  assign w_term2[0] = ~ i_term2[0];
  fa \block_a:1.otherbits.b  (
    .i_cin(w_cout[5]),
    .i_term1(i_term1[6]),
    .i_term2(w_term2[6]),
    .o_cout(o_cout),
    .o_sum(o_sum[6])
  );
  fa \block_a:2.otherbits.b  (
    .i_cin(w_cout[4]),
    .i_term1(i_term1[5]),
    .i_term2(w_term2[5]),
    .o_cout(w_cout[5]),
    .o_sum(o_sum[5])
  );
  fa \block_a:3.otherbits.b  (
    .i_cin(w_cout[3]),
    .i_term1(i_term1[4]),
    .i_term2(w_term2[4]),
    .o_cout(w_cout[4]),
    .o_sum(o_sum[4])
  );
  fa \block_a:4.otherbits.b  (
    .i_cin(w_cout[2]),
    .i_term1(i_term1[3]),
    .i_term2(w_term2[3]),
    .o_cout(w_cout[3]),
    .o_sum(o_sum[3])
  );
  fa \block_a:5.otherbits.b  (
    .i_cin(w_cout[1]),
    .i_term1(i_term1[2]),
    .i_term2(w_term2[2]),
    .o_cout(w_cout[2]),
    .o_sum(o_sum[2])
  );
  fa \block_a:6.otherbits.b  (
    .i_cin(w_cout[0]),
    .i_term1(i_term1[1]),
    .i_term2(w_term2[1]),
    .o_cout(w_cout[1]),
    .o_sum(o_sum[1])
  );
  fa \block_a:7.lowbit.a  (
    .i_cin(i_cin),
    .i_term1(i_term1[0]),
    .i_term2(w_term2[0]),
    .o_cout(w_cout[0]),
    .o_sum(o_sum[0])
  );
  assign w_cout[6] = o_cout;
endmodule

module suma_resta_32(operando1, operando2, operacion, resultado);
  input [3:0] operacion;
  wire [3:0] operacion;
  input [31:0] operando1;
  wire [31:0] operando1;
  input [31:0] operando2;
  wire [31:0] operando2;
  output [31:0] resultado;
  wire [31:0] resultado;
  prueba_32_24_8 p2 (
    .add_sub(operacion[0]),
    .fp_a(operando1),
    .fp_b(operando2),
    .fp_z(resultado)
  );
endmodule
